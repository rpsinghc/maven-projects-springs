# <param name="archive.scheduler.process.delete">
#    <alias>Process Data Purging</alias>
#    <visible>true</visible>
#    <description>This property defines if the Scheduler to purge process data needs to be enabled.</description>
#    <legalvalues>true|false</legalvalues>
# </param>

archive.scheduler.process.delete=false

# <param name="archive.scheduler.process.expression">
#    <alias>Process Data Purging Scheduler Expression</alias>
#    <visible>true</visible>
#    <description>This property defines if the Scheduling expression to purge process data. Please refer Quartz CronExpression class JavaDocs for help on expression.</description>
#    <legalvalues>ANY</legalvalues>
# </param>

archive.scheduler.process.expression=0 0 23 * * ?

# <param name="archive.scheduler.process.databefore">
#    <alias>Purge Process completed Before mentioned date</alias>
#    <visible>true</visible>
#    <description>All the process which are completed, removed or terminated before the mentioned days will be removed. If 30d is mentioned, process completed, removed or terminated before 30 days will be purged.</description>
#    <legalvalues>[any non-zero positive integer]d</legalvalues>
# </param>

archive.scheduler.process.databefore=30d

# <param name="archive.scheduler.event.delete">
#    <alias>Event Data Purging</alias>
#    <visible>true</visible>
#    <description>This property defines if the Scheduler to purge event data needs to be enabled.</description>
#    <legalvalues>true|false</legalvalues>
# </param>

archive.scheduler.event.delete=false

# <param name="archive.scheduler.event.expression">
#    <alias>Event Data Purging Scheduler Expression</alias>
#    <visible>true</visible>
#    <description>This property defines if the Scheduling expression to purge event data. Please refer Quartz CronExpression class JavaDocs for help on expression.</description>
#    <legalvalues>ANY</legalvalues>
# </param>

archive.scheduler.event.expression=0 0 22 * * ?

# <param name="archive.scheduler.process.delete">
#    <alias>Process Data Purging</alias>
#    <visible>true</visible>
#    <description>All the events which are created before the mentioned days will be removed. If 30d is mentioned, events created before 30 days will be purged.</description>
#    <legalvalues>[any non-zero positive integer]d</legalvalues>
# </param>

archive.scheduler.event.databefore=30d

#============================================================================
# Configure Main Scheduler Properties
#============================================================================
org.quartz.scheduler.instanceName = ArchiveScheduler
org.quartz.scheduler.instanceId = AUTO

#============================================================================
# Configure ThreadPool
#============================================================================
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount = 3

#============================================================================
# Configure JobStore
#============================================================================
org.quartz.jobStore.misfireThreshold = 60000
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
org.quartz.jobStore.useProperties = false
org.quartz.jobStore.dataSource = arcsDS
org.quartz.jobStore.tablePrefix = ARCS_
org.quartz.jobStore.lockHandler.class=org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore
org.quartz.jobStore.lockHandler.updateLockRowSQL = UPDATE {0}LOCKS SET LOCK_NAME = LOCK_NAME WHERE LOCK_NAME = ?

org.quartz.jobStore.isClustered = true
org.quartz.jobStore.clusterCheckinInterval = 20000

#============================================================================
# Configure Datasources
#============================================================================
org.quartz.dataSource.arcsDS.maxConnections = 3
org.quartz.dataSource.arcsDS.validationQuery=SELECT 1 FROM SBM_TEST
