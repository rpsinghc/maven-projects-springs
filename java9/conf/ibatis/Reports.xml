<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL MAP 2.0//EN" 
 "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="Reports">

	<!--- Showing data by ID --> 
	
		<resultMap id="timeTrackerVO" class="com.worldcheck.atlas.vo.report.TimeTrackerVO">
			<result property="office" column="office" />
			<result property="task" column="task" />
			<result property="reportType" column="reportType" />
			<result property="averageTime" column="averageTime" />
		</resultMap>
	  
		<resultMap id="timeTrackerRawDataVO" class="com.worldcheck.atlas.vo.report.TimeTrackerRawDataVO">
			<result property="office" column="office" />
			<result property="CRN" column="CRN" />
			<result property="reportType" column="REPORT_TYPE" />
			<result property="userName" column="user_id" />
			<result property="taskName" column="TASK_NAME" />
			<result property="taskStatus" column="Task_Status" />
			<result property="startTime" column="startTime" />
			<result property="endTime" column="endTime" />
			<result property="totalTime" column="totalTime" />
		</resultMap>
		
		<select id="getTimeTrackerDS" resultMap="timeTrackerVO" parameterClass="java.util.HashMap">
			SELECT * FROM (SELECT  searchResult.*, ROWNUM rn FROM ( select OFFICE,TASKNAME task,REPORT_TYPE reportType,
				ROUND(decode(TOTAL_TIME/(decode(CASE_COUNT,0,null,CASE_COUNT)),null,0.0,TOTAL_TIME/CASE_COUNT),2) averageTime
			from DW_TIME_TRACKER 
			where month = (#month#) and year = (#year#)
				<isNotNull prepend="AND" property="office">
					<isNotEmpty property="office">
						office = (#office#)
					</isNotEmpty>
				</isNotNull>
			order by $sort$ $dir$ )searchResult WHERE ROWNUM <![CDATA[ <= ]]> #limit#) WHERE rn <![CDATA[ >= ]]> #start#
		</select>
		
		
		<select id="getTimeTrackerDSCount" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
			select count(*) 
			from DW_TIME_TRACKER 
			where month = (#month#) and year = (#year#)
				<isNotNull prepend="AND" property="office">
					<isNotEmpty property="office">
						office = (#office#)
					</isNotEmpty>
				</isNotNull>
		</select>
		
		<select id="getTimeTrackerRD" resultMap="timeTrackerRawDataVO" parameterClass="java.util.HashMap">
			select office, user_id ,CRN,REPORT_TYPE,TASK_NAME,Task_Status,
			   startTime, endTime, totalTime
		    from DW_TIMETRACKER_RAW_DATA  
		    where TRUNC(REQ_RECD_DT) <![CDATA[ >= ]]> TO_DATE(#startDate#, 'DD Mon YYYY') 
				and TRUNC(REQ_RECD_DT) <![CDATA[ <= ]]> TO_DATE(#endDate#, 'DD Mon YYYY') 
		    order by CRN
		</select>
	  
		<select id="getTimeTrackerRDCount" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
			select count(*) 
		    from DW_TIMETRACKER_RAW_DATA  
		    where TRUNC(REQ_RECD_DT) <![CDATA[ >= ]]> TO_DATE(#startDate#, 'DD Mon YYYY') 
				and TRUNC(REQ_RECD_DT) <![CDATA[ <= ]]> TO_DATE(#endDate#, 'DD Mon YYYY') 
		    order by CRN
		</select>
	  
		<select id="getVendorExpenditureDS" parameterClass="java.util.Map" resultClass="com.worldcheck.atlas.vo.report.VendorDataSummaryVO">
			SELECT * FROM (SELECT  searchResult.*, ROWNUM rn FROM (
			select to_char(to_date(CASE_REC_MONTH, 'MM'), 'Month') monthName, VENDOR_TYPE vendorType, VENDORNAME vendorName, AMOUNT amount
			from DW_VENDOR_DETAILS
			where CASE_REC_MONTH = to_number(#month#) 
			and CASE_REC_YEAR = to_number(#year#)
			<isNotNull property="sort">
				<isNotEmpty property="sort">
					<isNotEqual property="sort" compareValue="amount">
						order by upper($sort$) $dir$) searchResult 
					</isNotEqual>
					<isEqual property="sort" compareValue="amount">
						order by $sort$ $dir$) searchResult 
					</isEqual>
				</isNotEmpty>
				<isEmpty property="sort">
					order by UPPER(vendorType) asc, UPPER(vendorName) asc) searchResult
				</isEmpty>
			</isNotNull>
			<isNull property="sort">
				order by UPPER(vendorType) asc, UPPER(vendorName) asc) searchResult
			</isNull>
			WHERE ROWNUM <![CDATA[ <= ]]> #limit#) WHERE rn <![CDATA[ >= ]]> #start#
		</select>
		
		<select id="getVendorExpenditureDSCount" parameterClass="java.util.Map" resultClass="int">
			select count(*)
			from DW_VENDOR_DETAILS
			where CASE_REC_MONTH = to_number(#month#) 
			and CASE_REC_YEAR = to_number(#year#)
		</select>
		
		<select id="getVendorExpenditureRD" parameterClass="java.util.Map" resultClass="com.worldcheck.atlas.vo.report.VendorRawDataVO">
            select
            crn,
            primarySubName,
            primarySubCountry,
            otherSubjects,
            vendorType,
            vendorName,
            vendorStatus,
            to_char(jobRequestSentDate,'DD Mon YYYY') jobRequestSentDate,
            to_char(commissioningDate,'DD Mon YYYY') commissioningDate,
            to_char(vendorDueDate,'DD Mon YYYY') vendorDueDate,
            to_char(vendorSubmissionDate,'DD Mon YYYY') vendorSubmissionDate,
            vendorCurrency,
            vendorAmount,
            caseCurrency,
            caseFee,
            vendorManagerMsg,
            comments, 
            createdBy,
            to_char(createdOn,'DD-MM-YY HH:MI:SS') createdOn,
            biVendorManager,
            caseManager,
            primaryOffice primaryTeamOffice,
            to_char(biVendorFinDueDate,'dd Mon YYYY') biVendorFinalDueDate,
            to_char(primaryFinDueDate,'dd Mon YYYY') primaryFinalDueDate,
            caseStatus,
            (case when (case_status_id in ('4','5','6')) then null else taskStatus end) as taskStatus,
            immediateAttention,
            nameSearched,
            country,
            ndaExists,
            contractExists
            from
            dw_vendor_raw_data
            where
            (
                (
                    crn is not null 
                    and CASE_STATUS_ID in ($caseTypeList$)
                    and TRUNC(REQ_RECD_DT) <![CDATA[ >= ]]> TO_DATE(#startDate#, 'DD Mon YYYY')
                    and TRUNC(REQ_RECD_DT) <![CDATA[ <= ]]> TO_DATE(#endDate#, 'DD Mon YYYY')
                )
                or
                (
					crn is null
					and 
					(
						COMMISSIONINGDATE is null
						or  
	                    (
		                    TRUNC(COMMISSIONINGDATE) <![CDATA[ >= ]]> TO_DATE(#startDate#, 'DD Mon YYYY')
							and TRUNC(COMMISSIONINGDATE) <![CDATA[ <= ]]> TO_DATE(#endDate#, 'DD Mon YYYY')
						)
					)
                )
            ) order by crn, UPPER(vendorName) asc
		</select>
		<select id="getVendorExpenditureRDCount" parameterClass="java.util.Map" resultClass="int">
            select
            count(*)
            from
            dw_vendor_raw_data
            where
            (
                (
                    crn is not null 
                    and CASE_STATUS_ID in ($caseTypeList$)
                    and TRUNC(REQ_RECD_DT) <![CDATA[ >= ]]> TO_DATE(#startDate#, 'DD Mon YYYY')
                    and TRUNC(REQ_RECD_DT) <![CDATA[ <= ]]> TO_DATE(#endDate#, 'DD Mon YYYY')
                )
                or
                (
					crn is null
					and 
					(
						COMMISSIONINGDATE is null
						or  
	                    (
		                    TRUNC(COMMISSIONINGDATE) <![CDATA[ >= ]]> TO_DATE(#startDate#, 'DD Mon YYYY')
							and TRUNC(COMMISSIONINGDATE) <![CDATA[ <= ]]> TO_DATE(#endDate#, 'DD Mon YYYY')
						)
					)
                )
            ) order by crn, UPPER(vendorName) asc
		</select>  
	  <resultMap id="financeRawDataResult"   class="com.worldcheck.atlas.vo.report.FinanceRawDataVO">
		<result property="CRN" column="CRN"/>
		<result property="clientCode" column="CLIENT_CODE"/>
		<result property="clientName" column="CLIENT_NAME"/>

		<result property="clientRefNo" column="CLIENT_REF"/>
		<result property="branchOffice" column="OFFICE"/>
		<result property="clientAddress" column="INVOICE_ADDRESS"/>

		<result property="reportType" column="REPORT_TYPE"/>		
		<result property="PTOffice" column="Primary team office"/>
		<result property="caseReceivedDate" column="case recieved"/>
		<result property="salesmonth" column="SALES_MONTH"/>

		<result property="clientFinalSentDate" column="sent date"/>
		<result property="caseManager" column="CASE_MGR_ID"/>
		<result property="caseStatus" column="case status"/>

		<result property="currency" column="CURRENCY"/>
		<result property="caseFee" column="CASE_FEE"/>

		<result property="disbrusement" column="DISBURSEMENT"/>
		<result property="invoiceNumber" column="INVOICE_NUMBER"/>
		<result property="invoiceValue" column="INVOICE_AMOUNT"/>

		<result property="invoiceDate" column="INVOICE_DATE"/>
		<result property="subjects" column="sub_concat"/>
		<result property="subjectCountries" column="country"/>
		<result property="bulkOrderID" column="BULK_ORDER_ID"/>
		<result property="discount" column="DISCOUNT"/>
		<result property="cancelledCharges" column="CANCELLED_WITH_CHARGES"/>
		
		<result property="invoice_amount_usd" column="INVOICE_AMOUNT_USD"/>
		<result property="case_fee_usd_plan_fx" column="CASE_FEE_USD_PLAN_FX"/>
		<result property="credit" column="CREDIT"/>
		<result property="credit_usd" column="CREDIT_USD"/>
		<result property="multiple_year_bonus" column="MULTIPLE_YEAR_BONUS"/>
		<result property="multiple_year_bonus_usd" column="MULTIPLE_YEAR_BONUS_USD"/>
		<result property="total_balance" column="TOTAL_BALANCE"/>
		<result property="total_balance_usd" column="TOTAL_BALANCE_USD"/>
		<result property="total_prepayment_credit" column="TOTAL_PREPAYMENT_CREDIT"/>
		<result property="total_prepayment_credit_usd" column="TOTAL_PREPAYMENT_CREDIT_USD"/>
	        <result property="total_spent" column="TOTAL_SPENT"/>
		<result property="total_spent_usd" column="TOTAL_SPENT_USD"/>
		<result property="parentCRN" column="PARENT_CRN"/>
		<result property="subReportType_Parent_crn" column="SUB_REPORT_TYPE_PARENT_CRN"/>
		<result property="sfdc_Otn_Numbers" column="SFDC_OTN_NUMBERS"/>
		<result property="work_week" column="WORK_WEEK"/>
		<result property="regional_territory" column="REGIONAL_TERRITORY"/>
		<result property="salesRepresentative" column="SALES_REPRESENTATIVE"/>
		<result property="salesRepresentativeRegion" column="SALES_REPRESENTATIVE_REGION"/>
		
	</resultMap>

	<resultMap id="reviewRawDataResult"   class="com.worldcheck.atlas.vo.report.ReviewerRawDataVO">
		  
		<result property="CRN" column="CRN"/>
		<result property="office" column="OFFICE"/>
		<result property="status" column="CASE_STATUS"/>
		<result property="reqDate" column="CASE_RECEIVED_DATE"/>
		<result property="cycle" column="PROCESS_CYCLE"/>
		<result property="taskName" column="TASK_NAME"/>
		<result property="reviewer" column="REVIEWER"/>		
		<result property="analyst" column="ANALYST"/>
		<result property="rejection" column="REJECTED"/>
		<result property="comment" column="REVIEW_COMMENT"/>
		
	</resultMap>


	<select id="getFinanceRawData" resultMap="financeRawDataResult" parameterClass="java.util.HashMap">
SELECT CRN                    ,
  PARENT_CRN                   ,
  SUB_REPORT_TYPE_PARENT_CRN   ,
  CLIENT_CODE                  ,
  CLIENT_NAME                  ,
  CLIENT_REF                   ,
  OFFICE                       ,
  INVOICE_ADDRESS              ,
  REPORT_TYPE                  ,
  "Primary team office"        ,
  "case recieved"              ,
   SALES_MONTH		       ,
  "sent date"                  ,
  CASE_MGR_ID                  ,
  "case status"                ,
  CURRENCY                     ,
  CASE_FEE                     ,
  DISBURSEMENT                 ,
  INVOICE_NUMBER               ,
  CREDIT                       ,
  CREDIT_USD                 ,
  INVOICE_AMOUNT_USD         ,
  CASE_FEE_USD_PLAN_FX       ,
  MULTIPLE_YEAR_BONUS        ,
  MULTIPLE_YEAR_BONUS_USD    ,
  TOTAL_BALANCE              ,
  TOTAL_BALANCE_USD         ,
  TOTAL_PREPAYMENT_CREDIT    ,
  TOTAL_PREPAYMENT_CREDIT_USD,
  TOTAL_SPENT               ,
  TOTAL_SPENT_USD            ,
  INVOICE_AMOUNT               ,
  INVOICE_DATE                 ,
  sub_concat                   ,
  country                      ,
  BULK_ORDER_ID                ,
  DISCOUNT                     ,
  "CANCELLED_WITH_CHARGES"     ,
  SFDC_OTN_NUMBERS             ,
  WORK_WEEK                    ,
  REGIONAL_TERRITORY           ,
  SALES_REPRESENTATIVE		   ,
  SALES_REPRESENTATIVE_REGION 
  FROM DW_FINANCE_RAW_DATA
  
<dynamic prepend="WHERE">      
      <isNotNull property="caseRecStartDate" prepend="AND">
		<isNotEmpty  property="caseRecStartDate">      
			  to_date(REQ_RECD_DT,'dd-mm-yy') >=  to_date(#caseRecStartDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>

    
      <isNotNull property="caseRecEndDate" prepend="AND">
		<isNotEmpty  property="caseRecEndDate">      
			  to_date(REQ_RECD_DT,'dd-mm-yy') &lt;=  to_date(#caseRecEndDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>
     
    <isNotNull property="clientFinalSentStartDate" prepend="AND">
		<isNotEmpty  property="clientFinalSentStartDate">      
			  to_date(CLIENT_FINAL_SENTDATE,'dd-mm-yy') >=  to_date(#clientFinalSentStartDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>
      
      <isNotNull property="clientFinalSentEndDate" prepend="AND">
		<isNotEmpty  property="clientFinalSentEndDate">      
			  to_date(CLIENT_FINAL_SENTDATE,'dd-mm-yy') &lt;=  to_date(#clientFinalSentEndDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>

 </dynamic>
	</select> 

 <resultMap id="ctExcelResult"   class="com.worldcheck.atlas.vo.report.CTExcelVO">
		<result property="CRN" column="CRN"/>	
		<result property="clientCode" column="CLIENT_CODE"/>
		<result property="clientName" column="CLIENT_NAME"/>
		<result property="clientRefNo" column="CLIENT_REF"/>

		<result property="caseCreationDate" column="REQ_RECD_DT"/>	
		<!-- Added by Himansu.For CR-1(Release 1.3.1)  -->
		<result property="salesmonth" column="SALES_MONTH"/>
		<!--  Ends here -->
		<result property="finalRptSentDate" column="CLIENT_FINAL_SENTDATE"/>
		<result property="caseManager" column="CASE_MGR_ID"/>
		<result property="caseStatus" column="DESCRIPTION"/>
		<result property="caseFeeInUSD" column="case_fee_usd"/>

		<result property="subjectNames" column="sub_concat"/>	
		<result property="subjectCountries" column="country"/>
		<result property="billingAddress" column="INVOICE_ADDRESS"/>
	  <result property="specialBillingInst" column="SPCL_BILLING_INSTRUCTION" />

		<result property="currency" column="CURRENCY"/>	
		<result property="caseFee" column="CASE_FEE"/>
		<result property="registerNo" column="REGISTER_NO"/>
		<result property="billingMethod" column="BILLING_METHOD"/>

		<result property="registerDate" column="REGISTER_DATE"/>	
		<result property="handleBy" column="HANDLED_BY"/>
		<!-- Added by satish 	-->
		<result property="withCharges" column="withCharges"/> 
		
		<!--  Added by Vishal  -->
		<result property="credit" column="CREDIT"/> 
		<result property="creditUSD" column="CREDIT_USD"/> 
		<result property="invoiceAmountUSD" column="INVOICE_AMOUNT_USD"/> 
		<!--  Added by Himansu.For CR-2(Release 1.3.1)  -->
		<result property="case_fee_usd_plan_fx" column="CASE_FEE_USD_PLAN_FX"/>	
		 <!--  Ends here -->
		<result property="multipleYearBonus" column="MULTIPLE_YEAR_BONUS"/> 
		<result property="multipleYearBonusUSD" column="MULTIPLE_YEAR_BONUS_USD"/> 
		<result property="parentCRN" column="PARENT_CRN"/>
		<result property="subReportTypeParentCRN" column="SUB_REPORT_TYPE_PARENT_CRN"/> 
		<result property="totalBalance" column="TOTAL_BALANCE"/>
		<result property="totalBalanceUSD" column="TOTAL_BALANCE_USD"/>
		<result property="totalPrepaymentCredit" column="TOTAL_PREPAYMENT_CREDIT"/> 
		<result property="totalPrepaymentCreditUSD" column="TOTAL_PREPAYMENT_CREDIT_USD"/>
		<result property="totalSpent" column="TOTAL_SPENT"/>  
		<result property="totalSpentUSD" column="TOTAL_SPENT_USD"/> 
	    <!--  End By Vishal -->

		<!--  Added by Vinay.For CR-4(Release 1.3.1)  -->
		<result property="salesRepresentative" column="SALES_REPRESENTATIVE"/>
		<result property="salesRepresentativeRegion" column="SALES_REPRESENTATIVE_REGION"/>
		<!--  End by Vinay  -->
		
		<!--  Added by Juheen.For CR-3(Release 1.3.1)  -->
		<result property="sfdc_Otn_Numbers" column="SFDC_OTN_NUMBERS"/> 
		 <!--  Ends here -->
		 <!--  Added by Juheen.For CR-4(Release 1.3.1)  -->
		<result property="regional_territory" column="REGIONAL_TERRITORY"/> 
		 <!--  Ends here -->
		 <!--  Added by Juheen.For CR-6(Release 1.3.1)  -->
		<result property="work_week" column="WORK_WEEK"/> 
		 <!--  Ends here -->
		
		
	</resultMap>


<select id="getInvoiceCTExcelData" resultMap="ctExcelResult" parameterClass="java.util.HashMap">
	SELECT CRN,CLIENT_CODE,CLIENT_NAME,CLIENT_REF ,
		REQ_RECD_DT,
		SALES_MONTH,
		CLIENT_FINAL_SENTDATE,
		CASE_MGR_ID,DESCRIPTION , sub_concat ,
		country,INVOICE_ADDRESS,SPCL_BILLING_INSTRUCTION,
		CURRENCY,CASE_FEE,REGISTER_NO,BILLING_METHOD,
		REGISTER_DATE, HANDLED_BY,
		case_fee_usd ,
		CANCELLED_WITH_CHARGES withCharges,
		CREDIT ,
		CREDIT_USD,
		INVOICE_AMOUNT_USD,
		CASE_FEE_USD_PLAN_FX,
		MULTIPLE_YEAR_BONUS,
		MULTIPLE_YEAR_BONUS_USD,
		PARENT_CRN,
		SUB_REPORT_TYPE_PARENT_CRN,
		TOTAL_BALANCE,
		TOTAL_BALANCE_USD,
		TOTAL_PREPAYMENT_CREDIT,
		TOTAL_PREPAYMENT_CREDIT_USD,
		TOTAL_SPENT,
		TOTAL_SPENT_USD,
                SFDC_OTN_NUMBERS,
                WORK_WEEK,
		REGIONAL_TERRITORY,
		SALES_REPRESENTATIVE,
		SALES_REPRESENTATIVE_REGION 
	 FROM 
		DW_INVOICE_CT_EXCEL

<dynamic prepend="WHERE">      
   <isNotNull property="startCTDate" prepend="AND">
		<isNotEmpty  property="startCTDate">      
			 to_date(CT_DATE,'dd-mm-yy') >= to_date(#startCTDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>

    
     <isNotNull property="endCTDate" prepend="AND">
		<isNotEmpty  property="endCTDate">      
		  to_date(CT_DATE,'dd-mm-yy') &lt;=  to_date(#endCTDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>
     
    <isNotNull property="startRegisterDate" prepend="AND">
		<isNotEmpty  property="startRegisterDate">      
			to_date(REGISTER_DATE,'dd-mm-yy') >= to_date(#startRegisterDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>
      
      <isNotNull property="endRegisterDate" prepend="AND">
		<isNotEmpty  property="endRegisterDate">      
			 to_date(REGISTER_DATE,'dd-mm-yy') &lt;= to_date(#endRegisterDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>

 <isNotNull property="hchekTownCmb" prepend="AND">
		<isNotEmpty  property="hchekTownCmb">      
			<isEqual   property="hchekTownCmb" compareValue="1">
			TO_CAPETOWN = #hchekTownCmb#
			</isEqual> 
			<isNotEqual property="hchekTownCmb" compareValue="1">
				(   TO_CAPETOWN is null or TO_CAPETOWN =0 )
			</isNotEqual> 
		 </isNotEmpty>
  </isNotNull>

   <isNotNull property="CRNumber" prepend="AND">
		<isNotEmpty  property="CRNumber">      
			<!--cc.CRN like #CRN#-->
		upper(CRN) like upper('%'||#CRNumber#||'%')
		 </isNotEmpty>
      </isNotNull>



	<isNotNull property="ctDateFilled" prepend="AND">
		<isNotEmpty  property="ctDateFilled">      
			<isEqual   property="ctDateFilled" compareValue="yes">
				 CT_DATE is not null
			</isEqual> 
			<isNotEqual property="ctDateFilled" compareValue="yes">
				 CT_DATE is null
			</isNotEqual> 
		</isNotEmpty>
      </isNotNull>

 

   <isNotNull property="registerNumber" prepend="AND">
		<isNotEmpty  property="registerNumber">      
			REGISTER_NO = #registerNumber#
		 </isNotEmpty>
      </isNotNull>

	   <isNotNull property="hcaseStatus" prepend="AND">
		<isNotEmpty  property="hcaseStatus">      
			DESCRIPTION  in ( $hcaseStatus$ )
		 </isNotEmpty>
      </isNotNull>
	  
	  <isEqual prepend="OR" property="withCharges" compareValue="Yes">
      	(DESCRIPTION='Cancelled' and CANCELLED_WITH_CHARGES=#withCharges#)
      </isEqual>
	  
 </dynamic>
	 </select> 





<select id="getInvoiceCTExcelDataCount" resultClass="int" parameterClass="java.util.HashMap">
		SELECT count(*)
		FROM 
		DW_INVOICE_CT_EXCEL

<dynamic prepend="WHERE">      
   <isNotNull property="startCTDate" prepend="AND">
		<isNotEmpty  property="startCTDate">      
			 to_date(CT_DATE,'dd-mm-yy') >= to_date(#startCTDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>

    
     <isNotNull property="endCTDate" prepend="AND">
		<isNotEmpty  property="endCTDate">      
		  to_date(CT_DATE,'dd-mm-yy') &lt;=  to_date(#endCTDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>
     
    <isNotNull property="startRegisterDate" prepend="AND">
		<isNotEmpty  property="startRegisterDate">      
			to_date(REGISTER_DATE,'dd-mm-yy') >= to_date(#startRegisterDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>
      
      <isNotNull property="endRegisterDate" prepend="AND">
		<isNotEmpty  property="endRegisterDate">      
			 to_date(REGISTER_DATE,'dd-mm-yy') &lt;= to_date(#endRegisterDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>

 <isNotNull property="hchekTownCmb" prepend="AND">
		<isNotEmpty  property="hchekTownCmb">      
			<isEqual   property="hchekTownCmb" compareValue="1">
			TO_CAPETOWN = #hchekTownCmb#
			</isEqual> 
			<isNotEqual property="hchekTownCmb" compareValue="1">
				(   TO_CAPETOWN is null or TO_CAPETOWN =0 )
			</isNotEqual> 
		 </isNotEmpty>
  </isNotNull>

   <isNotNull property="CRNumber" prepend="AND">
		<isNotEmpty  property="CRNumber">      
			<!--cc.CRN like #CRN#-->
		upper(CRN) like upper('%'||#CRNumber#||'%')
		 </isNotEmpty>
      </isNotNull>



	<isNotNull property="ctDateFilled" prepend="AND">
		<isNotEmpty  property="ctDateFilled">      
			<isEqual   property="ctDateFilled" compareValue="yes">
				 CT_DATE is not null
			</isEqual> 
			<isNotEqual property="ctDateFilled" compareValue="yes">
				 CT_DATE is null
			</isNotEqual> 
		</isNotEmpty>
      </isNotNull>

 

   <isNotNull property="registerNumber" prepend="AND">
		<isNotEmpty  property="registerNumber">      
			REGISTER_NO = #registerNumber#
		 </isNotEmpty>
      </isNotNull>

	   <isNotNull property="hcaseStatus" prepend="AND">
		<isNotEmpty  property="hcaseStatus">      
			DESCRIPTION  in ($hcaseStatus$)
		 </isNotEmpty>
      </isNotNull>
	  
	 
	  <isEqual prepend="OR" property="withCharges" compareValue="Yes">
      	(DESCRIPTION='Cancelled' and CANCELLED_WITH_CHARGES=#withCharges#)
      </isEqual>
	  
 </dynamic>
	 </select> 





<resultMap id="profitReportResult" class="com.worldcheck.atlas.vo.dashboard.DashBoardReportVO" >
	<result property="reportCrnInitial" column="REPORT_CRN_INITIAL"/>
   <result property="profit" column="PROFIT"/>

</resultMap>

<select id="getProfitReport"  resultMap="profitReportResult" parameterClass="java.util.HashMap">
	SELECT REPORT_CRN_INITIAL,PROFIT FROM DW_STATS_PER_REPORT WHERE YEAR =#year# AND MONTH = #month# ORDER BY PROFIT DESC
</select>


<resultMap id="expenditureReportResult" class="com.worldcheck.atlas.vo.dashboard.DashBoardReportVO" >
	<result property="reportCrnInitial" column="REPORT_CRN_INITIAL"/>
   <result property="expenditure" column="EXPENDITURE"/>

</resultMap>

<select id="getExpenditureReport"  resultMap="expenditureReportResult" parameterClass="java.util.HashMap">
	SELECT REPORT_CRN_INITIAL,EXPENDITURE FROM DW_STATS_PER_REPORT WHERE YEAR =#year# AND MONTH = #month# ORDER BY EXPENDITURE DESC
</select>

<resultMap id="topClientResult"   class="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
		<result property="clientCode" column="CLIENT_CODE"/>	
		<result property="revenue" column="REVENUE"/>
</resultMap>

<select id="getRevenueSummaryTopClient"  resultMap="topClientResult">
	SELECT CLIENT_CODE ,REVENUE FROM DW_TOP10_CLIENT   WHERE  YEAR = #selYear# and revenue >0  ORDER BY REVENUE DESC
</select>


<select id="getAllScoreSheetName"  resultClass="com.worldcheck.atlas.vo.masters.ScoreSheetMasterVO" parameterClass = "java.lang.String">
	SELECT scoresheet_master_id "scoresheetMasterId", scoresheet_name "scoreSheetName" from CMS_SCORESHEET_MASTER WHERE OFFICE_ID=#officeId#
</select>

<select id="scoringPerformanceScoreSheetMIS"  resultClass="com.worldcheck.atlas.vo.masters.ScoreSheetMasterVO" parameterClass="java.util.Map">
	SELECT * FROM (SELECT  a.*, ROWNUM rn FROM (
	SELECT 
			ANALYST,
			YEAR,
			MONTH,
			NO_OF_REPORTS noOfReports,
			SCORE,
			MAX_POINTS maxPoints,
			RATING 
	FROM 
			DW_SCORESHEET_MIS_ANALYST 
	WHERE
			office=#office#
	AND
			SCORESHEET_NAME=#scoreSheetName#
	AND
			MONTH=TO_NUMBER(#month#)
	AND
			YEAR=TO_NUMBER(#year#)
	ORDER By upper($sortColumnName$) $sortType$	) a WHERE ROWNUM <![CDATA[ <= ]]> #limit#) WHERE rn <![CDATA[ >= ]]> #start#
</select>

<select id="totalScoringPerformanceScoreSheetMIS"  resultClass="int" parameterClass="com.worldcheck.atlas.vo.masters.ScoreSheetMasterVO">
	
	SELECT 
			Count(*)
	FROM 
			DW_SCORESHEET_MIS_ANALYST 
	WHERE
			office=#office#
	AND
			SCORESHEET_NAME=#scoreSheetName#
	AND
			MONTH=TO_NUMBER(#month#)
	AND
			YEAR=TO_NUMBER(#year#)
</select>

<select id="reviewEffortScoreSheetMIS"  resultClass="com.worldcheck.atlas.vo.masters.ScoreSheetMasterVO" parameterClass = "com.worldcheck.atlas.vo.masters.ScoreSheetMasterVO">
	
	SELECT * FROM (SELECT  a.*, ROWNUM rn FROM (
	SELECT 
			REVIEWER,
			YEAR,
			MONTH,
			NO_OF_REPORTS noOfReports
	FROM 
			DW_SCORESHEET_MIS_REVIEWER 
	WHERE
			office=#office#
	AND
			SCORESHEET_NAME=#scoreSheetName#
	AND
			MONTH=TO_NUMBER(#month#)
	AND
			YEAR=TO_NUMBER(#year#)
			
	ORDER By upper($sortColumnName$) $sortType$	) a WHERE ROWNUM <![CDATA[ <= ]]> #limit#) WHERE rn <![CDATA[ >= ]]> #start#
			
</select>

<select id="totalReviewEffortScoreSheetMIS"  resultClass="int" parameterClass = "com.worldcheck.atlas.vo.masters.ScoreSheetMasterVO">
	
	SELECT 
			Count(*)
	FROM 
			DW_SCORESHEET_MIS_REVIEWER 
	WHERE
			office=#office#
	AND
			SCORESHEET_NAME=#scoreSheetName#
	AND
			MONTH=TO_NUMBER(#month#)
	AND
			YEAR=TO_NUMBER(#year#)
			
</select>

<select id="getFinanceRawDataCount" resultClass="int" parameterClass="java.util.HashMap">
select count(*)
from DW_FINANCE_RAW_DATA
  
<dynamic prepend="WHERE">      
      <isNotNull property="caseRecStartDate" prepend="AND">
		<isNotEmpty  property="caseRecStartDate">      
			  to_date(REQ_RECD_DT,'dd-mm-yy') >=  to_date(#caseRecStartDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>

    
      <isNotNull property="caseRecEndDate" prepend="AND">
		<isNotEmpty  property="caseRecEndDate">      
			  to_date(REQ_RECD_DT,'dd-mm-yy') &lt;=  to_date(#caseRecEndDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>
     
    <isNotNull property="clientFinalSentStartDate" prepend="AND">
		<isNotEmpty  property="clientFinalSentStartDate">      
			  to_date(CLIENT_FINAL_SENTDATE,'dd-mm-yy') >=  to_date(#clientFinalSentStartDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>
      
      <isNotNull property="clientFinalSentEndDate" prepend="AND">
		<isNotEmpty  property="clientFinalSentEndDate">      
			  to_date(CLIENT_FINAL_SENTDATE,'dd-mm-yy') &lt;=  to_date(#clientFinalSentEndDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>

 </dynamic>
	</select> 

<select id="getReviewerRawDataCount" resultClass="int" parameterClass="java.util.HashMap">
select count(*)
from DW_REVIEW_RAW_DATA
<dynamic prepend="WHERE">

  	<isNotNull property="caseRecStartDate" prepend="AND">
		<isNotEmpty  property="caseRecStartDate">      
			  to_date(CASE_RECEIVED_DATE,'dd-mm-yy') >=  to_date(#caseRecStartDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>

    
      <isNotNull property="caseRecEndDate" prepend="AND">
		<isNotEmpty  property="caseRecEndDate">      
			  to_date(CASE_RECEIVED_DATE,'dd-mm-yy') &lt;=  to_date(#caseRecEndDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>
     
      <isNotNull property="officeList" prepend="AND">
	<isNotEmpty property="officeList">
		OFFICE_MASTER_ID IN
		<iterate property="officeList" open="(" close=")" conjunction=",">
			#officeList[]#
		</iterate>
	</isNotEmpty>
      </isNotNull>
      
</dynamic>
</select> 	
	
<select id="getReviewerRawData" resultMap="reviewRawDataResult" parameterClass="java.util.HashMap">
select OFFICE, CRN, CASE_STATUS, CASE_RECEIVED_DATE, PROCESS_CYCLE, TASK_NAME, REVIEWER, ANALYST, REJECTED, REVIEW_COMMENT
from DW_REVIEW_RAW_DATA

<dynamic prepend="WHERE">

  	<isNotNull property="caseRecStartDate" prepend="AND">
		<isNotEmpty  property="caseRecStartDate">      
			  to_date(CASE_RECEIVED_DATE,'dd-mm-yy') >=  to_date(#caseRecStartDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>

    
      <isNotNull property="caseRecEndDate" prepend="AND">
		<isNotEmpty  property="caseRecEndDate">      
			  to_date(CASE_RECEIVED_DATE,'dd-mm-yy') &lt;=  to_date(#caseRecEndDate#,'dd-mm-yy')
		 </isNotEmpty>
      </isNotNull>
     
      <isNotNull property="officeList" prepend="AND">
	 <isNotEmpty property="officeList">
		OFFICE_MASTER_ID IN
		<iterate property="officeList" open="(" close=")" conjunction=",">
			#officeList[]#
		</iterate>
	</isNotEmpty>
      </isNotNull>
      
</dynamic>

</select> 	
	

<select id="getOntimeDeliveryPercentage" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO" resultClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
	 select to_char(round((numberOfCases/numberOfCases_new),3),'9,999,999,999,999,990.999') deliveryTypePercentage,
	 deliveryType graphLabel,
	 reportType reportType
	 from((select count(a.numberOfCases) numberOfCases,
	 a.delivery deliveryType,
	 a.reportType  reportType
	 from(
	 select crd.CRN numberOfCases,
	 crd.DELIVERY_STATUS delivery
	<isEqual prepend=',' property="displayCriteriaField" compareValue="combined">
	 0 reportType
	</isEqual>
	<isEqual prepend=',' property="displayCriteriaField" compareValue="reportType">
	 crd.REPORT_TYPE reportType
	</isEqual>
	<isEqual prepend=',' property="displayCriteriaField" compareValue="subReportType">
	 case 
		when (select count(*) from cms_subreport_type_master where SUBREPORT_TYPE_MASTER_ID = cc.SUB_REPORT_TYPE_ID and status=1)=1 
		then 
			crd.report_type|| '-' || (select SUB_CRN_INITIAL from cms_subreport_type_master where  cc.SUB_REPORT_TYPE_ID =SUBREPORT_TYPE_MASTER_ID  and status=1)
		else 
			crd.report_type
	 end as reportType
	</isEqual>
	 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	 where 1=1
	 AND crd.CASE_STATUS in ('Completed','Completed Client Submission')

	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
		         on cal.crn = cc1.crn where cc1.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	

	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull> 
	
	 )a

		 group by a.delivery,a.reportType
		 order by a.delivery)tableOne
		 
		 inner join
		 
		 
		 (select count(r.numberOfCases_new) numberOfCases_new,
		 r.reportType_new  reportType_new
		 from(select crd_new.CRN numberOfCases_new
		 <isEqual prepend=',' property="displayCriteriaField" compareValue="combined">
		 0 reportType_new
		</isEqual>
		<isEqual prepend=',' property="displayCriteriaField" compareValue="reportType">
		 crd_new.REPORT_TYPE reportType_new
		</isEqual>
		<isEqual prepend=',' property="displayCriteriaField" compareValue="subReportType">
		 case 
			when (select count(*) from cms_subreport_type_master where SUBREPORT_TYPE_MASTER_ID = cc_new.SUB_REPORT_TYPE_ID and status=1)=1 
			then 
				crd_new.report_type|| '-' || (select SUB_CRN_INITIAL from cms_subreport_type_master where  cc_new.SUB_REPORT_TYPE_ID =SUBREPORT_TYPE_MASTER_ID  and status=1)
			else 
				crd_new.report_type
		 end as reportType_new
		</isEqual>
		
		 from dw_case_raw_data crd_new left join cms_clientcase cc_new on crd_new.crn= cc_new.crn
		 where 1=1
		 AND crd_new.CASE_STATUS in ('Completed','Completed Client Submission')

		<isNotNull property="clientList" prepend="AND">
		<isNotEmpty  property="clientList">   
		  <isEqual property="clientType" compareValue="clientCode">
				 crd_new.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
									#clientList[]#
									</iterate> 
		   </isEqual>
		   <isEqual property="clientType" compareValue="clientGroupName">
				 crd_new.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
									#clientList[]#
									</iterate> 
		   </isEqual>
		  </isNotEmpty> 
		</isNotNull>
		 
		 <isEqual property="caseExclusionField" compareValue="exclusion">
			
			<isNotNull property="excludeChildList">
				<isNotEmpty  prepend="AND" property="excludeChildList">
					 crd_new.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
					 on cal.crn = cc1.crn where cc1.sub_report_type_id in
					(select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
					<iterate property="excludeChildList" open="(" close=")" conjunction=",">
						#excludeChildList[]#
					</iterate> 
					))
				</isNotEmpty>
			</isNotNull>
		</isEqual>
		 
		<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
			crd_new.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
		</isEqual>
		<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
			crd_new.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
		</isEqual>
		
		<isNotEqual property="salesRepresentativeField" compareValue="All">		
			<isNotNull property="salesRepresentativeList">
				<isNotEmpty  prepend="AND" property="salesRepresentativeList">
					crd_new.sales_representative_region in 
					<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
						#salesRepresentativeList[]#
					</iterate> 
				</isNotEmpty>
			</isNotNull>
		</isNotEqual>
		

		  <isNotNull prepend="AND" property="reportTypeList">
			<isNotEmpty  property="reportTypeList">
				crd_new.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
										#reportTypeList[]#
									</iterate> 
			</isNotEmpty> 
		  </isNotNull>  
		  
		  
		 <isNotNull prepend="AND" property="subReportTypeList">
			<isNotEmpty  property="subReportTypeList">
				(cc_new.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
				<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
					#subReportTypeList[]#
				</iterate> 
				) OR cc_new.SUB_REPORT_TYPE_ID=0)
			</isNotEmpty> 
		  </isNotNull>  
		)r
		group by r.reportType_new)tableTwo
		on tableOne.reportType = tableTwo.reportType_new)
		order by deliveryType
</select>


<select id="getTatHistogram" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO" resultClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
	 
	 select count(a.crn) numberOfCases,
	 to_number(a.workingDays) graphLabel
	 from(select crd.CRN crn,
		  crd.ACHIEVED_TAT workingDays
	 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	 where 1=1
	 AND crd.CASE_STATUS in ('Completed','Completed Client Submission')

	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
		         on cal.crn = cc1.crn where cc1.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	

	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull>  
	)a
	group by a.workingDays
	having a.workingDays>=0
	order by a.workingDays 
</select>	


<select id="getStatisticsDataTatHistogram" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO" resultClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
	 
	 select nvl(min(b.numberOfCases),'0') minimumCaseValue,
	 nvl(max(b.numberOfCases),'0') maximumCaseValue,
	 to_char(round(nvl(avg(b.numberOfCases),'0'),2),'9,999,999,999,999,990.99') averageCaseValue,
	(nvl(max(b.numberOfCases),'0')-nvl(min(b.numberOfCases),'0')) rangeCaseValue
	 from(select count(a.crn) numberOfCases,
	 to_number(a.workingDays) workingDays
	 from(select crd.CRN crn,
	 to_date(crd.FINAL_SENT_D_CLIENT, 'dd-mon-yy') - to_date(crd.CASE_RECEIVED_DATE, 'dd-mon-yy') - ((
          TRUNC (NEXT_DAY (to_date(crd.FINAL_SENT_D_CLIENT, 'dd-mon-yy'), 'SAT') - NEXT_DAY (to_date(crd.CASE_RECEIVED_DATE, 'dd-mon-yy') - 1, 'SAT')) / 7) + (
          TRUNC (NEXT_DAY (to_date(crd.FINAL_SENT_D_CLIENT, 'dd-mon-yy'), 'SUN') - NEXT_DAY (to_date(crd.CASE_RECEIVED_DATE, 'dd-mon-yy') - 1, 'SUN')) / 7)) + 1
	as workingDays
	 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	 where 1=1
	 AND crd.CASE_STATUS in ('Completed','Completed Client Submission')

	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
		         on cal.crn = cc1.crn where cc1.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	

	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull>  
	)a
	group by a.workingDays
	having a.workingDays>=0
	order by a.workingDays)b
</select>	
	 
<!-- For count the size of data-->

<select id="getCRDColumnsDataMonthCount"  resultClass="int" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
select count(*)
 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	 where 1=1

	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
		         on cal.crn = cc1.crn where cc1.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	
	
	 <isNotNull  prepend="AND" property="caseStatusList">
		<isNotEmpty  property="caseStatusList">
				(crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
									#caseStatusList[]#
									</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
			</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
			</isEqual>
				)
		 </isNotEmpty> 
	  </isNotNull>
	
	  
	  <isEmpty prepend="AND" property="caseStatusList">
			<isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
			</isEqual>
	  </isEmpty>
	
	
	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull>   
	
</select>

<select id="getCRDColumnsDataStatusCount"  resultClass="int" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
select count(*) 
	from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
		 where 1=1

		<isNotNull property="clientList" prepend="AND">
		<isNotEmpty  property="clientList">   
		  <isEqual property="clientType" compareValue="clientCode">
				 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
									#clientList[]#
									</iterate> 
		   </isEqual>
		   <isEqual property="clientType" compareValue="clientGroupName">
				 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
									#clientList[]#
									</iterate> 
		   </isEqual>
		  </isNotEmpty> 
		</isNotNull>
		 
		 <isEqual property="caseExclusionField" compareValue="exclusion">
			
			<isNotNull property="excludeChildList">
				<isNotEmpty  prepend="AND" property="excludeChildList">
					 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc 
					 on cal.crn = cc.crn where cc.sub_report_type_id in
					(select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
					<iterate property="excludeChildList" open="(" close=")" conjunction=",">
						#excludeChildList[]#
					</iterate> 
					))
				</isNotEmpty>
			</isNotNull>
		</isEqual>
		 
		<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
			crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
		</isEqual>
		<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
			crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
		</isEqual>
		
		<isNotEqual property="salesRepresentativeField" compareValue="All">		
			<isNotNull property="salesRepresentativeList">
				<isNotEmpty  prepend="AND" property="salesRepresentativeList">
					crd.sales_representative_region in 
					<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
						#salesRepresentativeList[]#
					</iterate> 
				</isNotEmpty>
			</isNotNull>
		</isNotEqual>
		
		
		 <isNotNull  prepend="AND" property="caseStatusList">
			<isNotEmpty  property="caseStatusList">
					(crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
										#caseStatusList[]#
										</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
				)
			 </isNotEmpty> 
		  </isNotNull>
		
		  
		  <isEmpty prepend="AND" property="caseStatusList">
				<isEqual property="cancelledWithCharges" compareValue="Yes">
					((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
					<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
					</isEqual>
					)
				</isEqual>
				
				<isEqual property="cancelledWithCharges" compareValue="No">
					<isEqual property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
					</isEqual>
				</isEqual>
		  </isEmpty>
		
		  <isNotNull prepend="AND" property="reportTypeList">
			<isNotEmpty  property="reportTypeList">
				crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
										#reportTypeList[]#
									</iterate> 
			</isNotEmpty> 
		  </isNotNull>  
		  
		  
		  <isNotNull prepend="AND" property="subReportTypeList">
			<isNotEmpty  property="subReportTypeList">
				(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
				<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
					#subReportTypeList[]#
				</iterate> 
				) OR cc.SUB_REPORT_TYPE_ID=0)
			</isNotEmpty> 
		  </isNotNull>  
		
	
</select>

<select id="getCRDColumnsDataReportTypeCount"  resultClass="int" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
select count(*)
		 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	 where 1=1

	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc 
		         on cal.crn = cc.crn where cc.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	
	
	 <isNotNull  prepend="AND" property="caseStatusList">
		<isNotEmpty  property="caseStatusList">
				(crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
									#caseStatusList[]#
									</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
			</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
			</isEqual>
				)
		 </isNotEmpty> 
	  </isNotNull>
	
	  
	  <isEmpty prepend="AND" property="caseStatusList">
			<isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
			</isEqual>
	  </isEmpty>
	
	
	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull> 
		
	
</select>

<select id="getCRDColumnsDataClientCount"  resultClass="int" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">

select count(*)
from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
  where 1=1

 <isNotNull property="clientList" prepend="AND">
 <isNotEmpty  property="clientList">   
   <isEqual property="clientType" compareValue="clientCode">
    crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
        #clientList[]#
        </iterate> 
    </isEqual>
    <isEqual property="clientType" compareValue="clientGroupName">
    crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
        #clientList[]#
        </iterate> 
    </isEqual>
   </isNotEmpty> 
 </isNotNull>
  
  <isEqual property="caseExclusionField" compareValue="exclusion">
  
  <isNotNull property="excludeChildList">
   <isNotEmpty  prepend="AND" property="excludeChildList">
     crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
           on cal.crn = cc1.crn where cc1.sub_report_type_id in
          (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
    <iterate property="excludeChildList" open="(" close=")" conjunction=",">
     #excludeChildList[]#
    </iterate> 
    ))
   </isNotEmpty>
  </isNotNull>
 </isEqual>
  
 <isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
  crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
 </isEqual>
 <isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
  crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
 </isEqual>
 
 <isNotEqual property="salesRepresentativeField" compareValue="All">  
  <isNotNull property="salesRepresentativeList">
   <isNotEmpty  prepend="AND" property="salesRepresentativeList">
    crd.sales_representative_region in 
    <iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
     #salesRepresentativeList[]#
    </iterate> 
   </isNotEmpty>
  </isNotNull>
 </isNotEqual>
 
 
  <isNotNull  prepend="AND" property="caseStatusList">
  <isNotEmpty  property="caseStatusList">
    (crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
         #caseStatusList[]#
         </iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
   </isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
   </isEqual>
				)
   </isNotEmpty> 
   </isNotNull>
 
   
	  <isEmpty prepend="AND" property="caseStatusList">
   <isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
   </isEqual>
   </isEmpty>
 
 
   <isNotNull prepend="AND" property="reportTypeList">
  <isNotEmpty  property="reportTypeList">
   crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
         #reportTypeList[]#
        </iterate> 
  </isNotEmpty> 
   </isNotNull>  
   
   
   <isNotNull prepend="AND" property="subReportTypeList">
  <isNotEmpty  property="subReportTypeList">
   (cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
   <iterate property="subReportTypeList" open="(" close=")" conjunction=",">
    #subReportTypeList[]#
   </iterate> 
   ) OR cc.SUB_REPORT_TYPE_ID=0)
  </isNotEmpty> 
   </isNotNull>
</select>



<select id="getCRDColumnsDataCountryTypeCount"  resultClass="int" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
select count(*)
		 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
  where 1=1
  AND crd.SUBJECT_COUNTRY is not null
 <isNotNull property="clientList" prepend="AND">
 <isNotEmpty  property="clientList">   
   <isEqual property="clientType" compareValue="clientCode">
    crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
        #clientList[]#
        </iterate> 
    </isEqual>
    <isEqual property="clientType" compareValue="clientGroupName">
    crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
        #clientList[]#
        </iterate> 
    </isEqual>
   </isNotEmpty> 
 </isNotNull>
  
  <isEqual property="caseExclusionField" compareValue="exclusion">
  
  <isNotNull property="excludeChildList">
   <isNotEmpty  prepend="AND" property="excludeChildList">
     crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
           on cal.crn = cc1.crn where cc1.sub_report_type_id in
          (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
    <iterate property="excludeChildList" open="(" close=")" conjunction=",">
     #excludeChildList[]#
    </iterate> 
    ))
   </isNotEmpty>
  </isNotNull>
 </isEqual>
  
 <isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
  crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
 </isEqual>
 <isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
  crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
 </isEqual>
 
 <isNotEqual property="salesRepresentativeField" compareValue="All">  
  <isNotNull property="salesRepresentativeList">
   <isNotEmpty  prepend="AND" property="salesRepresentativeList">
    crd.sales_representative_region in 
    <iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
     #salesRepresentativeList[]#
    </iterate> 
   </isNotEmpty>
  </isNotNull>
 </isNotEqual>
 
 
  <isNotNull  prepend="AND" property="caseStatusList">
  <isNotEmpty  property="caseStatusList">
    (crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
         #caseStatusList[]#
         </iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
   </isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
   </isEqual>
				)
   </isNotEmpty> 
   </isNotNull>
 
   
	  <isEmpty prepend="AND" property="caseStatusList">
   <isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
   </isEqual>
   </isEmpty>
 
 
   <isNotNull prepend="AND" property="reportTypeList">
  <isNotEmpty  property="reportTypeList">
   crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
         #reportTypeList[]#
        </iterate> 
  </isNotEmpty> 
   </isNotNull>  
   
   
   <isNotNull prepend="AND" property="subReportTypeList">
  <isNotEmpty  property="subReportTypeList">
   (cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
   <iterate property="subReportTypeList" open="(" close=")" conjunction=",">
    #subReportTypeList[]#
   </iterate> 
   ) OR cc.SUB_REPORT_TYPE_ID=0)
  </isNotEmpty> 
   </isNotNull> 
		
	
</select>

<select id="getCRDColumnsDeliveryCount"  resultClass="int" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
select count(*)
from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
  where 1=1
  AND crd.CASE_STATUS in ('Completed','Completed Client Submission')

 <isNotNull property="clientList" prepend="AND">
 <isNotEmpty  property="clientList">   
   <isEqual property="clientType" compareValue="clientCode">
    crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
        #clientList[]#
        </iterate> 
    </isEqual>
    <isEqual property="clientType" compareValue="clientGroupName">
    crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
        #clientList[]#
        </iterate> 
    </isEqual>
   </isNotEmpty> 
 </isNotNull>
  
  <isEqual property="caseExclusionField" compareValue="exclusion">
  
  <isNotNull property="excludeChildList">
   <isNotEmpty  prepend="AND" property="excludeChildList">
     crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
           on cal.crn = cc1.crn where cc1.sub_report_type_id in
          (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
    <iterate property="excludeChildList" open="(" close=")" conjunction=",">
     #excludeChildList[]#
    </iterate> 
    ))
   </isNotEmpty>
  </isNotNull>
 </isEqual>
  
 <isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
  crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
 </isEqual>
 <isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
  crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
 </isEqual>
 
 <isNotEqual property="salesRepresentativeField" compareValue="All">  
  <isNotNull property="salesRepresentativeList">
   <isNotEmpty  prepend="AND" property="salesRepresentativeList">
    crd.sales_representative_region in 
    <iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
     #salesRepresentativeList[]#
    </iterate> 
   </isNotEmpty>
  </isNotNull>
 </isNotEqual>
 

   <isNotNull prepend="AND" property="reportTypeList">
  <isNotEmpty  property="reportTypeList">
   crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
         #reportTypeList[]#
        </iterate> 
  </isNotEmpty> 
   </isNotNull>  
   
   
   <isNotNull prepend="AND" property="subReportTypeList">
  <isNotEmpty  property="subReportTypeList">
   (cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
   <iterate property="subReportTypeList" open="(" close=")" conjunction=",">
    #subReportTypeList[]#
   </iterate> 
   ) OR cc.SUB_REPORT_TYPE_ID=0)
  </isNotEmpty> 
   </isNotNull>  
 
</select>

<select id="getCRDColumnsDataTATCount" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO" resultClass="int">
	select count(*)
	 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	  where 1=1
	  AND crd.CASE_STATUS in ('Completed','Completed Client Submission')

	 <isNotNull property="clientList" prepend="AND">
	 <isNotEmpty  property="clientList">   
	   <isEqual property="clientType" compareValue="clientCode">
		crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
			#clientList[]#
			</iterate> 
		</isEqual>
		<isEqual property="clientType" compareValue="clientGroupName">
		crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
			#clientList[]#
			</iterate> 
		</isEqual>
	   </isNotEmpty> 
	 </isNotNull>
	  
	  <isEqual property="caseExclusionField" compareValue="exclusion">
	  
	  <isNotNull property="excludeChildList">
	   <isNotEmpty  prepend="AND" property="excludeChildList">
		 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
			   on cal.crn = cc1.crn where cc1.sub_report_type_id in
			  (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
		<iterate property="excludeChildList" open="(" close=")" conjunction=",">
		 #excludeChildList[]#
		</iterate> 
		))
	   </isNotEmpty>
	  </isNotNull>
	 </isEqual>
	  
	 <isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
	  crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	 </isEqual>
	 <isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
	  crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	 </isEqual>
	 
	 <isNotEqual property="salesRepresentativeField" compareValue="All">  
	  <isNotNull property="salesRepresentativeList">
	   <isNotEmpty  prepend="AND" property="salesRepresentativeList">
		crd.sales_representative_region in 
		<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
		 #salesRepresentativeList[]#
		</iterate> 
	   </isNotEmpty>
	  </isNotNull>
	 </isNotEqual>
	 

	   <isNotNull prepend="AND" property="reportTypeList">
	  <isNotEmpty  property="reportTypeList">
	   crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
			 #reportTypeList[]#
			</iterate> 
	  </isNotEmpty> 
	   </isNotNull>  
	   
	   
	   <isNotNull prepend="AND" property="subReportTypeList">
	  <isNotEmpty  property="subReportTypeList">
	   (cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
	   <iterate property="subReportTypeList" open="(" close=")" conjunction=",">
		#subReportTypeList[]#
	   </iterate> 
	  ) OR cc.SUB_REPORT_TYPE_ID=0)
	  </isNotEmpty> 
	   </isNotNull>
</select>

<select id="getCRDColumnsDataTAT" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO" resultClass="com.worldcheck.atlas.vo.report.CaseRawDataFinanceVO">
	select crd.CRN,
	crd.CLIENT_REFERENCE_NUMBER clientReferenceNumber,
	crd.REPORT_TYPE reportType,
	crd.CLIENT_NAME clientName,
	crd.CLIENT_CODE clientCode,
	crd.CASE_MANAGER caseManager,
	crd.CASE_STATUS caseStatus,
	crd.CASE_RECEIVED_DATE caseReceivedDate,
	crd.CASE_FEE_USD caseFee_usd,
	crd.case_fee_usd_plan_fx case_fee_usd_plan_fx,
	crd.FINAL_DD_CLIENT final_dd_Client,
	crd.FINAL_SENT_D_CLIENT clientFinalSentDate,
	crd.SUBJECT primarySubject,
	crd.SUBJECT_COUNTRY primarySubjectCountry,
	crd.SUBJECT_TYPE primarySubjectType,
	crd.MAIN_CLIENT_GROUP mainClientGroup,
	crd.CANCELLED_WITH_CHARGES cancelledCharges,
	crd.PARENT_CRN parentCRN,
	crd.SUB_REPORT_TYPE_PARENT_CRN subReportType_Parent_crn,
	crd.sales_month salesmonth,
	crd.SALES_REPRESENTATIVE_REGION salesRepresentativeRegion,
	crd.achieved_tat,
	crd.target_tat,
	crd.delivery_status delivery
	
	 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	  where 1=1
	  AND crd.CASE_STATUS in ('Completed','Completed Client Submission')

	 <isNotNull property="clientList" prepend="AND">
	 <isNotEmpty  property="clientList">   
	   <isEqual property="clientType" compareValue="clientCode">
		crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
			#clientList[]#
			</iterate> 
		</isEqual>
		<isEqual property="clientType" compareValue="clientGroupName">
		crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
			#clientList[]#
			</iterate> 
		</isEqual>
	   </isNotEmpty> 
	 </isNotNull>
	  
	  <isEqual property="caseExclusionField" compareValue="exclusion">
	  
	  <isNotNull property="excludeChildList">
	   <isNotEmpty  prepend="AND" property="excludeChildList">
		 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
			   on cal.crn = cc1.crn where cc1.sub_report_type_id in
			  (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
		<iterate property="excludeChildList" open="(" close=")" conjunction=",">
		 #excludeChildList[]#
		</iterate> 
		))
	   </isNotEmpty>
	  </isNotNull>
	 </isEqual>
	  
	 <isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
	  crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	 </isEqual>
	 <isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
	  crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	 </isEqual>
	 
	 <isNotEqual property="salesRepresentativeField" compareValue="All">  
	  <isNotNull property="salesRepresentativeList">
	   <isNotEmpty  prepend="AND" property="salesRepresentativeList">
		crd.sales_representative_region in 
		<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
		 #salesRepresentativeList[]#
		</iterate> 
	   </isNotEmpty>
	  </isNotNull>
	 </isNotEqual>
	 

	   <isNotNull prepend="AND" property="reportTypeList">
	  <isNotEmpty  property="reportTypeList">
	   crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
			 #reportTypeList[]#
			</iterate> 
	  </isNotEmpty> 
	   </isNotNull>  
	   
	   
	   <isNotNull prepend="AND" property="subReportTypeList">
	  <isNotEmpty  property="subReportTypeList">
	   (cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
	   <iterate property="subReportTypeList" open="(" close=")" conjunction=",">
		#subReportTypeList[]#
	   </iterate> 
	   ) OR cc.SUB_REPORT_TYPE_ID=0)
	  </isNotEmpty> 
	   </isNotNull>
</select>

<select id="getCRDColumnsDataDeliveryType"  resultClass="com.worldcheck.atlas.vo.report.CaseRawDataFinanceVO" 
parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
select crd.CRN,
	crd.CLIENT_REFERENCE_NUMBER clientReferenceNumber,
	crd.REPORT_TYPE reportType,
	crd.CLIENT_NAME clientName,
	crd.CLIENT_CODE clientCode,
	crd.CASE_MANAGER caseManager,
	crd.CASE_STATUS caseStatus,
	crd.CASE_RECEIVED_DATE caseReceivedDate,
	crd.CASE_FEE_USD caseFee_usd,
	crd.case_fee_usd_plan_fx case_fee_usd_plan_fx,
	crd.FINAL_DD_CLIENT final_dd_Client,
	crd.FINAL_SENT_D_CLIENT clientFinalSentDate,
	crd.SUBJECT primarySubject,
	crd.SUBJECT_COUNTRY primarySubjectCountry,
	crd.SUBJECT_TYPE primarySubjectType,
	crd.MAIN_CLIENT_GROUP mainClientGroup,
	crd.CANCELLED_WITH_CHARGES cancelledCharges,
	crd.PARENT_CRN parentCRN,
	crd.SUB_REPORT_TYPE_PARENT_CRN subReportType_Parent_crn,
	crd.sales_month salesmonth,
	crd.SALES_REPRESENTATIVE_REGION salesRepresentativeRegion,
	crd.achieved_tat,
	crd.target_tat,
	crd.delivery_status delivery
	
from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
  where 1=1
  AND crd.CASE_STATUS in ('Completed','Completed Client Submission')

 <isNotNull property="clientList" prepend="AND">
 <isNotEmpty  property="clientList">   
   <isEqual property="clientType" compareValue="clientCode">
    crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
        #clientList[]#
        </iterate> 
    </isEqual>
    <isEqual property="clientType" compareValue="clientGroupName">
    crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
        #clientList[]#
        </iterate> 
    </isEqual>
   </isNotEmpty> 
 </isNotNull>
  
  <isEqual property="caseExclusionField" compareValue="exclusion">
  
  <isNotNull property="excludeChildList">
   <isNotEmpty  prepend="AND" property="excludeChildList">
     crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
           on cal.crn = cc1.crn where cc1.sub_report_type_id in
          (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
    <iterate property="excludeChildList" open="(" close=")" conjunction=",">
     #excludeChildList[]#
    </iterate> 
    ))
   </isNotEmpty>
  </isNotNull>
 </isEqual>
  
 <isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
  crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
 </isEqual>
 <isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
  crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
 </isEqual>
 
 <isNotEqual property="salesRepresentativeField" compareValue="All">  
  <isNotNull property="salesRepresentativeList">
   <isNotEmpty  prepend="AND" property="salesRepresentativeList">
    crd.sales_representative_region in 
    <iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
     #salesRepresentativeList[]#
    </iterate> 
   </isNotEmpty>
  </isNotNull>
 </isNotEqual>
 

   <isNotNull prepend="AND" property="reportTypeList">
  <isNotEmpty  property="reportTypeList">
   crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
         #reportTypeList[]#
        </iterate> 
  </isNotEmpty> 
   </isNotNull>  
   
   
   <isNotNull prepend="AND" property="subReportTypeList">
  <isNotEmpty  property="subReportTypeList">
   (cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
   <iterate property="subReportTypeList" open="(" close=")" conjunction=",">
    #subReportTypeList[]#
   </iterate> 
   ) OR cc.SUB_REPORT_TYPE_ID=0)
  </isNotEmpty> 
   </isNotNull>  
 
</select>



<select id="getCRDColumnsDataCountryType"  resultClass="com.worldcheck.atlas.vo.report.CaseRawDataFinanceVO"
parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
select crd.CRN,
	crd.CLIENT_REFERENCE_NUMBER clientReferenceNumber,
	crd.REPORT_TYPE reportType,
	crd.CLIENT_NAME clientName,
	crd.CLIENT_CODE clientCode,
	crd.CASE_MANAGER caseManager,
	crd.CASE_STATUS caseStatus,
	crd.CASE_RECEIVED_DATE caseReceivedDate,
	crd.CASE_FEE_USD caseFee_usd,
	crd.case_fee_usd_plan_fx case_fee_usd_plan_fx,
	crd.FINAL_DD_CLIENT final_dd_Client,
	crd.FINAL_SENT_D_CLIENT clientFinalSentDate,
	crd.SUBJECT primarySubject,
	crd.SUBJECT_COUNTRY primarySubjectCountry,
	crd.SUBJECT_TYPE primarySubjectType,
	crd.MAIN_CLIENT_GROUP mainClientGroup,
	crd.CANCELLED_WITH_CHARGES cancelledCharges,
	crd.PARENT_CRN parentCRN,
	crd.SUB_REPORT_TYPE_PARENT_CRN subReportType_Parent_crn,
	crd.sales_month salesmonth,
	crd.SALES_REPRESENTATIVE_REGION salesRepresentativeRegion,
	crd.achieved_tat,
	crd.target_tat,
	crd.delivery_status delivery


		 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
  where 1=1
  AND crd.SUBJECT_COUNTRY is not null
 <isNotNull property="clientList" prepend="AND">
 <isNotEmpty  property="clientList">   
   <isEqual property="clientType" compareValue="clientCode">
    crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
        #clientList[]#
        </iterate> 
    </isEqual>
    <isEqual property="clientType" compareValue="clientGroupName">
    crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
        #clientList[]#
        </iterate> 
    </isEqual>
   </isNotEmpty> 
 </isNotNull>
  
  <isEqual property="caseExclusionField" compareValue="exclusion">
  
  <isNotNull property="excludeChildList">
   <isNotEmpty  prepend="AND" property="excludeChildList">
     crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
           on cal.crn = cc1.crn where cc1.sub_report_type_id in
          (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
    <iterate property="excludeChildList" open="(" close=")" conjunction=",">
     #excludeChildList[]#
    </iterate> 
    ))
   </isNotEmpty>
  </isNotNull>
 </isEqual>
  
 <isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
  crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
 </isEqual>
 <isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
  crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
 </isEqual>
 
 <isNotEqual property="salesRepresentativeField" compareValue="All">  
  <isNotNull property="salesRepresentativeList">
   <isNotEmpty  prepend="AND" property="salesRepresentativeList">
    crd.sales_representative_region in 
    <iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
     #salesRepresentativeList[]#
    </iterate> 
   </isNotEmpty>
  </isNotNull>
 </isNotEqual>
 
 
  <isNotNull  prepend="AND" property="caseStatusList">
  <isNotEmpty  property="caseStatusList">
    (crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
         #caseStatusList[]#
         </iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
   </isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
   </isEqual>
				)
   </isNotEmpty> 
   </isNotNull>
 
   
	  <isEmpty prepend="AND" property="caseStatusList">
   <isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
   </isEqual>
   </isEmpty>
 
 
   <isNotNull prepend="AND" property="reportTypeList">
  <isNotEmpty  property="reportTypeList">
   crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
         #reportTypeList[]#
        </iterate> 
  </isNotEmpty> 
   </isNotNull>  
   
   
  <isNotNull prepend="AND" property="subReportTypeList">
  <isNotEmpty  property="subReportTypeList">
   (cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
   <iterate property="subReportTypeList" open="(" close=")" conjunction=",">
    #subReportTypeList[]#
   </iterate> 
   ) OR cc.SUB_REPORT_TYPE_ID=0)
  </isNotEmpty> 
   </isNotNull>

</select>




<select id="getCasesByPrimarySubjectCountry" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO" resultClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">

	 select a.* from (select count(crd.CRN) numberOfCases,
	 REPLACE(crd.SUBJECT_COUNTRY,'''','`') graphLabel
	 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	 where 1=1
	 AND crd.SUBJECT_COUNTRY is not null
	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
		         on cal.crn = cc1.crn where cc1.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	
	
	 <isNotNull  prepend="AND" property="caseStatusList">
		<isNotEmpty  property="caseStatusList">
				(crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
									#caseStatusList[]#
									</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
			</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
			</isEqual>
				)
		 </isNotEmpty> 
	  </isNotNull>
	
	  
	  <isEmpty prepend="AND" property="caseStatusList">
			<isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
			</isEqual>
	  </isEmpty>
	
	
	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull>
	
	  group by crd.SUBJECT_COUNTRY
	  order by numberOfCases desc
	  )a
	  where rownum <![CDATA[ <= ]]> to_number(#topItemField#)
	  
</select>


<select id="getRevenueByPrimarySubjectCountry" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO" resultClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
	
	select a.* from (select REPLACE(crd.SUBJECT_COUNTRY,'''','`') graphLabel
	<isEqual prepend=',' property="revenueField" compareValue="plan rate">
	  nvl(sum(to_number(crd.case_fee_usd_plan_fx,'9,999,999,999,999,990.99')),'0.00') revenue
	</isEqual>
	<isEqual prepend=',' property="revenueField" compareValue="spot rate">
	  nvl(sum(to_number(crd.case_fee_usd,'9,999,999,999,999,990.99')),'0.00') revenue
	</isEqual>
	 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	 where 1=1
	 AND crd.SUBJECT_COUNTRY is not null
	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
		         on cal.crn = cc1.crn where cc1.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	
	
	 <isNotNull  prepend="AND" property="caseStatusList">
		<isNotEmpty  property="caseStatusList">
				(crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
									#caseStatusList[]#
									</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
			</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
			</isEqual>
				)
		 </isNotEmpty> 
	  </isNotNull>
	
	  
	  <isEmpty prepend="AND" property="caseStatusList">
			<isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
			</isEqual>
	  </isEmpty>
	
	
	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	 <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull> 
	
	  group by crd.SUBJECT_COUNTRY
	  order by revenue desc
	  )a
	  where rownum <![CDATA[ <= ]]> to_number(#topItemField#)

</select>


<select id="getCRDColumnsDataClientsType"  resultClass="com.worldcheck.atlas.vo.report.CaseRawDataFinanceVO"
parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">

select crd.CRN,
	crd.CLIENT_REFERENCE_NUMBER clientReferenceNumber,
	crd.REPORT_TYPE reportType,
	crd.CLIENT_NAME clientName,
	crd.CLIENT_CODE clientCode,
	crd.CASE_MANAGER caseManager,
	crd.CASE_STATUS caseStatus,
	crd.CASE_RECEIVED_DATE caseReceivedDate,
	crd.CASE_FEE_USD caseFee_usd,
	crd.case_fee_usd_plan_fx case_fee_usd_plan_fx,
	crd.FINAL_DD_CLIENT final_dd_Client,
	crd.FINAL_SENT_D_CLIENT clientFinalSentDate,
	crd.SUBJECT primarySubject,
	crd.SUBJECT_COUNTRY primarySubjectCountry,
	crd.SUBJECT_TYPE primarySubjectType,
	crd.MAIN_CLIENT_GROUP mainClientGroup,
	crd.CANCELLED_WITH_CHARGES cancelledCharges,
	crd.PARENT_CRN parentCRN,
	crd.SUB_REPORT_TYPE_PARENT_CRN subReportType_Parent_crn,
	crd.sales_month salesmonth,
	crd.SALES_REPRESENTATIVE_REGION salesRepresentativeRegion,
	crd.achieved_tat,
	crd.target_tat,
	crd.delivery_status delivery
	
from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
  where 1=1

 <isNotNull property="clientList" prepend="AND">
 <isNotEmpty  property="clientList">   
   <isEqual property="clientType" compareValue="clientCode">
    crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
        #clientList[]#
        </iterate> 
    </isEqual>
    <isEqual property="clientType" compareValue="clientGroupName">
    crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
        #clientList[]#
        </iterate> 
    </isEqual>
   </isNotEmpty> 
 </isNotNull>
  
  <isEqual property="caseExclusionField" compareValue="exclusion">
  <isNotNull property="excludeChildList">
   <isNotEmpty  prepend="AND" property="excludeChildList">
     crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
           on cal.crn = cc1.crn where cc1.sub_report_type_id in
          (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
    <iterate property="excludeChildList" open="(" close=")" conjunction=",">
     #excludeChildList[]#
    </iterate> 
    ))
   </isNotEmpty>
  </isNotNull>
 </isEqual>
  
 <isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
  crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
 </isEqual>
 <isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
  crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
 </isEqual>
 
 <isNotEqual property="salesRepresentativeField" compareValue="All">  
  <isNotNull property="salesRepresentativeList">
   <isNotEmpty  prepend="AND" property="salesRepresentativeList">
    crd.sales_representative_region in 
    <iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
     #salesRepresentativeList[]#
    </iterate> 
   </isNotEmpty>
  </isNotNull>
 </isNotEqual>
 
 
  <isNotNull  prepend="AND" property="caseStatusList">
  <isNotEmpty  property="caseStatusList">
    (crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
         #caseStatusList[]#
         </iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
   </isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
   </isEqual>
				)
   </isNotEmpty> 
   </isNotNull>
 
   
	  <isEmpty prepend="AND" property="caseStatusList">
   <isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
   </isEqual>
   </isEmpty>
 
 
   <isNotNull prepend="AND" property="reportTypeList">
  <isNotEmpty  property="reportTypeList">
   crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
         #reportTypeList[]#
        </iterate> 
  </isNotEmpty> 
   </isNotNull>  
   
   
   <isNotNull prepend="AND" property="subReportTypeList">
  <isNotEmpty  property="subReportTypeList">
   (cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
   <iterate property="subReportTypeList" open="(" close=")" conjunction=",">
    #subReportTypeList[]#
   </iterate> 
   ) OR cc.SUB_REPORT_TYPE_ID=0)
  </isNotEmpty> 
   </isNotNull>
</select>


<select id="getRevenueByClient" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO" resultClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
	
	
	<isNotEqual property="displayCriteriaField" compareValue="combined">
		select revenue,clientCode, reportType
		from((select a.* from(
	</isNotEqual>
	<isEqual property="displayCriteriaField" compareValue="combined">
		select b.* from(
	</isEqual>
	 
	 <isEqual property="revenueField" compareValue="plan rate">
	  select nvl(sum(to_number(crd.case_fee_usd_plan_fx,'9,999,999,999,999,990.99')),'0.00') revenue
	</isEqual>
	<isEqual property="revenueField" compareValue="spot rate">
	  select nvl(sum(to_number(crd.case_fee_usd,'9,999,999,999,999,990.99')),'0.00') revenue
	</isEqual>
	 <isEqual prepend=',' property="clientType" compareValue="clientCode">
		crd.client_code clientCode
	</isEqual>
	<isEqual prepend=',' property="clientType" compareValue="clientGroupName">
		crd.main_client_group clientCode
	</isEqual>
	
	<isEqual prepend=',' property="displayCriteriaField" compareValue="combined">
	 0 reportType
	</isEqual>
	<isEqual prepend=',' property="displayCriteriaField" compareValue="reportType">
	 crd.REPORT_TYPE reportType
	</isEqual>
	<isEqual prepend=',' property="displayCriteriaField" compareValue="subReportType">
	 case 
		when (select count(*) from cms_subreport_type_master where SUBREPORT_TYPE_MASTER_ID = cc.SUB_REPORT_TYPE_ID and status=1)=1 
		then 
			crd.report_type|| '-' || (select SUB_CRN_INITIAL from cms_subreport_type_master where  cc.SUB_REPORT_TYPE_ID =SUBREPORT_TYPE_MASTER_ID  and status=1)
		else 
			crd.report_type
	 end as reportType
	</isEqual>
	 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	 where 1=1

	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
		         on cal.crn = cc1.crn where cc1.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	
	
	 <isNotNull  prepend="AND" property="caseStatusList">
		<isNotEmpty  property="caseStatusList">
				(crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
									#caseStatusList[]#
									</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
			</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
			</isEqual>
				)
		 </isNotEmpty> 
	  </isNotNull>
	
	  
	  <isEmpty prepend="AND" property="caseStatusList">
			<isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
			</isEqual>
	  </isEmpty>
	
	
	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull>  
	
	  <isEqual property="clientType" compareValue="clientCode">
			 group by  crd.client_code		
	  </isEqual>
	  <isEqual property="clientType" compareValue="clientGroupName">
			 group by crd.main_client_group	
	  </isEqual>
	  
	  <isEqual property="displayCriteriaField" compareValue="combined">
			order by revenue DESC
		  <isEqual  prepend=',' property="clientType" compareValue="clientCode">
			crd.client_code
		  </isEqual>
		  <isEqual prepend=',' property="clientType" compareValue="clientGroupName">
			crd.main_client_group
		  </isEqual>	  
		  
			)b where rownum <![CDATA[ <= ]]> to_number(#topItemField#)
		    
	  </isEqual>
	  
	  <isEqual prepend=',' property="displayCriteriaField" compareValue="reportType">
			 crd.REPORT_TYPE)a
			order by a.revenue DESC,a.clientCode,a.reportType)oldTable	
	  </isEqual>
	  
	  <isEqual prepend=',' property="displayCriteriaField" compareValue="subReportType">
		 crd.REPORT_TYPE,cc.SUB_REPORT_TYPE_ID)a
		order by a.revenue DESC,a.clientCode,a.reportType)oldTable	
	  </isEqual>
	
	
	
	
	<isNotEqual prepend='inner join' property="displayCriteriaField" compareValue="combined">
	
	(select rownum rowIndex, revenue_new, clientCode_new from
	( 
	<isEqual property="revenueField" compareValue="plan rate">
	  select nvl(sum(to_number(crd_new.case_fee_usd_plan_fx,'9,999,999,999,999,990.99')),'0.00') revenue_new
	</isEqual>
	<isEqual property="revenueField" compareValue="spot rate">
	  select nvl(sum(to_number(crd_new.case_fee_usd,'9,999,999,999,999,990.99')),'0.00') revenue_new
	</isEqual>
	 <isEqual prepend=',' property="clientType" compareValue="clientCode">
		crd_new.client_code clientCode_new
	</isEqual>
	<isEqual prepend=',' property="clientType" compareValue="clientGroupName">
		crd_new.main_client_group clientCode_new
	</isEqual> 
	
	 from dw_case_raw_data crd_new left join cms_clientcase cc_new on crd_new.crn= cc_new.crn
	 where 1=1

	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd_new.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd_new.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd_new.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
		         on cal.crn = cc1.crn where cc1.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd_new.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd_new.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd_new.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	
	
	 <isNotNull  prepend="AND" property="caseStatusList">
		<isNotEmpty  property="caseStatusList">
				(crd_new.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
									#caseStatusList[]#
									</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd_new.CASE_STATUS='Cancelled' AND crd_new.CANCELLED_WITH_CHARGES='Yes')
			</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd_new.CASE_STATUS='Cancelled' AND crd_new.CANCELLED_WITH_CHARGES='No')			
			</isEqual>
				)
		 </isNotEmpty> 
	  </isNotNull>
	
	  
	  <isEmpty prepend="AND" property="caseStatusList">
			<isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd_new.CASE_STATUS='Cancelled' AND crd_new.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd_new.CASE_STATUS='Cancelled' AND crd_new.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd_new.CASE_STATUS='Cancelled' AND crd_new.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
			</isEqual>
	  </isEmpty>
	
	
	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd_new.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc_new.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc_new.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull> 

		<isEqual property="clientType" compareValue="clientCode">
				group by  crd_new.client_code	
				order by revenue_new DESC)
				where rownum <![CDATA[ <= ]]> to_number(#topItemField#)
			)newTable
	  </isEqual>
	  <isEqual property="clientType" compareValue="clientGroupName">
				group by crd_new.main_client_group	
				order by revenue_new DESC)
				where rownum <![CDATA[ <= ]]> to_number(#topItemField#)
			)newTable
	  </isEqual>
	  on newTable.clientCode_new = oldTable.clientCode)
	  order by rowIndex,clientCode,reportType
	</isNotEqual>
	  
	  
</select>	


<select id="getCasesByClient" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO" resultClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
	
	<isNotEqual property="displayCriteriaField" compareValue="combined">
		select numberOfCases,clientCode, reportType
		from((select a.* from(
	</isNotEqual>
	<isEqual property="displayCriteriaField" compareValue="combined">
		select b.* from(
	</isEqual>
	 select count(crd.CRN) numberOfCases
	 <isEqual prepend=',' property="clientType" compareValue="clientCode">
		crd.client_code clientCode
	</isEqual>
	<isEqual prepend=',' property="clientType" compareValue="clientGroupName">
		crd.main_client_group clientCode
	</isEqual>
	
	<isEqual prepend=',' property="displayCriteriaField" compareValue="combined">
	 0 reportType
	</isEqual>
	<isEqual prepend=',' property="displayCriteriaField" compareValue="reportType">
	 crd.REPORT_TYPE reportType
	</isEqual>
	<isEqual prepend=',' property="displayCriteriaField" compareValue="subReportType">
	 case 
		when (select count(*) from cms_subreport_type_master where SUBREPORT_TYPE_MASTER_ID = cc.SUB_REPORT_TYPE_ID and status=1)=1 
		then 
			crd.report_type|| '-' || (select SUB_CRN_INITIAL from cms_subreport_type_master where  cc.SUB_REPORT_TYPE_ID =SUBREPORT_TYPE_MASTER_ID  and status=1)
		else 
			crd.report_type
	 end as reportType
	</isEqual>
	 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	 where 1=1

	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
		         on cal.crn = cc1.crn where cc1.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	
	
	 <isNotNull  prepend="AND" property="caseStatusList">
		<isNotEmpty  property="caseStatusList">
				(crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
									#caseStatusList[]#
									</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
			</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
			</isEqual>
				)
		 </isNotEmpty> 
	  </isNotNull>
	
	  
	  <isEmpty prepend="AND" property="caseStatusList">
			<isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
			</isEqual>
	  </isEmpty>
	
	
	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull>  
	
	  <isEqual property="clientType" compareValue="clientCode">
			 group by  crd.client_code		
	  </isEqual>
	  <isEqual property="clientType" compareValue="clientGroupName">
			 group by crd.main_client_group	
	  </isEqual>
	 
	  <isEqual property="displayCriteriaField" compareValue="combined">
			order by numberOfCases DESC
		  <isEqual  prepend=',' property="clientType" compareValue="clientCode">
			crd.client_code
		  </isEqual>
		  <isEqual prepend=',' property="clientType" compareValue="clientGroupName">
			crd.main_client_group
		  </isEqual>
			)b where rownum <![CDATA[ <= ]]> to_number(#topItemField#)  	  
	  </isEqual>
	  
	   <isEqual prepend=',' property="displayCriteriaField" compareValue="reportType">
			 crd.REPORT_TYPE)a
		order by a.numberOfCases DESC,a.clientCode,a.reportType)oldTable	
	  </isEqual>
	  
	  <isEqual prepend=',' property="displayCriteriaField" compareValue="subReportType">
		 crd.REPORT_TYPE,cc.SUB_REPORT_TYPE_ID)a
		order by a.numberOfCases DESC,a.clientCode,a.reportType)oldTable	
	  </isEqual>
	
	
	
	
	<isNotEqual prepend='inner join' property="displayCriteriaField" compareValue="combined">
	
	(select rownum rowIndex, numberOfCases_new, clientCode_new from
	(select count(crd_new.CRN) numberOfCases_new
	 <isEqual prepend=',' property="clientType" compareValue="clientCode">
		crd_new.client_code clientCode_new
	</isEqual>
	<isEqual prepend=',' property="clientType" compareValue="clientGroupName">
		crd_new.main_client_group clientCode_new
	</isEqual> 
	
	 from dw_case_raw_data crd_new left join cms_clientcase cc_new on crd_new.crn= cc_new.crn
	 where 1=1

	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd_new.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd_new.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd_new.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
		         on cal.crn = cc1.crn where cc1.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd_new.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd_new.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd_new.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	
	
	 <isNotNull  prepend="AND" property="caseStatusList">
		<isNotEmpty  property="caseStatusList">
				(crd_new.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
									#caseStatusList[]#
									</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd_new.CASE_STATUS='Cancelled' AND crd_new.CANCELLED_WITH_CHARGES='Yes')
			</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd_new.CASE_STATUS='Cancelled' AND crd_new.CANCELLED_WITH_CHARGES='No')			
			</isEqual>
				)
		 </isNotEmpty> 
	  </isNotNull>
	
	  
	  <isEmpty prepend="AND" property="caseStatusList">
			<isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd_new.CASE_STATUS='Cancelled' AND crd_new.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd_new.CASE_STATUS='Cancelled' AND crd_new.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd_new.CASE_STATUS='Cancelled' AND crd_new.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
			</isEqual>
	  </isEmpty>
	
	
	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd_new.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc_new.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc_new.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull> 

		<isEqual property="clientType" compareValue="clientCode">
				group by  crd_new.client_code	
				order by numberOfCases_new DESC)
				where rownum <![CDATA[ <= ]]> to_number(#topItemField#)
			)newTable
	  </isEqual>
	  <isEqual property="clientType" compareValue="clientGroupName">
				group by crd_new.main_client_group	
				order by numberOfCases_new DESC)
				where rownum <![CDATA[ <= ]]> to_number(#topItemField#)
			)newTable
	  </isEqual>
	  on newTable.clientCode_new = oldTable.clientCode)
	  order by rowIndex,clientCode,reportType
	</isNotEqual>
	  
</select>	


<select id="getCRDColumnsData"  resultClass="com.worldcheck.atlas.vo.report.CaseRawDataFinanceVO" 
parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
select crd.CRN,
	crd.CLIENT_REFERENCE_NUMBER clientReferenceNumber,
	crd.REPORT_TYPE reportType,
	crd.CLIENT_NAME clientName,
	crd.CLIENT_CODE clientCode,
	crd.CASE_MANAGER caseManager,
	crd.CASE_STATUS caseStatus,
	crd.CASE_RECEIVED_DATE caseReceivedDate,
	crd.CASE_FEE_USD caseFee_usd,
	crd.case_fee_usd_plan_fx case_fee_usd_plan_fx,
	crd.FINAL_DD_CLIENT final_dd_Client,
	crd.FINAL_SENT_D_CLIENT clientFinalSentDate,
	crd.SUBJECT primarySubject,
	crd.SUBJECT_COUNTRY primarySubjectCountry,
	crd.SUBJECT_TYPE primarySubjectType,
	crd.MAIN_CLIENT_GROUP mainClientGroup,
	crd.CANCELLED_WITH_CHARGES cancelledCharges,
	crd.PARENT_CRN parentCRN,
	crd.SUB_REPORT_TYPE_PARENT_CRN subReportType_Parent_crn,
	crd.sales_month salesmonth,
	crd.SALES_REPRESENTATIVE_REGION salesRepresentativeRegion,
	crd.achieved_tat,
	crd.target_tat,
	crd.delivery_status delivery
	
 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	 where 1=1

	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
		         on cal.crn = cc1.crn where cc1.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	
	
	 <isNotNull  prepend="AND" property="caseStatusList">
		<isNotEmpty  property="caseStatusList">
				(crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
									#caseStatusList[]#
									</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
			</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
			</isEqual>
				)
		 </isNotEmpty> 
	  </isNotNull>
	
	  
	  <isEmpty prepend="AND" property="caseStatusList">
			<isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
			</isEqual>
	  </isEmpty>
	
	
	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull>  
	
</select>

<select id="getCasesByMonth" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO" resultClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
	 
	<isEqual property="displayCriteriaField" compareValue="subReportType">
		select a.* from(
	</isEqual>
	 select count(crd.CRN) numberOfCases
	<isEqual prepend=',' property="revenueField" compareValue="plan rate">
	  nvl(sum(to_number(crd.case_fee_usd_plan_fx,'9,999,999,999,999,990.99')),'0.00') revenue
	</isEqual>
	<isEqual prepend=',' property="revenueField" compareValue="spot rate">
	  nvl(sum(to_number(crd.case_fee_usd,'9,999,999,999,999,990.99')),'0.00') revenue
	</isEqual>
	<isEqual prepend=',' property="monthTypeField" compareValue="calender month">
		<isEqual property="dateRangeField" compareValue="case reecived date">
	 to_char(crd.CASE_RECEIVED_DATE,'Mon-yy') month	
	</isEqual>
		<isEqual property="dateRangeField" compareValue="final sent date">
		to_char(crd.FINAL_SENT_D_CLIENT,'Mon-yy') month
		</isEqual>
	</isEqual>
	<isEqual prepend=',' property="monthTypeField" compareValue="sales month">
	 crd.SALES_MONTH month
	</isEqual>
	<isEqual prepend=',' property="displayCriteriaField" compareValue="combined">
	 0 reportType
	</isEqual>
	<isEqual prepend=',' property="displayCriteriaField" compareValue="reportType">
	 crd.REPORT_TYPE reportType
	</isEqual>
	<isEqual prepend=',' property="displayCriteriaField" compareValue="subReportType">
	 case 
		when (select count(*) from cms_subreport_type_master where SUBREPORT_TYPE_MASTER_ID = cc.SUB_REPORT_TYPE_ID and status=1)=1 
		then 
			crd.report_type|| '-' || (select SUB_CRN_INITIAL from cms_subreport_type_master where  cc.SUB_REPORT_TYPE_ID =SUBREPORT_TYPE_MASTER_ID  and status=1)
		else 
			crd.report_type
	 end as reportType
	</isEqual>
	 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	 where 1=1

	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
		         on cal.crn = cc1.crn where cc1.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	
	
	 <isNotNull  prepend="AND" property="caseStatusList">
		<isNotEmpty  property="caseStatusList">
				(crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
									#caseStatusList[]#
									</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
			</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
			</isEqual>
				)
		 </isNotEmpty> 
	  </isNotNull>
	
	  
	  <isEmpty prepend="AND" property="caseStatusList">
			<isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
			</isEqual>
	  </isEmpty>
	
	
	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull>  
	
	  <isEqual property="monthTypeField" compareValue="calender month">
			<isEqual property="dateRangeField" compareValue="case reecived date">
			 group by to_char(crd.CASE_RECEIVED_DATE,'Mon-yy')		
	  </isEqual>
			<isEqual property="dateRangeField" compareValue="final sent date">
			 group by to_char(crd.FINAL_SENT_D_CLIENT,'Mon-yy')
			</isEqual>	
	  </isEqual>
	  <isEqual property="monthTypeField" compareValue="sales month">
			 group by crd.SALES_MONTH	
	  </isEqual>
	  <isNotEqual prepend=',' property="displayCriteriaField" compareValue="combined">
			 crd.REPORT_TYPE
	  </isNotEqual>
	  
	  <isNotEqual property="displayCriteriaField" compareValue="subReportType">
		  <isEqual property="monthTypeField" compareValue="calender month">
				order by to_date(month,'Mon-yy')
		  </isEqual>
		  <isEqual property="monthTypeField" compareValue="sales month">
				order by to_date(crd.SALES_MONTH,'Mon-yy')
		  </isEqual>
		   <isEqual prepend=',' property="displayCriteriaField" compareValue="reportType">
				 crd.REPORT_TYPE
		  </isEqual>
	  </isNotEqual>
	  
	  <isEqual prepend=',' property="displayCriteriaField" compareValue="subReportType">
			 cc.SUB_REPORT_TYPE_ID)a
			 order by to_date(a.month,'Mon-yy'),a.reportType
	  </isEqual>
	 
</select>


<select id="getCRDColumnsDataCaseStatus"  resultClass="com.worldcheck.atlas.vo.report.CaseRawDataFinanceVO"
parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
	
select crd.CRN,
	crd.CLIENT_REFERENCE_NUMBER clientReferenceNumber,
	crd.REPORT_TYPE reportType,
	crd.CLIENT_NAME clientName,
	crd.CLIENT_CODE clientCode,
	crd.CASE_MANAGER caseManager,
	crd.CASE_STATUS caseStatus,
	crd.CASE_RECEIVED_DATE caseReceivedDate,
	crd.CASE_FEE_USD caseFee_usd,
	crd.case_fee_usd_plan_fx case_fee_usd_plan_fx,
	crd.FINAL_DD_CLIENT final_dd_Client,
	crd.FINAL_SENT_D_CLIENT clientFinalSentDate,
	crd.SUBJECT primarySubject,
	crd.SUBJECT_COUNTRY primarySubjectCountry,
	crd.SUBJECT_TYPE primarySubjectType,
	crd.MAIN_CLIENT_GROUP mainClientGroup,
	crd.CANCELLED_WITH_CHARGES cancelledCharges,
	crd.PARENT_CRN parentCRN,
	crd.SUB_REPORT_TYPE_PARENT_CRN subReportType_Parent_crn,
	crd.sales_month salesmonth,
	crd.SALES_REPRESENTATIVE_REGION salesRepresentativeRegion,
	crd.achieved_tat,
	crd.target_tat,
	crd.delivery_status delivery

		 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
		 where 1=1

		<isNotNull property="clientList" prepend="AND">
		<isNotEmpty  property="clientList">   
		  <isEqual property="clientType" compareValue="clientCode">
				 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
									#clientList[]#
									</iterate> 
		   </isEqual>
		   <isEqual property="clientType" compareValue="clientGroupName">
				 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
									#clientList[]#
									</iterate> 
		   </isEqual>
		  </isNotEmpty> 
		</isNotNull>
		 
		 <isEqual property="caseExclusionField" compareValue="exclusion">
			
			<isNotNull property="excludeChildList">
				<isNotEmpty  prepend="AND" property="excludeChildList">
					 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc 
					 on cal.crn = cc.crn where cc.sub_report_type_id in
					(select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
					<iterate property="excludeChildList" open="(" close=")" conjunction=",">
						#excludeChildList[]#
					</iterate> 
					))
				</isNotEmpty>
			</isNotNull>
		</isEqual>
		 
		<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
			crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
		</isEqual>
		<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
			crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
		</isEqual>
		
		<isNotEqual property="salesRepresentativeField" compareValue="All">		
			<isNotNull property="salesRepresentativeList">
				<isNotEmpty  prepend="AND" property="salesRepresentativeList">
					crd.sales_representative_region in 
					<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
						#salesRepresentativeList[]#
					</iterate> 
				</isNotEmpty>
			</isNotNull>
		</isNotEqual>
		
		
		 <isNotNull  prepend="AND" property="caseStatusList">
			<isNotEmpty  property="caseStatusList">
					(crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
										#caseStatusList[]#
										</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
				)
			 </isNotEmpty> 
		  </isNotNull>
		
		  
		  <isEmpty prepend="AND" property="caseStatusList">
				<isEqual property="cancelledWithCharges" compareValue="Yes">
					((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
					<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
					</isEqual>
					)
				</isEqual>
				
				<isEqual property="cancelledWithCharges" compareValue="No">
					<isEqual property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
					</isEqual>
				</isEqual>
		  </isEmpty>
		
		  <isNotNull prepend="AND" property="reportTypeList">
			<isNotEmpty  property="reportTypeList">
				crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
										#reportTypeList[]#
									</iterate> 
			</isNotEmpty> 
		  </isNotNull>  
		  
		  
		  <isNotNull prepend="AND" property="subReportTypeList">
			<isNotEmpty  property="subReportTypeList">
				(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
				<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
					#subReportTypeList[]#
				</iterate> 
				) OR cc.SUB_REPORT_TYPE_ID=0)
			</isNotEmpty> 
		  </isNotNull>  
		
	
</select>


<select id="getCasesByCaseStatus" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO" resultClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">

select count(a.crn) numberOfCases,
	 nvl(sum(to_number(a.casefee,'9,999,999,999,999,990.99')),'0.00') revenue,
	 a.caseStatus 
	 from(
		 select crd.CRN crn
		 <isEqual prepend="," property="cancelledWithCharges" compareValue="Yes">
		 case 
			when (crd.case_status='Cancelled' and crd.CANCELLED_WITH_CHARGES='Yes') then
			'Cancelled With Charges'
				<isEqual  property="isCancelled" compareValue="Yes">
					when (crd.case_status='Cancelled' and crd.CANCELLED_WITH_CHARGES='No') then
					'Cancelled Without Charges'
				</isEqual>
			else
			crd.CASE_STATUS
		end as caseStatus
		</isEqual>
		
		<isEqual prepend="," property="cancelledWithCharges" compareValue="No">
			<isEqual property="isCancelled" compareValue="Yes">
				case 
				when (crd.case_status='Cancelled' and crd.CANCELLED_WITH_CHARGES='No') then
				'Cancelled Without Charges'
				else
				crd.CASE_STATUS
				end as caseStatus
			</isEqual>	
			<isEqual property="isCancelled" compareValue="No">
			crd.CASE_STATUS caseStatus
		</isEqual>
		</isEqual>
		
		<isEqual prepend=',' property="revenueField" compareValue="plan rate">
		  crd.case_fee_usd_plan_fx casefee
		</isEqual>
		<isEqual prepend=',' property="revenueField" compareValue="spot rate">
		  crd.case_fee_usd casefee
		</isEqual>
		
		 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
		 where 1=1

		<isNotNull property="clientList" prepend="AND">
		<isNotEmpty  property="clientList">   
		  <isEqual property="clientType" compareValue="clientCode">
				 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
									#clientList[]#
									</iterate> 
		   </isEqual>
		   <isEqual property="clientType" compareValue="clientGroupName">
				 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
									#clientList[]#
									</iterate> 
		   </isEqual>
		  </isNotEmpty> 
		</isNotNull>
		 
		 <isEqual property="caseExclusionField" compareValue="exclusion">
			
			<isNotNull property="excludeChildList">
				<isNotEmpty  prepend="AND" property="excludeChildList">
					 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 on cal.crn = cc1.crn where cc1.sub_report_type_id in
					(select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
					<iterate property="excludeChildList" open="(" close=")" conjunction=",">
						#excludeChildList[]#
					</iterate> 
					))
				</isNotEmpty>
			</isNotNull>
		</isEqual>
		 
		<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
			crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
		</isEqual>
		<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
			crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
		</isEqual>
		
		<isNotEqual property="salesRepresentativeField" compareValue="All">		
			<isNotNull property="salesRepresentativeList">
				<isNotEmpty  prepend="AND" property="salesRepresentativeList">
					crd.sales_representative_region in 
					<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
						#salesRepresentativeList[]#
					</iterate> 
				</isNotEmpty>
			</isNotNull>
		</isNotEqual>
		
		
		 <isNotNull  prepend="AND" property="caseStatusList">
			<isNotEmpty  property="caseStatusList">
					(crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
										#caseStatusList[]#
										</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
				)
			 </isNotEmpty> 
		  </isNotNull>
		
		  
		  <isEmpty prepend="AND" property="caseStatusList">
				<isEqual property="cancelledWithCharges" compareValue="Yes">
					((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
					<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
					</isEqual>
					)
				</isEqual>
				
				<isEqual property="cancelledWithCharges" compareValue="No">
					<isEqual property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
					</isEqual>
				</isEqual>
		  </isEmpty>
		
		  <isNotNull prepend="AND" property="reportTypeList">
			<isNotEmpty  property="reportTypeList">
				crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
										#reportTypeList[]#
									</iterate> 
			</isNotEmpty> 
		  </isNotNull>  
		  
		  
		  <isNotNull prepend="AND" property="subReportTypeList">
			<isNotEmpty  property="subReportTypeList">
				(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
				<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
					#subReportTypeList[]#
				</iterate> 
				) OR cc.SUB_REPORT_TYPE_ID=0)
			</isNotEmpty> 
		  </isNotNull>  
		)a
		group by a.caseStatus
		order by a.caseStatus

</select>


<select id="getCasesByReportType" parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO" resultClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">

	<isEqual property="displayCriteriaField" compareValue="subReportType">
		select a.* from(
	</isEqual>
	 select count(crd.CRN) numberOfCases
	<isEqual prepend=',' property="revenueField" compareValue="plan rate">
	  nvl(sum(to_number(crd.case_fee_usd_plan_fx,'9,999,999,999,999,990.99')),'0.00') revenue
	</isEqual>
	<isEqual prepend=',' property="revenueField" compareValue="spot rate">
	  nvl(sum(to_number(crd.case_fee_usd,'9,999,999,999,999,990.99')),'0.00') revenue
	</isEqual>
	
	<isEqual prepend=',' property="displayCriteriaField" compareValue="reportType">
	 crd.REPORT_TYPE reportType
	</isEqual>
	<isEqual prepend=',' property="displayCriteriaField" compareValue="subReportType">
	 case 
		when (select count(*) from cms_subreport_type_master where SUBREPORT_TYPE_MASTER_ID = cc.SUB_REPORT_TYPE_ID and status=1)=1 
		then 
			crd.report_type|| '-' || (select SUB_CRN_INITIAL from cms_subreport_type_master where  cc.SUB_REPORT_TYPE_ID =SUBREPORT_TYPE_MASTER_ID  and status=1)
		else 
			crd.report_type
	 end as reportType
	</isEqual>
	 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	 where 1=1

	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc1 
		         on cal.crn = cc1.crn where cc1.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	
	
	 <isNotNull  prepend="AND" property="caseStatusList">
		<isNotEmpty  property="caseStatusList">
				(crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
									#caseStatusList[]#
									</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
			</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
			</isEqual>
				)
		 </isNotEmpty> 
	  </isNotNull>
	
	  
	  <isEmpty prepend="AND" property="caseStatusList">
			<isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
			</isEqual>
	  </isEmpty>
	
	
	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	<isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull> 
	
	  
	  <isNotEqual property="displayCriteriaField" compareValue="combined">
			 group by crd.REPORT_TYPE
	  </isNotEqual>
	  
	   
     <isEqual property="displayCriteriaField" compareValue="reportType">
			order by crd.REPORT_TYPE
     </isEqual>
	  
	  <isEqual prepend=',' property="displayCriteriaField" compareValue="subReportType">
		 cc.SUB_REPORT_TYPE_ID)a
		 order by a.reportType		 
	  </isEqual>
	
</select>

	
<select id="getCRDColumnsDataReportType"  resultClass="com.worldcheck.atlas.vo.report.CaseRawDataFinanceVO"
parameterClass="com.worldcheck.atlas.vo.report.RevenueSummaryVO">
select crd.CRN,
	crd.CLIENT_REFERENCE_NUMBER clientReferenceNumber,
	crd.REPORT_TYPE reportType,
	crd.CLIENT_NAME clientName,
	crd.CLIENT_CODE clientCode,
	crd.CASE_MANAGER caseManager,
	crd.CASE_STATUS caseStatus,
	crd.CASE_RECEIVED_DATE caseReceivedDate,
	crd.CASE_FEE_USD caseFee_usd,
	crd.case_fee_usd_plan_fx case_fee_usd_plan_fx,
	crd.FINAL_DD_CLIENT final_dd_Client,
	crd.FINAL_SENT_D_CLIENT clientFinalSentDate,
	crd.SUBJECT primarySubject,
	crd.SUBJECT_COUNTRY primarySubjectCountry,
	crd.SUBJECT_TYPE primarySubjectType,
	crd.MAIN_CLIENT_GROUP mainClientGroup,
	crd.CANCELLED_WITH_CHARGES cancelledCharges,
	crd.PARENT_CRN parentCRN,
	crd.SUB_REPORT_TYPE_PARENT_CRN subReportType_Parent_crn,
	crd.sales_month salesmonth,
	crd.SALES_REPRESENTATIVE_REGION salesRepresentativeRegion,
	crd.achieved_tat,
	crd.target_tat,
	crd.delivery_status delivery
	
		 from dw_case_raw_data crd left join cms_clientcase cc on crd.crn= cc.crn
	 where 1=1

	<isNotNull property="clientList" prepend="AND">
	<isNotEmpty  property="clientList">   
	  <isEqual property="clientType" compareValue="clientCode">
			 crd.client_code in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	   <isEqual property="clientType" compareValue="clientGroupName">
			 crd.main_client_group in <iterate property="clientList" open="(" close=")" conjunction=",">
								#clientList[]#
								</iterate> 
	   </isEqual>
	  </isNotEmpty> 
	</isNotNull>
	 
	 <isEqual property="caseExclusionField" compareValue="exclusion">
		
		<isNotNull property="excludeChildList">
			<isNotEmpty  prepend="AND" property="excludeChildList">
				 crd.CRN not in(select cal.linked_crn from cms_accounts_linkcases cal left join cms_clientcase cc 
		         on cal.crn = cc.crn where cc.sub_report_type_id in
		        (select subreport_type_master_id from cms_subreport_type_master where sub_crn_initial in
				<iterate property="excludeChildList" open="(" close=")" conjunction=",">
					#excludeChildList[]#
				</iterate> 
				))
			</isNotEmpty>
		</isNotNull>
	</isEqual>
	 
	<isEqual prepend="AND" property="dateRangeField" compareValue="case reecived date">
		crd.CASE_RECEIVED_DATE  BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	<isEqual prepend="AND" property="dateRangeField" compareValue="final sent date">
		crd.FINAL_SENT_D_CLIENT BETWEEN TO_DATE(#startDateField#, 'DD-Mon-YY') AND TO_DATE(#endDateField#, 'DD-Mon-YY')+1
	</isEqual>
	
	<isNotEqual property="salesRepresentativeField" compareValue="All">		
		<isNotNull property="salesRepresentativeList">
			<isNotEmpty  prepend="AND" property="salesRepresentativeList">
				crd.sales_representative_region in 
				<iterate property="salesRepresentativeList" open="(" close=")" conjunction=",">
					#salesRepresentativeList[]#
				</iterate> 
			</isNotEmpty>
		</isNotNull>
	</isNotEqual>
	
	
	 <isNotNull  prepend="AND" property="caseStatusList">
		<isNotEmpty  property="caseStatusList">
				(crd.CASE_STATUS in  <iterate property="caseStatusList" open="(" close=")" conjunction=",">
									#caseStatusList[]#
									</iterate> 
				<isEqual prepend="OR" property="cancelledWithCharges" compareValue="Yes"> 
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
			</isEqual>
				<isEqual prepend="OR" property="isCancelled" compareValue="Yes">
					 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
			</isEqual>
				)
		 </isNotEmpty> 
	  </isNotNull>
	
	  
	  <isEmpty prepend="AND" property="caseStatusList">
			<isEqual property="cancelledWithCharges" compareValue="Yes">
				((crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='Yes')
				<isEqual  prepend="OR" property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')		
				</isEqual>
				)
			</isEqual>
			
			<isEqual property="cancelledWithCharges" compareValue="No">
				<isEqual property="isCancelled" compareValue="Yes">
				 (crd.CASE_STATUS='Cancelled' AND crd.CANCELLED_WITH_CHARGES='No')			
				</isEqual>
			</isEqual>
	  </isEmpty>
	
	
	  <isNotNull prepend="AND" property="reportTypeList">
		<isNotEmpty  property="reportTypeList">
			crd.REPORT_TYPE in  <iterate property="reportTypeList" open="(" close=")" conjunction=",">
									#reportTypeList[]#
								</iterate> 
		</isNotEmpty> 
	  </isNotNull>  
	  
	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		<isNotEmpty  property="subReportTypeList">
			(cc.SUB_REPORT_TYPE_ID in(select SUBREPORT_TYPE_MASTER_ID from cms_subreport_type_master where SUB_CRN_INITIAL in
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
				#subReportTypeList[]#
			</iterate> 
			) OR cc.SUB_REPORT_TYPE_ID=0)
		</isNotEmpty> 
	  </isNotNull> 
		
	
</select>


	
</sqlMap>