<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
  "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="TaskConfig">

	<resultMap id="cntry" class="com.worldcheck.atlas.vo.task.CountrySubjectVO">
		<result property="countryId" column="countryId" />
		<result property="countryName" column="countryName" />
	</resultMap>

	<resultMap id="cntryDB" class="com.worldcheck.atlas.vo.task.CountryDBNamesVO">
		<result property="isChecked" column="isChecked" />
		<result property="countryDB" column="countryDB" />
		<result property="company" column="company" />
		<result property="individual" column="individual" />
	</resultMap>

	<resultMap id="subListForUser"
		class="com.worldcheck.atlas.vo.task.SubjectListForUserVO">
		<result property="subId" column="subId" />
		<result property="countryName" column="countryName" />
		<result property="position" column="position" />
		<!-- Start: Added for BI - 293 by 6032662-->
		<result property="subReportType" column="subReportType" />
		<!-- Start: Added for BI - 293 by 6032662-->
		<result property="entityName" column="entityName" />
		<result property="address" column="address" />
		<result property="details" column="details" />
		<result property="rName" column="rName" />
	</resultMap>

	<resultMap id="caseManagerList" class="com.worldcheck.atlas.vo.masters.UserMasterVO">
		<result property="userID" column="userID" />
		<result property="username" column="username" />
		<result property="userFullName" column="userFullName" />
	</resultMap>

	<resultMap id="reListForUser"
		class="com.worldcheck.atlas.vo.task.SubjectListForUserVO">
		<result property="rName" column="rName" />
	</resultMap>

	<resultMap id="clientReqData"
		class="com.worldcheck.atlas.vo.masters.ClientRequirmentMasterVO">
		<result property="uploadedFile" column="uploadedFile" />
		<result property="comment" column="comments" />
		<result property="reportType" column="reportType" />
		<result property="instruction" column="instruction" />
	</resultMap>

	<resultMap id="resultClientMasterVO"
		class="com.worldcheck.atlas.vo.masters.ClientMasterVO">
		<result property="clientCode" column="CLIENT_CODE" />
		<result property="clientName" column="CLIENT_NAME" />
		<result property="codeName" column="codeName" />
		<result property="isSubreportRequired" column="IS_SUBJ_LEVEL_SUBRPT_REQ"/>
	</resultMap>

	<resultMap id="resultDocMapVO" class="com.worldcheck.atlas.vo.document.DocMapVO">
		<result property="docId" column="DOCID" />
		<result property="version" column="VERSION" />
		<result property="marked" column="MARKED" />
		<result property="uploadedByJuno" column="UPLOADEDBYJUNO" />
		<result property="teamName" column="TEAMNAME" />
	</resultMap>

<resultMap id="isisSubjectDetails" class="com.integrascreen.orders.Subject">
		<result property ="subjectID" column = "SUBJECT_ID"/>
		<result property ="subjectName" column = "SUBJECT_NAME"/>
		<result property ="subjectType" column = "ENTITY_TYPE_ID"/>
		<result property ="ISISSubjectID" column = "ISIS_SUBJECT_ID"/>
		<result property ="subjectIndustryCode" column = "INDUSTRY_CODE"/>
		<result property ="country" column = "COUNTRY_CODE"/>	
	</resultMap>

		 

			<resultMap id="attributeDefaultValuesMap" class="com.worldcheck.atlas.vo.masters.RiskAttributeVO">
				<result property="attributeId" column="attribute_id"/>
				<result property="attributeValue" column="default_value"/>
	
		  </resultMap>

	<!--
		* * This query is for getting the country names information based on
		the subject id used for the crn * *
	-->

	<select id="getCountries" resultMap="cntry" parameterClass="java.lang.String">
		select cms_country_master.country_master_id as
		countryId,cms_country_master.country as countryName
		FROM
		cms_country_master where cms_country_master.country_master_id in (
		select
		cms_subject.country_id from cms_subject where
		cms_subject.crn=#crn#)
		and cms_country_master.status=1 order by
		countryName	
	</select>

	<select id="getCountryDBNames" resultMap="cntryDB"
		parameterClass="java.lang.String">
		SELECT (select 'false' from dual) as
		isChecked,cms_cntry_db_master.db_name as countryDB,(select '0' from
		dual) as company,(select '1' from dual) as individual FROM
		cms_cntry_db_master where country_id=#countryId# order by
		cms_cntry_db_master.db_name
	</select>

  
       <!-- Added By Saurabh Mittal -->
	<select id="getISISSubjectDetails" resultMap="isisSubjectDetails" parameterClass="java.lang.Long">
		Select SUBJECT_ID, SUBJECT_NAME, ENTITY_TYPE_ID, ISIS_SUBJECT_ID, INDUSTRY_CODE, (Select CODE FROM CMS_COUNTRY_MASTER WHERE COUNTRY_MASTER_ID=COUNTRY_ID) COUNTRY_CODE from CMS_SUBJECT WHERE SUBJECT_ID=#subjectId#
	</select>

       <!-- Added By Saurabh Mittal -->
	<select id="getCountryCode" resultClass="java.lang.String" parameterClass="java.lang.Long">
		Select CODE FROM CMS_COUNTRY_MASTER WHERE COUNTRY_MASTER_ID=#countryId#
	</select>

	       <!-- Added By Saurabh Mittal -->
	<select id="getRiskLabel" resultClass="java.lang.String" parameterClass="java.lang.String">
		Select RISK_LABEL FROM CMS_RISK_MASTER_TBL WHERE RISK_CODE=#riskCode#
	</select>

   <!-- Added by saurabh mittal to update risk association flag 26 may 2015 -->
    <update id="updateRiskFlag"  parameterClass="java.lang.String">
	 update cms_clientcase set RISK_ASSOCIATED = 1 where crn=#crn#
	</update>


	
	<select id="getRiskAssociatedWithCase" resultClass="java.lang.String"
		parameterClass="java.lang.String">
		select distinct risk_code from cms_risk_profile where CRN=#crn#
union all
SELECT
distinct cms_risk_mst.risk_code
   FROM
   cms_clientcase cc,
   cms_risk_master_tbl cms_risk_mst,
   cms_risk_mapping map
   WHERE 
    cc.crn = #crn#
   AND map.risk_code = cms_risk_mst.risk_code
   AND cms_risk_mst.risk_type = 1 
   AND cms_risk_mst.risk_is_active = 1
   AND map.mapping_status = 1
   AND map.risk_group=2
   AND map.mapping_id IN(SELECT crm.mapping_id FROM cms_risk_mapping crm 
   INNER JOIN (SELECT mapping_id,client_code FROM cms_risk_mapping_clients) cmc ON crm.mapping_id = cmc.mapping_id
   INNER JOIN (SELECT mapping_id,report_type FROM cms_risk_mapping_reports) cmr ON crm.mapping_id = cmr.mapping_id
   INNER JOIN (SELECT mapping_id,sub_report_type FROM cms_risk_mapping_subreports) cmsr ON crm.mapping_id = cmsr.mapping_id   
   WHERE (cmc.client_code = cc.CLIENT_CODE OR cmc.client_code = '-1')
   AND 
  ( cmr.report_type = cc.REPORT_TYPE_ID OR cmr.report_type = -1)

   AND ((cmsr.sub_report_type = cc.SUB_REPORT_TYPE_ID OR cmsr.sub_report_type = -1) OR (cmsr.sub_report_type is NULL)))
   AND map.risk_code not in(select distinct rp.risk_code from cms_risk_profile rp where rp.crn = #crn#
   and rp.risk_type=1)
   
  UNION ALL
  select distinct  crmt.risk_code             
   FROM cms_clientcase cc           ,
  CMS_SUBJECT cs                    ,
  cms_risk_master_tbl crmt          ,
  cms_risk_mapping mapt             ,
  cms_risk_mapping_clients mapClient,
  cms_risk_mapping_reports mapReport,
  cms_risk_mapping_subreports crms  ,
  CMS_RISK_MAPPING_COUNTRY crmc     ,
  CMS_RISK_CATEGORY_MASTER crcm     ,
  CMS_RISK_ATTR_DEFAULT_VAL_MAP dvm ,
  cms_risk_category_attr_map att_map,
  CMS_RISK_CATEGORY_ATTR_MASTER caam
  WHERE cc.crn        = #crn#
  AND cc.crn            = cs.crn
AND crmt.risk_code    = mapt.risk_code
AND cs.entity_type_id = mapt.subject_type
AND mapt.mapping_id   = mapClient.mapping_id
AND mapt.mapping_id   = mapReport.mapping_id
AND mapt.mapping_id   = crms.mapping_id
AND mapt.mapping_id        = crmc.mapping_id
AND (mapClient.client_code = cc.CLIENT_CODE
OR mapClient.client_code   = '-1')
AND (mapReport.report_type = cc.REPORT_TYPE_ID
OR mapReport.report_type   = -1)
AND ((crms.sub_report_type  = cc.SUB_REPORT_TYPE_ID
OR crms.sub_report_type    = -1) OR (crms.sub_report_type is NULL))
AND (crmc.SUBJECT_COUNTRY  = cs.country_id
OR crmc.SUBJECT_COUNTRY    = -1)
AND 0                      <![CDATA[ < ]]>
  (SELECT COUNT (crmr.RESEARCH_ELEMENT)
     FROM CMS_RISK_MAPPING_RE crmr
    WHERE crmr.mapping_id    = mapt.mapping_id
  AND (crmr.research_element IN
    (SELECT regexp_substr(cs.RE_IDS,'[^,]+', 1, level)
       FROM dual CONNECT BY regexp_substr(cs.RE_IDS, '[^,]+', 1, level) IS NOT NULL
    ) OR crmr.research_element=-1)
  )
AND crmt.risk_category_id = crcm.risk_category_id
AND crmt.risk_type = 2
AND crmt.risk_is_Active = 1
AND mapt.mapping_status = 1
AND mapt.risk_group       = 2
AND crmt.risk_category_id = att_map.risk_category_id
AND att_map.attribute_id  = caam.attribute_id
AND att_map.attribute_id  = dvm.attribute_id
AND cs.subject_id NOT    IN
  (SELECT DISTINCT rp.SUBJECT_ID
     FROM cms_risk_profile rp
    WHERE rp.crn           = #crn#
  AND rp.is_risk_mandatory =0
  AND rp.risk_code         = crmt.risk_code
  AND rp.risk_type         = 2
  ) 
   
		</select>

	<select id="getSubListForUser" resultMap="subListForUser"
		parameterClass="java.util.Map">
		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (
		select subj.subject_name as
		rName,subj.subject_id as subId,(select cntry.country
		from
		cms_country_master cntry where
		cntry.country_master_id=subj.country_id) as countryName,subj.POSITION
		as position,
		<!--Start: Added for BI-293 by 6032662-->
		(SELECT srtm.sub_report FROM cms_subreport_type_master srtm WHERE srtm.subreport_type_master_id = subj.sub_report_type_id) as subReportType,
		<!--End : Added for BI-293 by 6032662 -->
		(select
		entity.entity_name from cms_entitytype_master
		entity where
		entity.entity_type_id=
		subj.entity_type_id) as
		entityName,subj.ADDRESS as address,subj.OTHER_DETAILS as details from
		cms_subject
		subj where subj.subject_id in (select remap.subject_id from
		cms_sub_team_re_map remap where remap.crn=#crn# and
		remap.performer=#performer# and remap.team_id=(select
		cms_team_details.team_id from cms_team_details where
		team_type_id=#teamTypeId# and
		cms_team_details.crn=#crn# 
		<isEqual prepend="AND" property="teamTypeId" compareValue="2">
			INSTRB(cms_team_details.analysts,#performer#,1,1)>0
		</isEqual>
		<isEqual prepend="AND" property="teamTypeId" compareValue="4">
			cms_team_details.manager_id=#performer#
		</isEqual>
		<isEqual prepend="AND" property="teamTypeId" compareValue="3">
			cms_team_details.manager_id=#performer#
		</isEqual>
		))
		and subj.crn=#crn#
		order by
		 subj.is_primary_sub desc,  
							
			CASE WHEN (SELECT subj.ENTITY_TYPE_ID    
				FROM CMS_CLIENTCASE CASE,CMS_SUBJECT subj ,  CMS_COUNTRY_MASTER COUNT,CMS_ENTITYTYPE_MASTER ENTITY    
				WHERE 	CASE.CRN=#crn# AND subj.CRN=CASE.CRN  AND subj.COUNTRY_ID=COUNT.COUNTRY_MASTER_ID 
				and subj.ENTITY_TYPE_ID = ENTITY.ENTITY_TYPE_ID       AND subj.IS_PRIMARY_SUB = 1) = 1 THEN subj.entity_type_id      
			END  ,
			  
			CASE WHEN (SELECT subj.ENTITY_TYPE_ID    
				FROM CMS_CLIENTCASE CASE,CMS_SUBJECT subj ,  CMS_COUNTRY_MASTER COUNT,CMS_ENTITYTYPE_MASTER ENTITY    
				WHERE 	CASE.CRN=#crn# AND subj.CRN=CASE.CRN  AND subj.COUNTRY_ID=COUNT.COUNTRY_MASTER_ID 
				and subj.ENTITY_TYPE_ID = ENTITY.ENTITY_TYPE_ID       AND subj.IS_PRIMARY_SUB = 1) = 2 THEN subj.entity_type_id 
			 
			END  desc, upper(subj.subject_name) asc
			<!--Start: Added for BI-703 by 6027481-->
				,upper(countryName)asc
			<!--End: Added for BI-703 by 6027481-->
		) a WHERE ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#
	</select>

	<!--By Vishal -->
	<select id="getSubListCountForUser" resultClass="int"
		parameterClass="java.util.Map">
		select count(*) from
		(
		select subj.subject_name as
		subId,(select cntry.country
		from
		cms_country_master cntry where
		cntry.country_master_id=subj.country_id) as countryName,subj.POSITION
		as position,(select
		entity.entity_name from cms_entitytype_master
		entity where
		entity.entity_type_id=
		subj.entity_type_id) as
		entityName,subj.ADDRESS as address,subj.OTHER_DETAILS as details from
		cms_subject
		subj where subj.subject_id in (select remap.subject_id from
		cms_sub_team_re_map remap where remap.crn=#crn# and
		remap.performer=#performer# )
		and subj.crn=#crn#
		)
	</select>

	<!--By Vishal -->
	<select id="getREListForUser" resultMap="reListForUser"
		parameterClass="java.util.Map">
		select (select remaster.name from cms_re_master
		remaster where
		remaster.re_master_id=remap.re_id) as rName from
		cms_sub_team_re_map
		remap where remap.subject_id in ( select subject_id
		from cms_subject cmssubject
		where cmssubject.crn=#crn# and
		cmssubject.subject_id=#subjectID# and remap.team_id=#team_ID#) and
		remap.crn=#crn#
		and
		remap.performer=#performer#
		order by (SELECT remaster.group_id FROM cms_re_master remaster
        WHERE remaster.re_master_id = remap.re_id), rName ASC
	</select>

	<update id="updateREForUser" parameterClass="java.util.Map">
		update
		cms_sub_team_re_map remap set
		remap.rev_status=1,remap.updated_by=#performer# where
		remap.crn=#crn#
		and remap.performer=#performer#
	</update>

	<select id="getCaseManagers" resultMap="caseManagerList"
		parameterClass="java.lang.String">
		select usermap.user_id as
		userID,login_id as
		username,user_full_name as userFullName
		from cms_user_master umuser,
		cms_user_role_map usermap where
		usermap.user_id= umuser.user_master_id
		and
		usermap.role_id=#caseManager# and umuser.status=1
		Order by
		Upper(user_full_name)
	</select>

	<!-- Added By Saurabh Mittal -->

	<select id="caseISISOrderId" parameterClass="java.lang.String" resultClass="java.lang.String">
	  Select order_guid from cms_clientcase where crn=#crn#
	</select>

   	<!-- Added By Saurabh Mittal -->

	<select id="getCategoryLabel" parameterClass="java.lang.Long" resultClass="java.lang.String">
	  Select risk_category_name from cms_risk_category_master where risk_category_id=#categoryId#
	</select>


	<select id="getClientReqData" resultMap="clientReqData"
		parameterClass="java.lang.String">
		select (select
		rmaster.report_type from
		cms_report_type_master rMaster where
		rmaster.report_type_master_id=cqMaster.report_id) as
		reportType,cqMaster.instruction as instruction,cqMaster.file_name
		as
		uploadedFile,cqMaster.comments as comments
		from cms_client_req_master
		cqMaster
		where
		cqMaster.client_code=(select client_code from
		cms_client_master where client_name = #clientName#)
	</select>

	<select id="getAddedSubject" resultClass="java.lang.String"
		parameterClass="java.lang.String">
		select subject_name from cms_subject where crn=#crn#
	</select>

	<parameterMap id="procParam" class="map" >
	   <parameter property="selected_year" jdbcType="INTEGER" javaType="java.lang.Integer" mode="IN"/>
 	   <parameter property="rettoken" jdbcType="INTEGER" javaType="java.lang.Integer" mode="OUT"/>
    </parameterMap>
    
   <procedure id="getSeqForCRN" parameterMap="procParam" >
   {call getseqforcrn (?, ?)}
   </procedure>
<!-- 
	<select id="getSeqForCRN" resultClass="java.lang.Long">
		select CMS_CRN_SEQ.nextval
		from dual
	</select>
 -->
	<select id="checkForRecurrId" resultClass="java.lang.Long"
		parameterClass="java.lang.String">
		select count(*) from cms_recurr_clientcase where crn
		like #seqNumber#
	</select>



	<select id="getSeqForRecurrence" resultClass="java.lang.Long">
		select
		CMS_RECURR_CLIENTCASE_SEQ.nextval from dual
	</select>

	<select id="getReportInitials" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		select report_crn_initial from cms_report_type_master
		where report_type=#reportType#
	</select>

	<select id="getSubReportInitials" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		select sub_crn_initial from cms_subreport_type_master
		where
		sub_report=#subReportType#
	</select>
	
	<select id="getSubReportInitials2" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		select SPT.sub_crn_initial from cms_subreport_type_master SPT, cms_report_type_master RPT
		where
		SPT.sub_report=#subReportType#
		and RPT.report_type = #reportType#
		and RPT.STATUS = 1
		and spt.status = 1
		and RPT.REPORT_TYPE_MASTER_ID = SPT.REPORT_TYPE_ID
	</select>

	<insert id="insertRecurrentDetails" parameterClass="com.worldcheck.atlas.vo.task.RecurrentCaseVO">
		<selectKey resultClass="java.lang.String" type="pre"
			keyProperty="subjectId">
			select subreport_type_master_id from
			cms_subreport_type_master where sub_report=#subReportType# and
			report_type_id=(select rmaster.report_type_master_id from
			cms_report_type_master rMaster where
			rmaster.report_type=#reportType#)
  		</selectKey>

		INSERT INTO
		CMS_RECURR_CLIENTCASE(case_creator_id, case_fee,
		case_mgr_id,
		client_code, client_ref, crn, currency_code,
		final_due_days,
		int_client_duedays1, int_client_duedays2, is_express,
		next_run_date,
		office_id, recur_clientcase_id,
		recurr_enddate,
		recurr_pattern, recurr_range, NOOFRECURRENCES,report_type_id,
		sub_report_type_id,updated_by, updated_on,
		last_recurr_num,last_run_date)
		VALUES((select user_master_id from
		CMS_USER_MASTER where
		login_id=#caseCreator#),#caseFee#,#caseManager#,(select client_code
		from
		cms_client_master where
		client_name=#clientName#),#clientReference#,#CRN#,(select
		currency_code
		FROM cms_currency_master where
		currency=#currency#),#cFinal#,#cInterim1#,#cInterim2#,#isExpress#,#nextRun#,(select
		office_master_id from cms_office_master where
		office=#branchOffice#),cms_recurr_clientcase_seq.nextval,#endDate#,#recurrencePattern#,#recurrenceRange#,#noOfRecurrences#,(select
		report_type_master_id from cms_report_type_master where
		report_type=#reportType#),
		decode(#subjectId#,null,0,#subjectId#),#updatedBy#,#updatedOn#,#lastRecurrenceNum#,#lastRun#)
	</insert>

	<select id="getSubReportType" parameterClass="java.lang.String"
		resultClass="com.worldcheck.atlas.vo.report.SubReportTypeVO">
		SELECT SUBREPORT_TYPE_MASTER_ID subReportId,
		SUB_REPORT
		subReportName
		FROM
		CMS_SUBREPORT_TYPE_MASTER
		WHERE STATUS = 1 and
		report_type_id=(select
		rtype.report_type_master_id from
		cms_report_type_master rType where
		rType.report_type=#reportType#)
	</select>

	<select id="getVendorDetails" parameterClass="java.lang.String"
		resultClass="com.worldcheck.atlas.vo.task.VendorForCrnDetailsVO">
		select (select vmaster.vendor_code from cms_vendor_master
		vmaster where
		vmaster.vendor_master_id=vinv.vendor_id) as
		vendorId,(select
		vtype.vendor_type
		from cms_vendor_type vtype where
		vtype.vendor_type_id=vinv.vendor_type_id) as vendorType,
		vinv.manager
		as manager,vinv.status_code as status from cms_vendor_invoice vinv
		where
		vinv.crn=#crn#
	</select>

	<select id="getPID" parameterClass="java.lang.String"
		resultClass="java.lang.Long">
		select pid from CMS_CLIENTCASE where crn=#CRN#
	</select>

	<update id="updatePID" parameterClass="java.util.Map">
		update CMS_CLIENTCASE set
		pid=#PID# where crn=#CRN#
	</update>

	<select id="client_master_bycode" resultMap="resultClientMasterVO">
	 	SELECT
			CLIENT_CODE,CLIENT_NAME,CLIENT_CODE||'-'||CLIENT_NAME codeName, IS_SUBJ_LEVEL_SUBRPT_REQ FROM
		CMS_CLIENT_MASTER WHERE STATUS = 1 and client_code not in(select
			client_code from DW_TOP10_CLIENT_DROPDOWN) order by upper(CLIENT_CODE)
		<!-- SELECT
		CLIENT_CODE,CLIENT_NAME,CLIENT_CODE||'-'||CLIENT_NAME codeName, IS_SUBJ_LEVEL_SUBRPT_REQ FROM
		CMS_CLIENT_MASTER WHERE STATUS = 1 and client_code not in(select
		client_code from DW_TOP10_CLIENT_DROPDOWN) order by CLIENT_CODE -->
	</select>
	<select id="top10_client_master_bycode" resultMap="resultClientMasterVO">
		SELECT
			ccm.CLIENT_CODE,CLIENT_NAME,ccm.CLIENT_CODE||'-'||CLIENT_NAME codeName, IS_SUBJ_LEVEL_SUBRPT_REQ
		FROM
			CMS_CLIENT_MASTER ccm join DW_TOP10_CLIENT_DROPDOWN top10d
			on ccm.client_code = top10d.client_code
		WHERE ccm.STATUS = 1
			order by  upper(CCM.CLIENT_CODE),top10d.frequency desc	
		<!-- SELECT
		ccm.CLIENT_CODE,CLIENT_NAME,ccm.CLIENT_CODE||'-'||CLIENT_NAME codeName, IS_SUBJ_LEVEL_SUBRPT_REQ
		FROM
		CMS_CLIENT_MASTER ccm join DW_TOP10_CLIENT_DROPDOWN top10d
		on ccm.client_code = top10d.client_code
		WHERE ccm.STATUS = 1
		order by top10d.frequency desc,CCM.CLIENT_CODE  -->
	</select>

	<select id="client_master_byname" resultMap="resultClientMasterVO">
		SELECT
			CLIENT_CODE,CLIENT_NAME,CLIENT_CODE||'-'||CLIENT_NAME codeName, IS_SUBJ_LEVEL_SUBRPT_REQ 
		FROM
			CMS_CLIENT_MASTER 
		WHERE STATUS = 1 and client_code not in(select
			client_code from DW_TOP10_CLIENT_DROPDOWN) order by upper(CLIENT_NAME)
		<!-- SELECT
		CLIENT_CODE,CLIENT_NAME,CLIENT_CODE||'-'||CLIENT_NAME codeName, IS_SUBJ_LEVEL_SUBRPT_REQ FROM
		CMS_CLIENT_MASTER WHERE STATUS = 1 and client_code not in(select
		client_code from DW_TOP10_CLIENT_DROPDOWN) order by CLIENT_NAME -->
	</select>
	<select id="top10_client_master_byname" resultMap="resultClientMasterVO">
		SELECT
			ccm.CLIENT_CODE,CLIENT_NAME,ccm.CLIENT_CODE||'-'||CLIENT_NAME codeName, IS_SUBJ_LEVEL_SUBRPT_REQ 
		FROM
			CMS_CLIENT_MASTER ccm join DW_TOP10_CLIENT_DROPDOWN top10d
			on ccm.client_code = top10d.client_code
		WHERE ccm.STATUS = 1
			order by upper(CLIENT_NAME),top10d.frequency desc
		
		<!-- SELECT
		ccm.CLIENT_CODE,CLIENT_NAME,ccm.CLIENT_CODE||'-'||CLIENT_NAME codeName, IS_SUBJ_LEVEL_SUBRPT_REQ 
		FROM
		CMS_CLIENT_MASTER ccm join DW_TOP10_CLIENT_DROPDOWN top10d
		on ccm.client_code = top10d.client_code
		WHERE ccm.STATUS = 1
		order by top10d.frequency desc,CLIENT_NAME  -->
	</select>
	<select id="getTurnAround" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		select turn_around_time from cms_report_type_master where
		report_type=#reportType#
	</select>

	<select id="isHoliday" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		select holiday_desc from cms_holiday_master where
		dated_on=to_date(#holidayDate#) and office_id=(select office_master_id
		from cms_office_master where office=#officeName#)
	</select>
 
    <select id="isHolidayForOfficeId" parameterClass="java.util.Map"
		resultClass="java.lang.Integer">
		select count(*) from cms_holiday_master where
		dated_on=to_date(#holidayDate#) and office_id=#officeName#
	</select>
	
	<select id="isHolidayForClientDueDate" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		select wm_concat(office) from cms_office_master where
		office_master_id in (select OFFICE_ID from cms_holiday_master where
		dated_on=to_date(#holidayDate#))
	</select>
	
	<select id="isHolidayForAnalyst" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		select concat(concat(ch.HOLIDAY_DESC, ','),com.OFFICE) from cms_holiday_master ch, cms_office_master com
		where ch.dated_on=to_date(#holidayDate#) and
		ch.office_id=(select cu.office_id from cms_user_master cu where cu.user_full_name=#analyst#)
                and ch.OFFICE_ID = com.OFFICE_MASTER_ID
	</select>

	<select id="getCountryForClient" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		select (select office from cms_office_master where
		office_master_id=branch_office_id)||'::'||(select LOGIN_ID as
		username from cms_user_master where
		login_id=associated_cm) from
		cms_client_master where client_code=#ClientCode#
	</select>

	<select id="getAnalystForManager" resultClass="com.worldcheck.atlas.vo.masters.UserMasterVO"
		parameterClass="java.lang.String">

		SELECT distinct(CUM.LOGIN_ID) username,
		CUM.USER_FULL_NAME userFullName
		FROM CMS_USER_MASTER
		CUM,CMS_USER_ROLE_MAP CURM
		WHERE LEVEL>1
		START
		WITH upper(LOGIN_ID) =
		upper(#managerId#)
		CONNECT BY PRIOR
		upper(LOGIN_ID) = upper(REPORTS_TO)
	</select>


		<select id="getAttributeDefaultValues" parameterClass="java.util.List" resultMap="attributeDefaultValuesMap">
			SELECT attribute_id, default_value  FROM CMS_RISK_ATTR_DEFAULT_VAL_MAP WHERE attribute_id in 
			<iterate open="(" close=")" conjunction=",">
			#attributeIdsList[]#
			</iterate>
			order by attribute_id
		</select> 		

	<select id="getCountryDatabaseForCountry" resultClass="com.worldcheck.atlas.vo.task.CountryDatabaseVO"
		parameterClass="java.util.Map">
		SELECT * FROM ( SELECT searchResult.*, ROWNUM rn FROM (
		SELECT
		CCM.COUNTRY, CCDCM.NAME category, CCDM.LINK
		link, CCDM.SEARCH_METHOD
		search_method, CCDM.LANGUAGE language,
		CCDM.REMARKS remarks,
		CCDM.DB_NAME nameOfDatabase, CCDTM.NAME type,
		CCDM.DESCRIPTION
		description
		FROM
		CMS_COUNTRY_MASTER CCM,
		CMS_CNTRY_DB_MASTER CCDM,
		CMS_CNTRY_DB_CATEG_MASTER CCDCM,
		CMS_CNTRY_DB_TYPE_MASTER CCDTM
		WHERE
		CCDCM.CNTRY_DB_CATEG_ID =
		CCDM.CATEGORY_ID AND CCM.COUNTRY_MASTER_ID
		=
		CCDM.COUNTRY_ID
		AND
		CCDTM.CNTRY_DB_TYPE_ID = CCDM.TYPE_ID AND
		CCDM.COUNTRY_ID =
		#countryId#)
		searchResult WHERE ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#

	</select>

	<select id="getCountryDatabaseForCountryCount" resultClass="int"
		parameterClass="java.lang.String">
		SELECT count(*)
		FROM
		CMS_COUNTRY_MASTER CCM,
		CMS_CNTRY_DB_MASTER CCDM,
		CMS_CNTRY_DB_CATEG_MASTER CCDCM,
		CMS_CNTRY_DB_TYPE_MASTER CCDTM
		WHERE CCDCM.CNTRY_DB_CATEG_ID =
		CCDM.CATEGORY_ID AND CCM.COUNTRY_MASTER_ID
		= CCDM.COUNTRY_ID
		AND
		CCDTM.CNTRY_DB_TYPE_ID = CCDM.TYPE_ID AND CCDM.COUNTRY_ID =
		#countryId#
	</select>


	<select id="getDocs" resultMap="resultDocMapVO" parameterClass="java.lang.String">
		select docId,version,marked,uploadedByJuno,teamName from cms_document
		where docid in ($docId$)	
	</select>

	<update id="insertDocs" parameterClass="java.util.Map">
		update cms_document set
		teamName=#teamname#,pid=#pid# where docid in ($docid$)
	</update>

	<select id="getMaxVersion" resultClass="int" parameterClass="java.util.Map">
		SELECT max(version) from cms_document where docname=#docName# and
		pid=#pid# and folder_name=(select folder_name from cms_document where
		docid in ($docId$))
	</select>

	<select id="getMaxCount" resultClass="int" parameterClass="java.util.Map">
		SELECT count(*) from cms_document where docname=#docName# and
		pid=#pid# and folder_name=(select folder_name from cms_document where
		docid in ($docId$))
	</select>

	<update id="versionControl" parameterClass="java.util.Map">

		update cms_document
		set version=#maxVersion# where docId=#docId#
	</update>


	<update id="resetStatus" parameterClass="java.lang.String">
		update cms_document
		set
		marked=0 where docid in ($docId$)
	</update>

	<update id="updateStatus" parameterClass="java.lang.String">
		update cms_document set
		marked=1 where docid = #docId#
	</update>

	<update id="updateStatusForJuno" parameterClass="java.lang.String">
		update
		cms_document set
		marked=1,UPLOADEDBYJUNO=1 where docid = #docId#
	</update>

	<update id="MarkJuno" parameterClass="java.lang.String">
		update
		cms_document set
		UPLOADEDBYJUNO=1 where docid = #docId#
	</update>

	<delete id="deleteDocuments" parameterClass="java.lang.String">
		delete from
		cms_document where docid in ($docIds$)
	</delete>

	<select id="sensitiveFolderPermission" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		select count(*) from cms_user_role_map where role_id in
		('R1','R2','R3','R6','R7','R9','R10','R12') and user_id=(select user_master_id
		from cms_user_master userMaster where userMaster.login_id=#userId#)
	</select>

	<select id="hasDeletePermission" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		select count(*) from cms_user_role_map where role_id in
		('R2','R4','R7','R9') and user_id=(select user_master_id
		from
		cms_user_master userMaster where userMaster.login_id=#userId#)
	</select>

	<select id="hasUploadPermissionAfterComplete" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		select count(*) from cms_user_role_map where role_id in
		('R2','R4','R7','R9') and user_id=(select user_master_id
		from
		cms_user_master userMaster where userMaster.login_id=#userId#)
	</select>

	<select id="getOfficeId" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		select office_id from cms_user_master userMaster where
		userMaster.login_id=#userId#
	</select>

	<select id="getOfficeCode" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		select OFFICE_CODE from cms_user_master LEFT JOIN CMS_OFFICE_MASTER 
		ON cms_user_master.OFFICE_ID=CMS_OFFICE_MASTER.OFFICE_MASTER_ID
		where
		cms_user_master.login_id=#userId#
	</select>

	<select id="getMarkedCount" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		select count(*) from cms_document where marked=1 and docid
		in ($docIds$)
	</select>


	<update id="updateSendDate" parameterClass="java.util.Map">
		update CMS_CLIENTCASE set
		UPDATED_BY = #updatedBy#,
		UPDATED_ON =
		SYSDATE,
		CLIENT_FEEDBACK=#clientFeedBack#,
		<isNotNull property="Interim1">
			CLIENT_INT_SENTDATE1 =
			to_date(#Interim1#,'dd-MM-yyyy HH24:MI:SS')
			</isNotNull>
		<isNotNull property="Interim2">
			CLIENT_INT_SENTDATE2 =
			to_date(#Interim2#,'dd-MM-yyyy HH24:MI:SS')
			</isNotNull>
		<isNotNull property="Final">
			CLIENT_FINAL_SENTDATE =
			to_date(#Final#,'dd-MM-yyyy HH24:MI:SS')
			</isNotNull>
		where CRN = #CRN#
	</update>

	<select id="getTaskForManager" parameterClass="java.lang.String"
		resultClass="java.util.HashMap">
		select crn,pid from cms_clientcase where
		case_mgr_id=#userId# and case_status_id=3
	</select>


	<select id="isMarkedAndJUNOUploadedFile" parameterClass="java.lang.Long"
		resultClass="java.lang.Integer">
		select
		count(*) from cms_document where pid=#pid# and
		marked=1 and
		uploadedbyjuno=1
	</select>

	<update id="updateDateForMIS">
		update cms_team_details set
		UPDATED_BY = #updatedBy#,
		UPDATED_ON =
		SYSDATE
		<isNotNull property="Interim1" prepend=",">
			int1researchcompdt
			=SYSDATE
			</isNotNull>
		<isNotNull property="Interim2" prepend=",">
			int2researchcompdt
			=SYSDATE
			</isNotNull>
		<isNotNull property="Final" prepend=",">
			finalresearchcompdt
			=SYSDATE
			</isNotNull>
		where team_id = #teamId#
	</update>

	<select id="getFileForISIS" parameterClass="java.lang.Long"
		resultClass="java.lang.String">

		select DOCNAME||'==='|| version as fileName from
		cms_document where
		pid=#pid# and marked=1
	
	</select>

	<select id="isISISCase" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">

		select IS_ISIS as isISIS from cms_clientcase where
		crn=#crn#
		
	</select>

	<select id="getDocVersion" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">

		select version as versn from cms_document where
		docid=#docId#
		
	</select>

	<select id="getCBDValue" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">

		select ISBUDGETDUEDATECONFIRMED from cms_accounts where
		crn=#crn#
		
	</select>

	<select id="getSavvionTasks" resultClass="com.worldcheck.atlas.vo.task.CustomTaskVO"
		parameterClass="java.util.Map">
		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (
		 SELECT sav.CRN  ,
		  PROCESSCYCLE      ,
		  CYCLE ,
		  COMPLETETASKSTATUS      ,
		  OFFICETASKSTATUS  ,
		  INVOICETASKSTATUS ,
		  CONSOLIDATIONTASKSTATUS ,
		  CLIENTSUBMISSIONTASKSTATUS  ,
		  AWAITINGTASKSTATUS      ,
		  TASKSTATUS  ,
		   CASESTATUS,
		  WORKITEM_ID  AS WORKITEMID     ,
		  PROCESS_TEMPLATE_ID  AS PROCESSTEMPLATEID   ,
		  PROCESS_INSTANCE_ID  AS PROCESSINSTANCEID   ,
		 CASE WHEN WORKSTEP_NAME='Team Assignment Task' 
		 THEN CONCAT('Team Assignment Task' ,CONCAT(' (',  CONCAT(SUBSTR(SAVVIONDB.getTeamType(PROCESS_INSTANCE_ID), 1, INSTR(SAVVIONDB.getTeamType(PROCESS_INSTANCE_ID), '##') -1),')') )) 
		WHEN WORKSTEP_NAME='Review Task'
		  THEN CONCAT('Review Task' ,CONCAT(' (', CONCAT(SUBSTR(SAVVIONDB.GETTEAMTYPE_REVIEW(PROCESS_INSTANCE_ID), 1, INSTR(SAVVIONDB.GETTEAMTYPE_REVIEW(PROCESS_INSTANCE_ID), '##') -1),')') ))
          ELSE WORKSTEP_NAME   
		 END AS WORKSTEPNAME,
       CASE WHEN WORKSTEP_NAME='Review Task'           
         THEN  replace(SAVVIONDB.GETANALYST_REVIEW(SAVVIONDB.GETTEAMTYPE_REVIEW(PROCESS_INSTANCE_ID)), ',', ';') 
          ELSE ''  END   AS analysts ,
		  WORKITEM_NAME  AS WORKITEMNAME   ,
		  TO_CHAR(START_TIME, 'Mon dd, YYYY HH:MI') AS STARTTIME    ,
		  TO_CHAR(END_TIME, 'Mon dd, YYYY HH:MI')   AS ENDTIME      ,
		  TO_CHAR(DUE_DATE, 'Mon dd, YYYY HH:MI')   AS DUEDATE      ,
		  PERFORMER   ,
		  PREV_PERFORMER  AS PREVIOUSPERFORMER  ,
		  DECODE(PRIORITY,'critical', 'Critical','high', 'High','medium', 'Medium','low', 'Low', PRIORITY) AS PRIORITY,
		  STATUS, PRIMARYSUBJECT,PRIMARYSUBJECTCOUNTRY
		   FROM TABLE(SAVVIONDB.get_task_list(#userID#, $userList$,$customFilterCondition$)) sav,
		   cms_clientcase cc
		   where cc.crn=sav.crn
		  $statusCondition$
		) a WHERE ROWNUM <![CDATA[ <= ]]>
		#limit# ) WHERE rn <![CDATA[ >= ]]>
		#start#
	</select>
	
	
	<select id="getSavvionTasksCount" resultClass="java.lang.Integer"
		parameterClass="java.util.Map">
		 SELECT count(*)
		   FROM TABLE(SAVVIONDB.get_task_list(#userID#, $userList$,$customFilterCondition$)) sav,
		   cms_clientcase cc
		   where cc.crn=sav.crn
		    $statusCondition$
	</select>

	<select id="getMyIncomingTasks" resultClass="com.worldcheck.atlas.vo.TeamDetails"
		parameterClass="java.util.Map">
		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (
		select CRN,ROLETYPE,TEAMNAME from (	
		  
		  select b.crn crn ,c.roletype roletype,concat(concat(b.team_type,'##'),b.team_id) teamName from ((SELECT ctd.crn,ctd.team_id,ctt.team_type
		FROM cms_team_details ctd,cms_team_type ctt,cms_case_status_master ccsm,cms_clientcase ccc
		where ctd.team_type_id = ctt.TEAM_TYPE_ID
		and ccc.crn = ctd.crn
		and ccc.case_status_id = ccsm.CASE_STATUS_ID
		and ccsm.DESCRIPTION = 'In Progress') b join 
		(select * from (SELECT crn,team_id,
		     CASE
		   WHEN reviewer1 = #userID# THEN
		    'REVIEWER'
		   WHEN reviewer2 =#userID# THEN
		    'REVIEWER'
		   WHEN reviewer3 = #userID# THEN
		    'REVIEWER'
		  END AS
		   roletype
		   FROM cms_team_details
		    where crn not in (
		   select r.crn from savviondb.review r, savviondb.casecreation c
		   where r.crn=c.crn 
		   and r.casestatus='In Progress'
		   and r.reviewer=#userID#
		   and c.processcycle='Final'
		   )
		  ) where roletype is not null ) c 
		  on b.team_id = c.team_id)
		 UNION
		 select * from(
		 select crn,
		  CASE
		  WHEN case_mgr_id = #userID# THEN
		  'MANAGER'
		  END AS 
		  roletype,'' as team_id
		  from cms_clientcase
		  where case_status_id = (select case_status_id from cms_case_status_master where DESCRIPTION = 'In Progress') 
		   AND pid not in(select w.process_instance_id from savviondb.workstep w, savviondb.casecreation c
			WHERE w.process_instance_id=c.process_instance_id
			and w.process_instance_id=pid
			and w.workstep_name='Client Submission Task'
			and w.status='W_ACTIVATED'
			and c.processcycle='Final') 
		  ) where roletype is not null
		  UNION ALL
		  
		SELECT CRN  , 'AWAITING' as ROLETYPE,'' as TEAMNAME
				   FROM TABLE(SAVVIONDB.get_task_list(#userID#, $users$,' AND WI.WORKSTEP_NAME = ''WaitForConsolidation'' and BLIDS.casestatus = ''In Progress'''))
		 )  where crn not in (
      SELECT CRN
				   FROM TABLE(SAVVIONDB.get_task_list(#userID#, $users$,' AND WI.WORKSTEP_NAME = ''Client Submission Task'' and BLIDS.casestatus = ''In Progress'''))
     ) order by substr(CRN,INSTR(CRN,'\', 15, 1)+1,4) asc, crn asc,roletype
		 ) a WHERE ROWNUM <![CDATA[ <= ]]>
		#limit# ) WHERE rn <![CDATA[ >= ]]>
		#start#
		
	</select>
	
	<select id="getMyIncomingTasksCount" resultClass="java.lang.Integer"
		parameterClass="java.util.Map">
		select count(*) from (	
		  select b.crn crn ,c.roletype roletype,concat(concat(b.team_type,'##'),b.team_id) teamName from ((SELECT ctd.crn,ctd.team_id,ctt.team_type
		FROM cms_team_details ctd,cms_team_type ctt,cms_case_status_master ccsm,cms_clientcase ccc
		where ctd.team_type_id = ctt.TEAM_TYPE_ID
		and ccc.crn = ctd.crn
		and ccc.case_status_id = ccsm.CASE_STATUS_ID
		and ccsm.DESCRIPTION = 'In Progress') b join 
		(select * from (SELECT crn,team_id,
		     CASE
		   WHEN reviewer1 = #userID# THEN
		    'REVIEWER'
		   WHEN reviewer2 =#userID# THEN
		    'REVIEWER'
		   WHEN reviewer3 = #userID# THEN
		    'REVIEWER'
		  END AS
		   roletype
		   FROM cms_team_details
		   where crn not in (
		   select r.crn from savviondb.review r, savviondb.casecreation c
		   where r.crn=c.crn 
		   and r.casestatus='In Progress'
		   and r.reviewer=#userID#
		   and c.processcycle='Final'
		   )
		  ) where roletype is not null ) c 
		  on b.team_id = c.team_id)
		 UNION
		 select * from(
		 select crn,
		  CASE
		  WHEN case_mgr_id = #userID# THEN
		  'MANAGER'
		  END AS 
		  roletype,'' as team_id
		  from cms_clientcase
		  where case_status_id = (select case_status_id from cms_case_status_master where DESCRIPTION = 'In Progress') 
		   AND pid not in(select w.process_instance_id from savviondb.workstep w, savviondb.casecreation c
			WHERE w.process_instance_id=c.process_instance_id
			and w.process_instance_id=pid
			and w.workstep_name='Client Submission Task'
			and w.status='W_ACTIVATED'
			and c.processcycle='Final')
		  ) where roletype is not null
		   UNION ALL
		SELECT CRN  , 'AWAITING' as ROLETYPE,'' as TEAMNAME
				   FROM TABLE(SAVVIONDB.get_task_list(#userID#, $users$,' AND WI.WORKSTEP_NAME = ''WaitForConsolidation'' and BLIDS.casestatus = ''In Progress'''))
		 ) where crn not in (
      SELECT CRN
				   FROM TABLE(SAVVIONDB.get_task_list(#userID#, $users$,' AND WI.WORKSTEP_NAME = ''Client Submission Task'' and BLIDS.casestatus = ''In Progress'''))
     ) 
	</select>

		<select id="getHeaderCount" resultClass="java.lang.Integer"
			parameterClass="java.util.Map">
			   select count(*) from CMS_BROWSER_INFO where user_id=#userId#
		</select>
	
		<update id="updateHeader" 
			parameterClass="java.util.Map">
			   update CMS_BROWSER_INFO set 
			   header_info=#headerInfo# ,
			   updated_on =sysdate
			  where user_id=#userId#
		</update>
		
		<insert id="insertHeader">
			
			<selectKey resultClass="java.lang.String" type="pre" keyProperty="headerId">

			SELECT CMS_HEADER_INFO_SEQ.nextval AS VALUE FROM DUAL

		</selectKey>
			   insert into CMS_BROWSER_INFO(id, user_id , header_info , updated_on) 
			   values(#headerId# , #userId# , #headerInfo# , sysdate)
		</insert>
	    
		<select id="getAnalyst" resultClass="java.lang.String"
			parameterClass="java.util.Map">
			
						 SELECT REPLACE(wm_concat(a.user_full_name) , ',' , '; ')
						   FROM
						  (SELECT c.user_full_name    FROM SAVVIONDB.researchtask r , cms_user_master c
							WHERE r.crn      =#crn#
						  AND r.teamtypelist =#teamTypeList# 
						  AND r.teamcyclename=#cycle#
						  AND c.login_id=r.analyst
						   ORDER BY c.user_full_name
						  ) a 
			
		</select>
		
	<select id="getTeamAssignmentTasks" resultClass="com.worldcheck.atlas.vo.task.MyTaskPageVO"
		parameterClass="java.util.Map">
	  select 
            b.teamtypelist as TEAMTYPELIST,
            concat(concat(concat('Team Assignment Task##',b.process_instance_id) ,'::Team Assignment Task::'),#userName#) AS taskname,
            wi.workitem_id as WORKITEMID,
            b.crn as CRN,
            b.processcycle as currentCycle,
            b.process_instance_id as PROCESSINSTANCEID,
            b.taskstatus as status
     from SAVVIONDB.WORKITEM wi,
	 SAVVIONDB.BIZLOGIC_WORKITEM blwi, 
	 SAVVIONDB.teamassignment b 
     where b.process_instance_id = wi.process_instance_id
     and  wi.process_instance_id = blwi.process_instance_id
     and b.crn=#crn# 
     and wi.WORKSTEP_NAME = 'Team Assignment Task'
     and b.taskstatus='New'
     and wi.performer=#userName#
     ORDER BY  b.teamtypelist

 </select>
 <select id="getSubReportTypeList" resultClass="com.worldcheck.atlas.vo.report.SubReportTypeVO" >
	  SELECT SUB_REPORT subReportName, 
	  subreport_type_master_id subReportId,
	  sub_crn_initial subCrnInitial,
	  report_type_id reportTypeId
	  FROM
	  CMS_SUBREPORT_TYPE_MASTER
	  WHERE STATUS = 1 and report_type_id in (select
	  rtype.report_type_master_id from
		cms_report_type_master rType where status=1
		)
    </select>
<!-- Added by Anurag for Risk profile CR -->
<resultMap id="subLevelRiskDetails" class="com.worldcheck.atlas.vo.task.SubjectListForUserVO" groupBy="subId">
		<result property = "subId" column="Subject_Id"/>
		<result property = "rName" column = "Subject_Name"/>
		<result property = "entityName" column = "ENTITY_NAME" />
		<result property = "countryName" column = "COUNTRY_NAME"/>
		<result property = "industryCode" column = "INDUSTRY_CODE"/>
		<result property = "categoryMasterDataList" resultMap="TaskConfig.getCategoryDetails"/>
	</resultMap>
	
	<resultMap id="getCategoryDetails" class="com.worldcheck.atlas.vo.masters.RiskCategoryMasterVO" groupBy="riskCategoryId">
		<result property = "riskCategoryId" column = "RISK_CATEGORY_ID"/>
		<result property="category" column = "CATEGORY_NAME" />
		<result property = "riskMasterDataList" resultMap="TaskConfig.getRiskForCategory"/>
		
	</resultMap>
	
	<resultMap id="getAttributeListByCategory" class="com.worldcheck.atlas.vo.masters.RiskAttributeVO" groupBy="attributeId" >
		<result property ="attributeId" column = "ATTRIBUTE_ID"/>
		<result property ="attributeName" column = "ATTRIBUTE_NAME"/>
		<result property ="attributeType" column = "ATTRIBUTE_TYPE"/>
		<result property ="attributeValue" column = "ATTRIBUTE_VALUE"/>	
		<result property ="riskAttributeValue" column = "Risk_Attr_Value"/>
	</resultMap>
	<resultMap id="getRiskForCategory" class="com.worldcheck.atlas.vo.masters.RisksMasterVO" groupBy = "riskCode,countryId">
		<result property = "riskCode" column = "risk_code"/>
		<result property="riskLabel" column = "risk_label" />
		<result property="visibleToClientForm" column="visible_to_client" />
		<result property ="isRiskMandatory" column = "is_risk_mandatory"/>
		<result property ="countryId" column = "country_master_id"/>
		<result property ="countryName" column = "country"/>
		<result property ="isRiskApplied" column = "is_risk_applied"/>	
		<result property ="hasCountryBreakdown" column = "has_cntry_brkdown"/>
		<result property ="displayOnProfileForm" column = "display_on_profile"/>		
		<result property = "riskAttributeVOList" resultMap="TaskConfig.getAttributeListByCategory"/>
	</resultMap>

 
	<select id="getSubLevelRiskForUser" resultMap="subLevelRiskDetails" parameterClass= "java.util.Map">
		

select * from (select table1.Subject_Id,table1.Subject_Name,table1.ENTITY_NAME,table1.COUNTRY_NAME,table1.INDUSTRY_CODE,table2.risk_profile_id,table2.RISK_CATEGORY_ID,table2.CATEGORY_NAME,
		table2.ATTRIBUTE_ID,table2.ATTRIBUTE_NAME,table2.ATTRIBUTE_TYPE,table2.ATTRIBUTE_VALUE,table2.risk_code,table2.risk_label,table2.visible_to_client,
    table2.display_on_profile,table2.risk_type, table2.is_risk_mandatory,table2.IS_RISK_APPLIED,
    table2.has_cntry_brkdown,table2.country_master_id,table2.country,table2.RISK_ATTR_VALUE FROM
		(SELECT cs.subject_id Subject_Id,
		  cs.subject_name Subject_Name  ,
		  cs.INDUSTRY_CODE INDUSTRY_CODE,
		  cem.entity_name ENTITY_NAME   ,
		  ccm.country COUNTRY_NAME
		   FROM CMS_SUBJECT cs     ,
		  cms_entitytype_master cem,
		  cms_country_master ccm
		  WHERE cs.crn        = #crn#
		AND cs.entity_type_id = cem.entity_type_id
		AND cs.country_id     = ccm.country_master_id
		<isEqual prepend="AND" property="taskName" compareValue="Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer# 
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="2">
					INSTRB(cms_team_details.analysts,#performer#,1,1)>0
				</isEqual>
		))
		</isEqual>
		<isEqual prepend="AND" property="taskName" compareValue="BI Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer#
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="3">
					cms_team_details.manager_id=#performer#
				</isEqual>
		))
		</isEqual>
		<isEqual prepend="AND" property="taskName" compareValue="Vendor Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer#
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="4">
					cms_team_details.manager_id=#performer#
				</isEqual>
		))
		</isEqual>
		<isEqual property="taskName" compareValue="Review Task">
			<isNotNull property="teamId">
				<isNotEqual property="teamName" compareValue="Primary">			
					<isNotEmpty prepend="AND" property="teamId">
						 cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.TEAM_ID=#teamId#)
					</isNotEmpty>
				 </isNotEqual>
			 </isNotNull>
		</isEqual>
		ORDER BY cs.subject_id
		) table1 left outer join

    (SELECT crp.risk_profile_id risk_profile_id, crp.subject_id CRP_Subject_Id  ,
		  crp.risk_category_id RISK_CATEGORY_ID,
		  crcm.risk_category_name CATEGORY_NAME,
		  crp.attribute_id ATTRIBUTE_ID        ,
		  caam.ATTRIBUTE_NAME ATTRIBUTE_NAME   ,
		  caam.attribute_type ATTRIBUTE_TYPE   ,
		  (SELECT wm_concat(avm.value)
			 FROM CMS_RISK_ATTRIBUTE_VALUE_MAP avm
			WHERE avm.attribute_id = crp.attribute_id
		  ) AS ATTRIBUTE_VALUE ,
       crp.attribute_value RISK_ATTR_VALUE,
		  crp.risk_code        ,
		  crm.risk_label       ,
		  crp.visible_to_client,
      crm.display_on_profile,
      crm.risk_type,
		  crp.is_risk_mandatory,
      crp.IS_RISK_APPLIED,
       0 as has_cntry_brkdown,
      0 as country_master_id,
      NULL as country
		  FROM CMS_RISK_PROFILE crp
		LEFT JOIN CMS_SUBJECT cs
			 ON crp.subject_id = cs.subject_id ,
		  CMS_RISK_CATEGORY_MASTER crcm       ,
		  CMS_RISK_CATEGORY_ATTR_MASTER caam  ,
		  CMS_RISK_MASTER_TBL crm,
		  CMS_CLIENTCASE cc
		  WHERE crp.crn          = #crn#
		  AND crp.crn            = cc.crn
      and cc.risk_associated =1
		AND crp.subject_id       = cs.subject_id
		AND crp.risk_category_id = crcm.risk_category_id
		AND crp.attribute_id     = caam.attribute_id
		AND crp.risk_code        = crm.risk_code
		AND crm.risk_type        = 2
		AND crp.is_risk_mandatory = 1
  	<isEqual prepend="AND" property="taskName" compareValue="Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer# 
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="2">
					INSTRB(cms_team_details.analysts,#performer#,1,1)>0
				</isEqual>
		))
		</isEqual>
		<isEqual prepend="AND" property="taskName" compareValue="BI Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer#
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="3">
					cms_team_details.manager_id=#performer#
				</isEqual>
		))
		</isEqual>
		<isEqual prepend="AND" property="taskName" compareValue="Vendor Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer#
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="4">
					cms_team_details.manager_id=#performer#
				</isEqual>
		))
		</isEqual>
		<isEqual property="taskName" compareValue="Review Task">
			<isNotNull property="teamId">
				<isNotEqual property="teamName" compareValue="Primary">			
					<isNotEmpty prepend="AND" property="teamId">
						 cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.TEAM_ID=#teamId#)
					</isNotEmpty>
				 </isNotEqual>
			 </isNotNull>
		</isEqual>
       Union All
     SELECT crptab.risk_profile_id risk_profile_id,
      crpTab.SUBJECT_ID CRP_Subject_Id  ,
      crpTab.risk_category_id RISK_CATEGORY_ID,
		  crcm.risk_category_name CATEGORY_NAME,
       chbd.attribute_id ATTRIBUTE_ID,
		  caam.ATTRIBUTE_NAME ATTRIBUTE_NAME,
		  caam.attribute_type ATTRIBUTE_TYPE,
      (SELECT wm_concat(avm.value)
			FROM CMS_RISK_ATTRIBUTE_VALUE_MAP avm
		   WHERE avm.attribute_id = chbd.attribute_id 
			) AS ATTRIBUTE_VALUE,  
      chbd.attribute_value RISK_ATTR_VALUE,
		  crpTab.risk_code,
      crm.risk_label,
		crpTab.visible_to_client,	
      crm.display_on_profile,
      crm.risk_type,
      crpTab.is_risk_mandatory as is_risk_mandatory,
      1 as IS_RISK_APPLIED,
      crm.has_cntry_brkdown,
      chbd.country_master_id,
      ccm.country
		  from CMS_RISK_PROFILE crpTab left outer join 
      CMS_RISK_PROFILE_HAS_CNTRY_BD chbd on crptab.risk_profile_id = chbd.risk_profile_id,
       CMS_RISK_CATEGORY_MASTER crcm,
		  CMS_RISK_CATEGORY_ATTR_MASTER caam,
		  CMS_RISK_MASTER_TBL crm,
      cms_country_master ccm,
	  cms_clientcase cc
		  WHERE 
      crpTab.crn = #crn#
	  AND crpTab.crn            = cc.crn
      and cc.risk_associated =1
      AND crpTab.risk_category_id = crcm.risk_category_id
		  AND chbd.attribute_id = caam.attribute_id
      AND crpTab.risk_code = crm.risk_code
      AND chbd.country_master_id = ccm.country_master_id
      AND crm.has_cntry_brkdown = 1
      AND crm.risk_type = 2
      AND crptab.is_risk_mandatory = 1
      )
      table2 ON table1.Subject_Id = table2.CRP_Subject_Id	
      order by table1.Subject_Id,RISK_CATEGORY_ID,table2.is_risk_mandatory DESC,RISK_CODE,ATTRIBUTE_ID
      )
      Union All
     select * from (select table1.Subject_Id,table1.Subject_Name,table1.ENTITY_NAME,table1.COUNTRY_NAME,table1.INDUSTRY_CODE,table2.risk_profile_id,table2.RISK_CATEGORY_ID,table2.CATEGORY_NAME,
		table2.ATTRIBUTE_ID,table2.ATTRIBUTE_NAME,table2.ATTRIBUTE_TYPE,table2.ATTRIBUTE_VALUE,table2.risk_code,table2.risk_label,table2.visible_to_client,
    table2.display_on_profile,table2.risk_type, table2.is_risk_mandatory,table2.IS_RISK_APPLIED,
    table2.has_cntry_brkdown,table2.country_master_id,table2.country,table2.RISK_ATTR_VALUE FROM
	 (SELECT cs.subject_id Subject_Id,
		  cs.subject_name Subject_Name  ,
		  cs.INDUSTRY_CODE INDUSTRY_CODE,
		  cem.entity_name ENTITY_NAME   ,
		  ccm.country COUNTRY_NAME
		   FROM CMS_SUBJECT cs     ,
		  cms_entitytype_master cem,
		  cms_country_master ccm
		  WHERE cs.crn        = #crn#
		AND cs.entity_type_id = cem.entity_type_id
		AND cs.country_id     = ccm.country_master_id
		<isEqual prepend="AND" property="taskName" compareValue="Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer# 
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="2">
					INSTRB(cms_team_details.analysts,#performer#,1,1)>0
				</isEqual>
		))
		</isEqual>
		<isEqual prepend="AND" property="taskName" compareValue="BI Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer#
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="3">
					cms_team_details.manager_id=#performer#
				</isEqual>
		))
		</isEqual>
		<isEqual prepend="AND" property="taskName" compareValue="Vendor Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer#
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="4">
					cms_team_details.manager_id=#performer#
				</isEqual>
		))
		</isEqual>
		<isEqual property="taskName" compareValue="Review Task">
			<isNotNull property="teamId">
				<isNotEqual property="teamName" compareValue="Primary">			
					<isNotEmpty prepend="AND" property="teamId">
						 cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.TEAM_ID=#teamId#)
					</isNotEmpty>
				 </isNotEqual>
			 </isNotNull>
		</isEqual>
    ORDER BY cs.subject_id
		) table1 left outer join

    (SELECT crp.risk_profile_id risk_profile_id, crp.subject_id CRP_Subject_Id  ,
		  crp.risk_category_id RISK_CATEGORY_ID,
		  crcm.risk_category_name CATEGORY_NAME,
		  crp.attribute_id ATTRIBUTE_ID        ,
		  caam.ATTRIBUTE_NAME ATTRIBUTE_NAME   ,
		  caam.attribute_type ATTRIBUTE_TYPE   ,
		  (SELECT wm_concat(avm.value)
			 FROM CMS_RISK_ATTRIBUTE_VALUE_MAP avm
			WHERE avm.attribute_id = crp.attribute_id
		  ) AS ATTRIBUTE_VALUE ,
       crp.attribute_value RISK_ATTR_VALUE,
		  crp.risk_code        ,
		  crm.risk_label       ,
		  crp.visible_to_client,
      crm.display_on_profile,
      crm.risk_type,
		  crp.is_risk_mandatory,
      crp.IS_RISK_APPLIED,
       0 as has_cntry_brkdown,
      0 as country_master_id,
      NULL as country
		  FROM CMS_RISK_PROFILE crp
		LEFT JOIN CMS_SUBJECT cs
			 ON crp.subject_id = cs.subject_id ,
		  CMS_RISK_CATEGORY_MASTER crcm       ,
		  CMS_RISK_CATEGORY_ATTR_MASTER caam  ,
		  CMS_RISK_MASTER_TBL crm,
		  cms_clientcase cc
		  WHERE crp.crn          = #crn#
		  AND crp.crn            = cc.crn
      and cc.risk_associated =1
		AND crp.subject_id       = cs.subject_id
		AND crp.risk_category_id = crcm.risk_category_id
		AND crp.attribute_id     = caam.attribute_id
		AND crp.risk_code        = crm.risk_code
		AND crm.risk_type        = 2
		AND crp.is_risk_mandatory = 0
		<isEqual prepend="AND" property="taskName" compareValue="Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer# 
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="2">
					INSTRB(cms_team_details.analysts,#performer#,1,1)>0
				</isEqual>
		))
		</isEqual>
		<isEqual prepend="AND" property="taskName" compareValue="BI Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer#
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="3">
					cms_team_details.manager_id=#performer#
				</isEqual>
		))
		</isEqual>
		<isEqual prepend="AND" property="taskName" compareValue="Vendor Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer#
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="4">
					cms_team_details.manager_id=#performer#
				</isEqual>
		))
		</isEqual>
		<isEqual property="taskName" compareValue="Review Task">
			<isNotNull property="teamId">
				<isNotEqual property="teamName" compareValue="Primary">			
					<isNotEmpty prepend="AND" property="teamId">
						 cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.TEAM_ID=#teamId#)
					</isNotEmpty>
				 </isNotEqual>
			 </isNotNull>
		</isEqual>
     Union All
     SELECT crptab.risk_profile_id risk_profile_id,
      crpTab.SUBJECT_ID CRP_Subject_Id  ,
      crpTab.risk_category_id RISK_CATEGORY_ID,
		  crcm.risk_category_name CATEGORY_NAME,
       chbd.attribute_id ATTRIBUTE_ID,
		  caam.ATTRIBUTE_NAME ATTRIBUTE_NAME,
		  caam.attribute_type ATTRIBUTE_TYPE,
      (SELECT wm_concat(avm.value)
			FROM CMS_RISK_ATTRIBUTE_VALUE_MAP avm
		   WHERE avm.attribute_id = chbd.attribute_id 
			) AS ATTRIBUTE_VALUE,  
      chbd.attribute_value RISK_ATTR_VALUE,
		  crpTab.risk_code,
      crm.risk_label,
		crpTab.visible_to_client,	
      crm.display_on_profile,
      crm.risk_type,
      crpTab.is_risk_mandatory as is_risk_mandatory,
      1 as IS_RISK_APPLIED,
      crm.has_cntry_brkdown,
      chbd.country_master_id,
      ccm.country
		  from CMS_RISK_PROFILE crpTab left outer join 
      CMS_RISK_PROFILE_HAS_CNTRY_BD chbd on crptab.risk_profile_id = chbd.risk_profile_id,
       CMS_RISK_CATEGORY_MASTER crcm,
		  CMS_RISK_CATEGORY_ATTR_MASTER caam,
		  CMS_RISK_MASTER_TBL crm,
      cms_country_master ccm,
	  cms_clientcase cc
		  WHERE 
      crpTab.crn = #crn#
	  AND crpTab.crn            = cc.crn
      and cc.risk_associated =1
      AND crpTab.risk_category_id = crcm.risk_category_id
		  AND chbd.attribute_id = caam.attribute_id
      AND crpTab.risk_code = crm.risk_code
      AND chbd.country_master_id = ccm.country_master_id
      AND crm.has_cntry_brkdown = 1
      AND crm.risk_type = 2
      AND crptab.is_risk_mandatory = 0)
      table2 ON table1.Subject_Id = table2.CRP_Subject_Id	
      order by table1.Subject_Id,RISK_CATEGORY_ID,table2.is_risk_mandatory DESC,risk_profile_id,RISK_CODE,ATTRIBUTE_ID
      )
      UNION ALL
      select * from (select table1.Subject_Id,table1.Subject_Name,table1.ENTITY_NAME,table1.COUNTRY_NAME,table1.INDUSTRY_CODE,table2.risk_profile_id,table2.RISK_CATEGORY_ID,table2.CATEGORY_NAME,
		table2.ATTRIBUTE_ID,table2.ATTRIBUTE_NAME,table2.ATTRIBUTE_TYPE,table2.ATTRIBUTE_VALUE,table2.risk_code,table2.risk_label,table2.visible_to_client,
    table2.display_on_profile,table2.risk_type, table2.is_risk_mandatory,table2.IS_RISK_APPLIED,
    table2.has_cntry_brkdown,table2.country_master_id,table2.country,table2.RISK_ATTR_VALUE FROM
	 (SELECT cs.subject_id Subject_Id,
		  cs.subject_name Subject_Name  ,
		  cs.INDUSTRY_CODE INDUSTRY_CODE,
		  cem.entity_name ENTITY_NAME   ,
		  ccm.country COUNTRY_NAME
		   FROM CMS_SUBJECT cs     ,
		  cms_entitytype_master cem,
		  cms_country_master ccm
		  WHERE cs.crn        = #crn#
		AND cs.entity_type_id = cem.entity_type_id
		AND cs.country_id     = ccm.country_master_id
		<isEqual prepend="AND" property="taskName" compareValue="Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer# 
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="2">
					INSTRB(cms_team_details.analysts,#performer#,1,1)>0
				</isEqual>
		))
		</isEqual>
		<isEqual prepend="AND" property="taskName" compareValue="BI Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer#
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="3">
					cms_team_details.manager_id=#performer#
				</isEqual>
		))
		</isEqual>
		<isEqual prepend="AND" property="taskName" compareValue="Vendor Research Task">
			cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.performer = #performer#
			and cstrm.team_id=(select
				cms_team_details.team_id from cms_team_details where
				team_type_id=#teamTypeId# and
				cms_team_details.crn=#crn# 
				<isEqual prepend="AND" property="teamTypeId" compareValue="4">
					cms_team_details.manager_id=#performer#
				</isEqual>
		))
		</isEqual>
		<isEqual property="taskName" compareValue="Review Task">
			<isNotNull property="teamId">
				<isNotEqual property="teamName" compareValue="Primary">			
					<isNotEmpty prepend="AND" property="teamId">
						 cs.subject_id in(select distinct cstrm.subject_id from CMS_SUB_TEAM_RE_MAP cstrm where cstrm.crn = #crn# and cstrm.TEAM_ID=#teamId#)
					</isNotEmpty>
				 </isNotEqual>
			 </isNotNull>
		</isEqual>
    ORDER BY cs.subject_id
		) table1 left outer join
  (select * from (SELECT 100000 as risk_profile_id, cs.subject_id CRP_Subject_Id    ,
  crmt.risk_category_id RISK_CATEGORY_ID,
  crcm.risk_category_name CATEGORY_NAME ,
  att_map.attribute_id                  ,
  caam.ATTRIBUTE_NAME                   ,
  caam.ATTRIBUTE_TYPE                   ,
  (SELECT wm_concat(avm.value)
     FROM CMS_RISK_ATTRIBUTE_VALUE_MAP avm
    WHERE avm.attribute_id = att_map.attribute_id
  ) AS ATTRIBUTE_VALUE             ,
  dvm.DEFAULT_VALUE RISK_ATTR_VALUE,
  crmt.risk_code                   ,
  crmt.risk_label                  ,
  mapt.visible_to_client	       ,
  crmt.display_on_profile          ,
  crmt.risk_type                   ,
  0 AS IS_RISK_MANDATORY           ,
  0 AS IS_RISK_APPLIED             ,
  crmt.has_cntry_brkdown           ,
  0 COUNTRY_MASTER_ID              ,
  NULL AS COUNTRY					,
  concat(cs.subject_id,crmt.risk_code) as duplicate_risk_check_flag
   FROM cms_clientcase cc           ,
  CMS_SUBJECT cs                    ,
  cms_risk_master_tbl crmt          ,
  cms_risk_mapping mapt             ,
  cms_risk_mapping_clients mapClient,
  cms_risk_mapping_reports mapReport,
  cms_risk_mapping_subreports crms  ,
  CMS_RISK_MAPPING_COUNTRY crmc     ,
  CMS_RISK_CATEGORY_MASTER crcm     ,
  CMS_RISK_ATTR_DEFAULT_VAL_MAP dvm ,
  cms_risk_category_attr_map att_map,
  CMS_RISK_CATEGORY_ATTR_MASTER caam
  WHERE cc.crn        = #crn#
AND cc.crn            = cs.crn
AND cc.risk_associated = 1
AND cc.crn            = cs.crn
AND crmt.risk_code    = mapt.risk_code
AND cs.entity_type_id = mapt.subject_type
AND mapt.mapping_id   = mapClient.mapping_id
AND mapt.mapping_id   = mapReport.mapping_id
AND mapt.mapping_id   = crms.mapping_id
AND mapt.mapping_id        = crmc.mapping_id
AND (mapClient.client_code = cc.CLIENT_CODE
OR mapClient.client_code   = '-1')
AND (mapReport.report_type = cc.REPORT_TYPE_ID
OR mapReport.report_type   = -1)
AND ((crms.sub_report_type  = cc.SUB_REPORT_TYPE_ID
OR crms.sub_report_type    = -1) OR (crms.sub_report_type is NULL))
AND (crmc.SUBJECT_COUNTRY  = cs.country_id
OR crmc.SUBJECT_COUNTRY    = -1)
AND 0                      <![CDATA[ < ]]>
  (SELECT COUNT (crmr.RESEARCH_ELEMENT)
     FROM CMS_RISK_MAPPING_RE crmr
    WHERE crmr.mapping_id    = mapt.mapping_id
  AND (crmr.research_element IN
    (SELECT regexp_substr(cs.RE_IDS,'[^,]+', 1, level)
       FROM dual CONNECT BY regexp_substr(cs.RE_IDS, '[^,]+', 1, level) IS NOT NULL
    ) OR crmr.research_element=-1)
  )
AND crmt.risk_category_id = crcm.risk_category_id
AND crmt.risk_type = 2
AND crmt.risk_is_Active = 1
AND mapt.mapping_status = 1
AND mapt.risk_group       = 2
AND crmt.risk_category_id = att_map.risk_category_id
AND att_map.attribute_id  = caam.attribute_id
AND att_map.attribute_id  = dvm.attribute_id
)sub_table2 where sub_table2.duplicate_risk_check_flag not in(SELECT DISTINCT concat(rp.SUBJECT_ID,rp.RISK_CODE) as duplicate_risk_check_flag
     FROM cms_risk_profile rp
    WHERE rp.crn           = #crn#
  AND rp.risk_type         = 2)) table2 ON table1.Subject_Id = table2.CRP_Subject_Id	
    order by table1.Subject_Id,RISK_CATEGORY_ID,table2.is_risk_mandatory DESC,RISK_CODE,ATTRIBUTE_ID) 
 
      
	</select>
	
	<select id="getCaseLevelRiskForUser" resultMap="getCategoryDetails" parameterClass= "java.util.Map">
		  
SELECT * FROM (SELECT crp.risk_profile_id RISK_PROFILE_ID,
      crp.risk_category_id RISK_CATEGORY_ID,
		  crcm.risk_category_name CATEGORY_NAME,
		  crp.risk_code,
		  crm.risk_label,
      crp.visible_to_client,
      crm.display_on_profile,
      crm.risk_type,
		  crp.is_risk_mandatory,
      crp.IS_RISK_APPLIED,
      0 as has_cntry_brkdown,
      0 as country_master_id,
	  0    AS cntry_bd_id ,
      NULL as country,
		  crp.attribute_id ATTRIBUTE_ID,
		  caam.ATTRIBUTE_NAME ATTRIBUTE_NAME,
		  caam.attribute_type ATTRIBUTE_TYPE,
		  (SELECT wm_concat(avm.value)
			FROM CMS_RISK_ATTRIBUTE_VALUE_MAP avm
		   WHERE avm.attribute_id = crp.attribute_id 
			) AS ATTRIBUTE_VALUE,  
		  crp.attribute_value RISK_ATTR_VALUE
		  from CMS_RISK_PROFILE crp,
		  CMS_RISK_CATEGORY_MASTER crcm,
		  CMS_RISK_CATEGORY_ATTR_MASTER caam,
		  CMS_RISK_MASTER_TBL crm,
		  cms_clientcase cc
		  WHERE crp.crn =#crn#
		  AND crp.crn            = cc.crn
		 and cc.risk_associated =1
		  AND crp.risk_category_id = crcm.risk_category_id
		  AND crp.attribute_id = caam.attribute_id
		  AND crp.risk_code = crm.risk_code
		  AND crm.risk_type = 1
      AND crp.is_risk_mandatory=1
        
     union all
        
         SELECT crptab.risk_profile_id RISK_PROFILE_ID,
      crptab.risk_category_id RISK_CATEGORY_ID,
		  crcm.risk_category_name CATEGORY_NAME,
		  crptab.risk_code,
      crm.risk_label,
      crptab.visible_to_client,
      crm.display_on_profile,
      crm.risk_type,
      crptab.is_risk_mandatory as is_risk_mandatory,
      1 as IS_RISK_APPLIED,
      crm.has_cntry_brkdown,
      chbd.country_master_id,
	  chbd.cntry_bd_id AS cntry_bd_id ,
      ccm.country,
		  chbd.attribute_id ATTRIBUTE_ID,
		  caam.ATTRIBUTE_NAME ATTRIBUTE_NAME,
		  caam.attribute_type ATTRIBUTE_TYPE,
		  (SELECT wm_concat(avm.value)
			FROM CMS_RISK_ATTRIBUTE_VALUE_MAP avm
		   WHERE avm.attribute_id = chbd.attribute_id 
			) AS ATTRIBUTE_VALUE,  
      chbd.attribute_value RISK_ATTR_VALUE
		  from 
      CMS_RISK_PROFILE crpTab left outer join
      CMS_RISK_PROFILE_HAS_CNTRY_BD chbd on crptab.risk_profile_id = chbd.risk_profile_id,
       CMS_RISK_CATEGORY_MASTER crcm,
		  CMS_RISK_CATEGORY_ATTR_MASTER caam,
		  CMS_RISK_MASTER_TBL crm,
      cms_country_master ccm,
	  cms_clientcase cc
		  WHERE 
      crptab.crn =#crn#
	  AND crptab.crn            = cc.crn
      and cc.risk_associated =1
      AND crptab.risk_category_id = crcm.risk_category_id
		  AND chbd.attribute_id = caam.attribute_id
      AND crptab.risk_code = crm.risk_code
      AND chbd.country_master_id = ccm.country_master_id
      AND crm.has_cntry_brkdown = 1
      AND crm.risk_type = 1
      AND crptab.is_risk_mandatory=1
      
		  order by RISK_CATEGORY_ID,IS_RISK_MANDATORY DESC,RISK_CODE,ATTRIBUTE_ID,cntry_bd_id)
      
      union all 
      
      SELECT * FROM (SELECT crp.risk_profile_id RISK_PROFILE_ID,
      crp.risk_category_id RISK_CATEGORY_ID,
		  crcm.risk_category_name CATEGORY_NAME,
		  crp.risk_code,
		  crm.risk_label,
      crp.visible_to_client,
      crm.display_on_profile,
      crm.risk_type,
		  crp.is_risk_mandatory,
      crp.IS_RISK_APPLIED,
      0 as has_cntry_brkdown,
      0 as country_master_id,
	  0    AS cntry_bd_id ,
      NULL as country,
		  crp.attribute_id ATTRIBUTE_ID,
		  caam.ATTRIBUTE_NAME ATTRIBUTE_NAME,
		  caam.attribute_type ATTRIBUTE_TYPE,
		  (SELECT wm_concat(avm.value)
			FROM CMS_RISK_ATTRIBUTE_VALUE_MAP avm
		   WHERE avm.attribute_id = crp.attribute_id 
			) AS ATTRIBUTE_VALUE,  
		  crp.attribute_value RISK_ATTR_VALUE
		  from CMS_RISK_PROFILE crp,
		  CMS_RISK_CATEGORY_MASTER crcm,
		  CMS_RISK_CATEGORY_ATTR_MASTER caam,
		  CMS_RISK_MASTER_TBL crm,
		  cms_clientcase cc
		  WHERE crp.crn = #crn#
		  AND crp.crn            = cc.crn
			and cc.risk_associated =1
		  AND crp.risk_category_id = crcm.risk_category_id
		  AND crp.attribute_id = caam.attribute_id
		  AND crp.risk_code = crm.risk_code
		  AND crm.risk_type = 1
      AND crp.is_risk_mandatory=0
		       
		  Union All     
    SELECT crptab.risk_profile_id RISK_PROFILE_ID,
      crptab.risk_category_id RISK_CATEGORY_ID,
		  crcm.risk_category_name CATEGORY_NAME,
		  crptab.risk_code,
      crm.risk_label,
      crptab.visible_to_client,
      crm.display_on_profile,
      crm.risk_type,
      crptab.is_risk_mandatory as is_risk_mandatory,
      1 as IS_RISK_APPLIED,
      crm.has_cntry_brkdown,
      chbd.country_master_id,
	  chbd.cntry_bd_id AS cntry_bd_id ,
      ccm.country,
		  chbd.attribute_id ATTRIBUTE_ID,
		  caam.ATTRIBUTE_NAME ATTRIBUTE_NAME,
		  caam.attribute_type ATTRIBUTE_TYPE,
		  (SELECT wm_concat(avm.value)
			FROM CMS_RISK_ATTRIBUTE_VALUE_MAP avm
		   WHERE avm.attribute_id = chbd.attribute_id 
			) AS ATTRIBUTE_VALUE,  
      chbd.attribute_value RISK_ATTR_VALUE
		  from 
      CMS_RISK_PROFILE crpTab left outer join
      CMS_RISK_PROFILE_HAS_CNTRY_BD chbd on crptab.risk_profile_id = chbd.risk_profile_id,
       CMS_RISK_CATEGORY_MASTER crcm,
		  CMS_RISK_CATEGORY_ATTR_MASTER caam,
		  CMS_RISK_MASTER_TBL crm,
      cms_country_master ccm,
	  cms_clientcase cc
		  WHERE 
      crptab.crn = #crn#
	  AND crptab.crn            = cc.crn
      and cc.risk_associated =1
      AND crptab.risk_category_id = crcm.risk_category_id
		  AND chbd.attribute_id = caam.attribute_id
      AND crptab.risk_code = crm.risk_code
      AND chbd.country_master_id = ccm.country_master_id
      AND crm.has_cntry_brkdown = 1
      AND crm.risk_type = 1
      AND crptab.is_risk_mandatory=0
      order by RISK_CATEGORY_ID,IS_RISK_MANDATORY DESC,RISK_PROFILE_ID,RISK_CODE,ATTRIBUTE_ID,cntry_bd_id)
		       
      union all
      
      
 SELECT * FROM (SELECT 100000 as RISK_PROFILE_ID,  att_map.risk_category_id RISK_CATEGORY_ID, crcm.risk_category_name CATEGORY_NAME,
cms_risk_mst.risk_code, 
cms_risk_mst.risk_label,
map.visible_to_client,
cms_risk_mst.display_on_profile, 
cms_risk_mst.risk_type,
0 as is_risk_mandatory,
0 as IS_RISK_APPLIED,
cms_risk_mst.has_cntry_brkdown,
0 as country_master_id,
0 AS cntry_bd_id ,
null as country,
att_map.attribute_id,
caam.ATTRIBUTE_NAME ATTRIBUTE_NAME,
caam.attribute_type ATTRIBUTE_TYPE,
(SELECT wm_concat(avm.value)
			FROM CMS_RISK_ATTRIBUTE_VALUE_MAP avm
		   WHERE avm.attribute_id = att_map.attribute_id 
			) AS ATTRIBUTE_VALUE,  
   dvm.DEFAULT_VALUE RISK_ATTR_VALUE
   FROM
   cms_clientcase cc,
   cms_risk_master_tbl cms_risk_mst,cms_risk_category_attr_map att_map,
   cms_risk_mapping map, cms_risk_category_master crcm, CMS_RISK_CATEGORY_ATTR_MASTER caam,
   CMS_RISK_ATTR_DEFAULT_VAL_MAP dvm
   WHERE 
    cc.crn = #crn#
	and cc.risk_associated =1
    AND
   cms_risk_mst.risk_category_id = att_map.risk_category_id 
   AND cms_risk_mst.risk_category_id = crcm.risk_category_id
   AND att_map.attribute_id = caam.attribute_id
  AND att_map.attribute_id = dvm.attribute_id
   AND map.risk_code = cms_risk_mst.risk_code
   AND cms_risk_mst.risk_type = 1 
   AND cms_risk_mst.risk_is_active = 1
   AND map.mapping_status = 1
   AND map.risk_group=2
   AND map.mapping_id IN(SELECT crm.mapping_id FROM cms_risk_mapping crm 
   INNER JOIN (SELECT mapping_id,client_code FROM cms_risk_mapping_clients) cmc ON crm.mapping_id = cmc.mapping_id
   INNER JOIN (SELECT mapping_id,report_type FROM cms_risk_mapping_reports) cmr ON crm.mapping_id = cmr.mapping_id
 
   INNER JOIN (SELECT mapping_id,sub_report_type FROM cms_risk_mapping_subreports) cmsr ON crm.mapping_id = cmsr.mapping_id
 
   
   WHERE (cmc.client_code = cc.CLIENT_CODE OR cmc.client_code = '-1')
   AND 
  ( cmr.report_type = cc.REPORT_TYPE_ID OR cmr.report_type = -1)

   AND ((cmsr.sub_report_type = cc.SUB_REPORT_TYPE_ID OR cmsr.sub_report_type = -1) OR (cmsr.sub_report_type is NULL)))
   AND map.risk_code not in(select distinct rp.risk_code from cms_risk_profile rp where rp.crn = #crn# 
   and rp.risk_type=1 )
 order by RISK_CATEGORY_ID,IS_RISK_MANDATORY DESC,RISK_CODE,ATTRIBUTE_ID,cntry_bd_id)
 
   
		 
	</select>
	
	<delete id="updateOptionalRisk" parameterClass="com.worldcheck.atlas.vo.masters.RiskProfileVO"> 
		DELETE FROM CMS_RISK_PROFILE 
		WHERE CMS_RISK_PROFILE.RISK_CODE = #riskCode# 
		AND CMS_RISK_PROFILE.CRN = #CRN#
		AND CMS_RISK_PROFILE.RISK_CATEGORY_ID = #riskCategoryId#
		<isGreaterThan prepend="AND" property = "subjectId" compareValue="0">
			CMS_RISK_PROFILE.SUBJECT_ID = #subjectId#
		</isGreaterThan>
	</delete>

	<insert id="insertOptionalRiskWithSubject" parameterClass="com.worldcheck.atlas.vo.masters.RiskProfileVO"> 	
	
	<selectKey resultClass="int" type="pre" keyProperty="riskProfileId">
			SELECT CMS_RISK_PROFILE_SEQ.nextval AS VALUE FROM DUAL
	</selectKey>
	
	    INSERT INTO 
			CMS_RISK_PROFILE
			(
				CMS_RISK_PROFILE.RISK_PROFILE_ID,
				CMS_RISK_PROFILE.RISK_CATEGORY_ID,
				CMS_RISK_PROFILE.RISK_CODE,
				CMS_RISK_PROFILE.CRN,
				CMS_RISK_PROFILE.ATTRIBUTE_ID,
				CMS_RISK_PROFILE.ATTRIBUTE_VALUE,
				CMS_RISK_PROFILE.SUBJECT_ID,
				CMS_RISK_PROFILE.RISK_TYPE,
				CMS_RISK_PROFILE.IS_RISK_APPLIED,
				CMS_RISK_PROFILE.IS_RISK_MANDATORY,
				CMS_RISK_PROFILE.VISIBLE_TO_CLIENT,
				CMS_RISK_PROFILE.UPDATEDBY,
				CMS_RISK_PROFILE.UPDATEDON
			
			)
	    VALUES
			(	
				#riskProfileId#,
				#riskCategoryId#,
				#riskCode#,
				#CRN#,
				#attributeId#,
				#newattrValue#,
				#subjectId#,
				#riskType#,
				1,
				0,
				#visibleToClient#,
				#updatedBy#,
				sysdate
			)
    </insert>
	<insert id="insertOptionalRiskWithoutSubject" parameterClass="com.worldcheck.atlas.vo.masters.RiskProfileVO"> 	
	
	<selectKey resultClass="int" type="pre" keyProperty="riskProfileId">
			SELECT CMS_RISK_PROFILE_SEQ.nextval AS VALUE FROM DUAL
	</selectKey>
	
	    INSERT INTO 
			CMS_RISK_PROFILE
			(
				CMS_RISK_PROFILE.RISK_PROFILE_ID,
				CMS_RISK_PROFILE.RISK_CATEGORY_ID,
				CMS_RISK_PROFILE.RISK_CODE,
				CMS_RISK_PROFILE.CRN,
				CMS_RISK_PROFILE.ATTRIBUTE_ID,
				CMS_RISK_PROFILE.ATTRIBUTE_VALUE,
				CMS_RISK_PROFILE.RISK_TYPE,
				CMS_RISK_PROFILE.IS_RISK_APPLIED,
				CMS_RISK_PROFILE.IS_RISK_MANDATORY,
				CMS_RISK_PROFILE.VISIBLE_TO_CLIENT,
				CMS_RISK_PROFILE.UPDATEDBY,
				CMS_RISK_PROFILE.UPDATEDON
			
			)
	    VALUES
			(	
				#riskProfileId#,
				#riskCategoryId#,
				#riskCode#,
				#CRN#,
				#attributeId#,
				#newattrValue#,
				#riskType#,
				1,
				0,
				#visibleToClient#,
				#updatedBy#,
				sysdate
			)
    </insert>

	<insert id="insertHBDOptionalRiskWithSubject" parameterClass="com.worldcheck.atlas.vo.masters.RiskProfileVO"> 	

	
	    INSERT INTO 
			CMS_RISK_PROFILE
			(
				CMS_RISK_PROFILE.RISK_PROFILE_ID,
				CMS_RISK_PROFILE.RISK_CATEGORY_ID,
				CMS_RISK_PROFILE.RISK_CODE,
				CMS_RISK_PROFILE.CRN,
				CMS_RISK_PROFILE.SUBJECT_ID,
				CMS_RISK_PROFILE.RISK_TYPE,
				CMS_RISK_PROFILE.IS_RISK_APPLIED,
				CMS_RISK_PROFILE.IS_RISK_MANDATORY,
				CMS_RISK_PROFILE.VISIBLE_TO_CLIENT,
				CMS_RISK_PROFILE.UPDATEDBY,
				CMS_RISK_PROFILE.UPDATEDON
			
			)
	    VALUES
			(	
				#riskProfileId#,
				#riskCategoryId#,
				#riskCode#,
				#CRN#,
				#subjectId#,
				#riskType#,
				1,
				0,
				#visibleToClient#,
				#updatedBy#,
				sysdate
			)
    </insert>
	<insert id="insertHBDOptionalRiskWithoutSubject" parameterClass="com.worldcheck.atlas.vo.masters.RiskProfileVO"> 	
	
	
	    INSERT INTO 
			CMS_RISK_PROFILE
			(
				CMS_RISK_PROFILE.RISK_PROFILE_ID,
				CMS_RISK_PROFILE.RISK_CATEGORY_ID,
				CMS_RISK_PROFILE.RISK_CODE,
				CMS_RISK_PROFILE.CRN,
				CMS_RISK_PROFILE.RISK_TYPE,
				CMS_RISK_PROFILE.IS_RISK_APPLIED,
				CMS_RISK_PROFILE.IS_RISK_MANDATORY,
				CMS_RISK_PROFILE.VISIBLE_TO_CLIENT,
				CMS_RISK_PROFILE.UPDATEDBY,
				CMS_RISK_PROFILE.UPDATEDON
			
			)
	    VALUES
			(	
				#riskProfileId#,
				#riskCategoryId#,
				#riskCode#,
				#CRN#,
				#riskType#,
				1,
				0,
				#visibleToClient#,
				#updatedBy#,
				sysdate
			)
    </insert>

	
	<select id="getNextProfileId" resultClass="java.lang.Long">
		SELECT CMS_RISK_PROFILE_SEQ.nextval AS VALUE FROM DUAL
	</select>

	<resultMap id="hbdCountryDetails" class="com.worldcheck.atlas.vo.masters.CountryHBDVO">
		<result property="countryMasterId" column="country_id" />
		<result property="countryName" column="country" />
	</resultMap>

	<select id="getCountriesForRiskCode" resultMap="hbdCountryDetails" parameterClass= "java.util.Map">
		select distinct cs.country_id, ccm.country 
		from cms_subject cs left join  cms_country_master ccm on cs.country_id = ccm.COUNTRY_MASTER_ID
		where cs.crn = #crn#
		<isGreaterThan prepend="AND" property = "subID" compareValue="0">
			cs.subject_id=to_number(#subID#)
		</isGreaterThan>
	</select>

	<insert id="insertHBDOptionalRiskCountriesWithoutSubject" parameterClass="com.worldcheck.atlas.vo.masters.CountryHBDVO"> 	

		<selectKey resultClass="java.lang.Long" type="pre" keyProperty="countryHBDID">
			SELECT CMS_RISK_PROFILE_HAS_CNTRYSEQ.nextval AS VALUE FROM DUAL
		</selectKey>
	    INSERT INTO 
			CMS_RISK_PROFILE_HAS_CNTRY_BD
			(
				CMS_RISK_PROFILE_HAS_CNTRY_BD.CNTRY_BD_ID,
				CMS_RISK_PROFILE_HAS_CNTRY_BD.RISK_PROFILE_ID,
				CMS_RISK_PROFILE_HAS_CNTRY_BD.ATTRIBUTE_ID,
				CMS_RISK_PROFILE_HAS_CNTRY_BD.ATTRIBUTE_VALUE,
				CMS_RISK_PROFILE_HAS_CNTRY_BD.COUNTRY_MASTER_ID,
				CMS_RISK_PROFILE_HAS_CNTRY_BD.UPDATEDBY,
				CMS_RISK_PROFILE_HAS_CNTRY_BD.UPDATEDON
			
			)
	    VALUES
			(	
				#countryHBDID#,
				#profileId#,
				#attributeId#,
				#attributeValue#,
				#countryMasterId#,
				#updatedBy#,
				sysdate
			)
    </insert>
	<insert id="insertHBDOptionalRiskCountriesWithSubject" parameterClass="com.worldcheck.atlas.vo.masters.CountryHBDVO"> 	
	
	
	    <selectKey resultClass="java.lang.Long" type="pre" keyProperty="countryHBDID">
			SELECT CMS_RISK_PROFILE_HAS_CNTRYSEQ.nextval AS VALUE FROM DUAL
		</selectKey>
	    INSERT INTO 
			CMS_RISK_PROFILE_HAS_CNTRY_BD
			(
				CMS_RISK_PROFILE_HAS_CNTRY_BD.CNTRY_BD_ID,
				CMS_RISK_PROFILE_HAS_CNTRY_BD.RISK_PROFILE_ID,
				CMS_RISK_PROFILE_HAS_CNTRY_BD.ATTRIBUTE_ID,
				CMS_RISK_PROFILE_HAS_CNTRY_BD.ATTRIBUTE_VALUE,
				CMS_RISK_PROFILE_HAS_CNTRY_BD.SUBJECT_ID,
				CMS_RISK_PROFILE_HAS_CNTRY_BD.COUNTRY_MASTER_ID,
				CMS_RISK_PROFILE_HAS_CNTRY_BD.UPDATEDBY,
				CMS_RISK_PROFILE_HAS_CNTRY_BD.UPDATEDON
			
			)
	    VALUES
			(	
				#countryHBDID#,
				#profileId#,
				#attributeId#,
				#attributeValue#,
				#subjectId#,
				#countryMasterId#,
				#updatedBy#,
				sysdate
			)
    </insert>

	<resultMap id="categoryInfo" class="com.worldcheck.atlas.vo.masters.CategoryDetailsVO">
		<result property="riskCategoryId" column="risk_category_id" />
		<result property="attributeId" column="attribute_id" />
		<result property="attributeName" column="attribute_name" />
		<result property="attributeDefaultValue" column="default_value" />
		<result property="attributeValue" column="ATTRIBUTE_VALUE" />
	</resultMap>

	<select id="getCategoryDetails" resultMap="categoryInfo">
		select crcm.risk_category_id, caam.attribute_id , crcam.attribute_name, cdvm.default_value,
		(SELECT wm_concat(avm.value)
			FROM CMS_RISK_ATTRIBUTE_VALUE_MAP avm
		   WHERE avm.attribute_id = crcam.attribute_id 
			) AS ATTRIBUTE_VALUE
		from cms_risk_category_master crcm left join cms_risk_category_attr_map caam
		on crcm.risk_category_id = caam.risk_category_id
		left join cms_risk_category_attr_master crcam
		on caam.attribute_id = crcam.attribute_id
		left join cms_risk_attr_default_val_map cdvm
		on caam.attribute_id = cdvm.attribute_id
		
		order by crcm.risk_category_id, caam.attribute_id
	</select>

	<select id = "fetchProfileIdForRiskCode" resultClass = "java.lang.Long" parameterClass="com.worldcheck.atlas.vo.masters.RiskProfileVO">
		SELECT RISK_PROFILE_ID FROM CMS_RISK_PROFILE 
		WHERE CMS_RISK_PROFILE.RISK_CODE = #riskCode# 
		AND CMS_RISK_PROFILE.CRN = #CRN#
		AND CMS_RISK_PROFILE.RISK_CATEGORY_ID = #riskCategoryId#
		<isGreaterThan prepend="AND" property = "subjectId" compareValue="0">
			CMS_RISK_PROFILE.SUBJECT_ID = #subjectId#
		</isGreaterThan>
	</select>

	<delete id="deleteHBDMapping" parameterClass = "java.util.Map">
		delete from CMS_RISK_PROFILE_HAS_CNTRY_BD
		where RISK_PROFILE_ID = #riskProfileId#
	</delete>
	<delete id="deleteHBDCountry" parameterClass = "java.util.Map">
		delete from CMS_RISK_PROFILE_HAS_CNTRY_BD
		where RISK_PROFILE_ID = #riskProfileId#
		AND COUNTRY_MASTER_ID = #countryId#
		
	</delete>
	

	<insert id="insertRiskHistoryForDelete" parameterClass="com.worldcheck.atlas.vo.audit.RiskHistory"> 	
	
	<selectKey resultClass="int" type="pre" keyProperty="riskHistoryId">
			SELECT CMS_RISK_PROFILE_HISTORY_SEQ.nextval AS VALUE FROM DUAL
	</selectKey>
	
	INSERT INTO 
			CMS_RISK_PROFILE_HISTORY
			(
				CMS_RISK_PROFILE_HISTORY.HISTORY_ID,
				CMS_RISK_PROFILE_HISTORY.CRN,
				CMS_RISK_PROFILE_HISTORY.RISK_CATEGORY_ID,
				CMS_RISK_PROFILE_HISTORY.RISK_CODE,
				CMS_RISK_PROFILE_HISTORY.COUNTRY_MASTER_ID,
				CMS_RISK_PROFILE_HISTORY.ACTION,
				CMS_RISK_PROFILE_HISTORY.TASK,
				CMS_RISK_PROFILE_HISTORY.SUBJECT_ID,
				CMS_RISK_PROFILE_HISTORY.OLD_VALUE,
				CMS_RISK_PROFILE_HISTORY.NEW_VALUE,
				CMS_RISK_PROFILE_HISTORY.UPDATEDBY,
				CMS_RISK_PROFILE_HISTORY.UPDATEDON


			)
	VALUES
			(	
				#riskHistoryId#,
				#CRN#,
				#riskCategoryId#,
				#riskCode#,
				#countryMasterId#,
				#action#,
				#task#,
				#subjectId#,
				#oldInfo#,
				#newInfo#,
				#updatedBy#,
				sysdate				
			)
 </insert>
	

<!-- end by Anurag for risk profile CR-->

<!-- Added by U6027780 for CR BI-293 Start  -->
<select id="getSubReportInitialsByID" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		select sub_crn_initial from cms_subreport_type_master
		where
    	subreport_type_master_id = #subReportTypeID#
	</select>
	
<!-- Added by U6027780 for CR BI-293 End -->

</sqlMap>