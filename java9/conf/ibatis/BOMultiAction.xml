<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
  "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="BOMaster">

	<resultMap id="branchOfficeMasterVO"
		class="com.worldcheck.atlas.vo.masters.BranchOfficeMasterVO">
			<result property="branchOfficeId" column="branchOfficeId" />
			<result property="branchOffice" column="branchOffice" />
			<result property="branchOfficeUsername" column="branchOfficeUsername" />
	</resultMap>
	
	<resultMap id="branchOfficeMasterExcelVO"
		class="com.worldcheck.atlas.vo.masters.BranchOfficeMasterVO">
			<result property="branchOfficeId" column="branchOfficeId" />
			<result property="branchOffice" column="branchOffice" />
			<result property="branchOfficeUsername" column="branchOfficeUsername" />
			<result property="branchOfficeStatus" column="branchOfficeStatus" />
	</resultMap>


	<insert id="addNewBO"
		parameterClass="com.worldcheck.atlas.vo.masters.BranchOfficeMasterVO">

		<selectKey resultClass="int" type="pre" keyProperty="branchOfficeId">

			SELECT
			CMS_OFFICE_MASTER_SEQ.nextval AS VALUE FROM DUAL

		</selectKey>
		insert into CMS_OFFICE_MASTER
		(
		OFFICE_MASTER_ID,
		OFFICE,
		OFFICE_CODE,
		STATUS,
		UPDATED_BY,
		UPDATED_ON
		)
		values
		( #branchOfficeId#,
		#branchOffice#,
		'code'||#branchOfficeId#,
		#statusval#,
		#updatedBy#,
		sysdate
		)

	</insert>

	

	<select id="searchBO"
		parameterClass="com.worldcheck.atlas.vo.masters.BranchOfficeMasterVO"
		resultMap="branchOfficeMasterVO">
		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (
		Select
		a.OFFICE_MASTER_ID branchOfficeId,
		a.OFFICE branchOffice,
		b.LOGIN_ID branchOfficeUsername
		from
		(
		select

		OM.OFFICE_MASTER_ID,
		OM.OFFICE,OFFICE_HEAD_ID
		FROM
		CMS_OFFICE_MASTER OM
		where
		OM.STATUS =
		#branchOfficeStatus#
		<isNotNull prepend="AND" property="branchOffice">
			<isNotEmpty property="branchOffice">
				UPPER(OM.OFFICE) LIKE '%'||
				UPPER(#branchOffice#) || '%'
			</isNotEmpty>
		</isNotNull>
		) a left outer join
		(
		select
		UM.OFFICE_ID,
		UM.LOGIN_ID,
		UM.USER_MASTER_ID
		from
		CMS_USER_MASTER
		UM
		WHERE UM.IS_OFFICE_HEAD = 1
		) b
		on a.OFFICE_MASTER_ID=b.OFFICE_ID
		AND
		(a.OFFICE_HEAD_ID IS NULL OR a.OFFICE_HEAD_ID = to_char(b.USER_MASTER_ID))
		ORDER BY
		upper($sortColumnName$) $sortType$ ) a WHERE ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#
	</select>


	<select id="searchBO_count"
		parameterClass="com.worldcheck.atlas.vo.masters.BranchOfficeMasterVO"
		resultClass="int">
		SELECT count(a.OFFICE_MASTER_ID)
		from
		(
		select

		OM.OFFICE_MASTER_ID,
		OM.OFFICE,OFFICE_HEAD_ID
		FROM
		CMS_OFFICE_MASTER OM
		where
		OM.STATUS =
		#branchOfficeStatus#
		<isNotNull prepend="AND" property="branchOffice">
			<isNotEmpty property="branchOffice">
				UPPER(OM.OFFICE) LIKE '%'||
				UPPER(#branchOffice#) || '%'
			</isNotEmpty>
		</isNotNull>
		) a left outer join
		(
		select
		UM.OFFICE_ID,
		UM.LOGIN_ID,
		UM.USER_MASTER_ID
		from
		CMS_USER_MASTER
		UM
		WHERE UM.IS_OFFICE_HEAD = 1
		) b
		on a.OFFICE_MASTER_ID=b.OFFICE_ID
		AND
		(a.OFFICE_HEAD_ID IS NULL OR a.OFFICE_HEAD_ID = to_char(b.USER_MASTER_ID))
		ORDER BY
		UPPER(a.OFFICE)
	</select>

	<!--Added By Juheen.For CR-2(query to ExportToExcel in Branch Office Master.) -->
	<select id="exportTo_XL" parameterClass="java.util.Map" resultMap="branchOfficeMasterExcelVO">
		
		Select
		a.OFFICE_MASTER_ID branchOfficeId,
		a.OFFICE branchOffice,
		b.LOGIN_ID branchOfficeUsername,
		CASE WHEN a.STATUS=1 
        THEN 'Active' 
        ELSE 'Deactive' 
        END branchOfficeStatus
		from
		(
		SELECT OM.OFFICE_MASTER_ID,
        OM.OFFICE                ,
        OM.STATUS,
        OFFICE_HEAD_ID
        FROM 
		CMS_OFFICE_MASTER OM
        where
		OM.STATUS = #branchOfficeStatus#
		<isNotNull prepend="AND" property="branchOffice">
			<isNotEmpty property="branchOffice">
				UPPER(OM.OFFICE) LIKE '%'||
				UPPER(#branchOffice#) || '%'
			</isNotEmpty>
		</isNotNull>
		) a left outer join
		(
		select
		UM.OFFICE_ID,
		UM.LOGIN_ID,
		UM.USER_MASTER_ID
		from
		CMS_USER_MASTER
		UM
		WHERE UM.IS_OFFICE_HEAD = 1
		) b
		on a.OFFICE_MASTER_ID=b.OFFICE_ID
		AND
		(a.OFFICE_HEAD_ID IS NULL OR a.OFFICE_HEAD_ID = to_char(b.USER_MASTER_ID))
	   ORDER BY upper(branchOffice) ASC
		
	</select>
	

	<update id="deActivate" parameterClass="java.util.HashMap">
		UPDATE
		CMS_OFFICE_MASTER
		SET
		CMS_OFFICE_MASTER.STATUS = 0,
		UPDATED_BY = #updatedBy#,
		UPDATED_ON = SYSDATE
		WHERE
		CMS_OFFICE_MASTER.OFFICE_MASTER_ID
		IN
		(#branchOfficeCode#)
	</update>

	<update id="activate" parameterClass="java.util.HashMap">
		UPDATE
		CMS_OFFICE_MASTER
		SET
		CMS_OFFICE_MASTER.STATUS = 1,
		UPDATED_BY = #updatedBy#,
		UPDATED_ON = SYSDATE
		WHERE
		CMS_OFFICE_MASTER.OFFICE_MASTER_ID
		IN
		(#branchOfficeCode#)
	</update>

	


	<select id="getBOInfo" parameterClass="java.lang.Integer"
		resultClass="com.worldcheck.atlas.vo.masters.BranchOfficeMasterVO">


		Select a.OFFICE_MASTER_ID "branchOfficeId", a.OFFICE
		"branchOffice",
		b.LOGIN_ID "branchOfficeUsername",a.STATUS
		"branchOfficeStatus"
		from(select

		OM.OFFICE_MASTER_ID,
		OM.OFFICE,OFFICE_HEAD_ID,OM.STATUS
		FROM CMS_OFFICE_MASTER OM
		where
		OM.OFFICE_MASTER_ID = #branchId#
		) a left outer join
		(
		select
		UM.OFFICE_ID,
		UM.LOGIN_ID,
		UM.USER_MASTER_ID
		from
		CMS_USER_MASTER UM
		WHERE UM.IS_OFFICE_HEAD
		= 1
		) b
		on a.OFFICE_MASTER_ID=b.OFFICE_ID
		AND (a.OFFICE_HEAD_ID IS NULL
		OR a.OFFICE_HEAD_ID = to_char(b.USER_MASTER_ID))
									
	</select>


	

	<update id="updateBo"
		parameterClass="com.worldcheck.atlas.vo.masters.BranchOfficeMasterVO">
	
		update
		CMS_OFFICE_MASTER
		SET
		CMS_OFFICE_MASTER.OFFICE=#branchOffice#,
		CMS_OFFICE_MASTER.STATUS =#statusval#,
		UPDATED_BY = #updatedBy#,
		UPDATED_ON = SYSDATE
		WHERE
		OFFICE_MASTER_ID = #branchOfficeId#
															
	</update>

	
	<select id="isExist" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">

		SELECT COUNT(*) FROM CMS_OFFICE_MASTER WHERE UPPER(OFFICE)
		=
		UPPER(#branchOffice#)
	</select>
	
	<select id="checkAssociatedtoOffice" parameterClass="java.util.HashMap" resultClass="com.worldcheck.atlas.vo.masters.BranchOfficeMasterVO">
		SELECT * from 
	(select COUNT(CRN) ccCount FROM CMS_CLIENTCASE   WHERE	CASE_STATUS_ID IN (1,3)	AND OFFICE_ID = #officeId#),
    (select COUNT(SCORESHEET_MASTER_ID) ssmCount from cms_scoresheet_master  where OFFICE_ID = #officeId#),
    (select count(CLIENT_MASTER_ID) cmCount from cms_client_master where branch_office_id = #officeId# and status = 1),
    (select count(RECUR_CLIENTCASE_ID) rccCount from cms_recurr_clientcase where office_id = #officeId# AND TO_DATE(RECURR_ENDDATE) > SYSDATE),
    (select count(TEAM_ID) tdCount from cms_team_details where OFFICE_ID = #officeId#),
    (select count(HOLIDAY_MASTER_ID) hmCount from cms_holiday_master where OFFICE_ID = #officeId#),
    (select count(USER_MASTER_ID) umCount from cms_user_master where OFFICE_ID = #officeId# and status = 1)
     
   
   
   
	</select>
	
	
	
	<update id="updateOfficeHead" parameterClass="com.worldcheck.atlas.vo.masters.UserMasterVO">

	update cms_office_master
	set UPDATED_BY = #updatedBy# ,
	UPDATED_ON = SYSDATE,
	office_head_id =
		case when #status# = '1'
				then (select cum.user_master_id from cms_user_master cum where	cum.login_id = #userID#)
			else
				null
		end
	where office_master_id = (	select
								cum.office_id from cms_user_master cum
								where cum.login_id = #userID#)
	</update>
	
	
	
	
</sqlMap>


