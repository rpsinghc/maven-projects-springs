<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
  "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="TeamAssignment">

	<resultMap id="teamDetailsMap" class="com.worldcheck.atlas.vo.TeamDetails">
		<result column="TEAM_ID" property="teamId" />
		<result column="CRN" property="crn" />
		<result column="primarysubname" property="primarySubName" />
		<result column="primarysubcountry" property="primarySubCountry" />
		<result column="OFFICE_ID" property="office" />
		<result column="MANAGER_ID" property="managerName" />
		<result column="managerFullName" property="managerFullName" />
		<result column="REVIEWER1" property="reviewer1" />
		<result column="REVIEWER2" property="reviewer2" />
		<result column="REVIEWER3" property="reviewer3" />
		<result property="rev1FullName" column="rev1FullName" />
		<result property="rev2FullName" column="rev2FullName" />
		<result property="rev3FullName" column="rev3FullName" />
		<result column="REV_INTDUEDATE1" property="dueDate1" />
		<result column="REV_INTDUEDATE2" property="dueDate2" />
		<result column="REV_FINDUEDATE" property="finalDueDate" />
		<result column="BYPASS_INTERIM" property="byPassInterim" />
		<result column="REV_OTHER_OFF1" property="otherOffice1" />
		<result column="REV_OTHER_OFF2" property="otherOffice2" />
		<result column="REV_OTHER_OFF3" property="otherOffice3" />
		<result property="teamJlpPoints" column="jlpTeamPoints" />
		<result property="scope" column="scope" />
	</resultMap>

	<resultMap id="subTeamDetailsMap" class="com.worldcheck.atlas.vo.SubTeamReMapVO">
		<result column="SUBJECT_ID" property="subjectId" />
		<result column="CRN" property="crn" />
		<result column="subject_name" property="subject" />
		<result column="re_id" property="reId" />
		<result column="jlpoints" property="jlpPoints" />
		<result column="performer" property="performer" />
		<result column="TEAM_ID" property="teamId" />
		<result column="NAME" property="reName" />
		<result column="REV_STATUS" property="revStatus" />
		<result column="USER_FULL_NAME" property="performerFullName" />
		<result column="ENTITY_NAME" property="entityName" />
		<result column="COUNTRY" property="countryName" />
	</resultMap>

	<resultMap id="teamDetailsVO" class="com.worldcheck.atlas.vo.TeamDetails">
		<result property="crn" column="CRN" />
		<result property="teamId" column="TEAM_ID" />
		<result property="teamTypeId" column="TEAM_TYPE_ID" />
		<result property="teamType" column="TEAM_TYPE" />
		<result property="office" column="OFFICE_ID" />
		<result property="officeName" column="OFFICE" />
		<result property="managerName" column="MANAGER_ID" />
		<result property="managerFullName" column="USER_FULL_NAME" />
		<result property="mainAnalyst" column="MAIN_ANALYST" />
		<result property="researchHead" column="RESEARCH_HEAD" />
		<result property="dueDate1" column="REV_INTDUEDATE1" />
		<result property="dueDate2" column="REV_INTDUEDATE2" />
		<result property="finalDueDate" column="REV_FINDUEDATE" />
		<result property="reviewer1" column="REVIEWER1" />
		<result property="reviewer2" column="REVIEWER2" />
		<result property="reviewer3" column="REVIEWER3" />
		<result property="rev1FullName" column="rev1FullName" />
		<result property="rev2FullName" column="rev2FullName" />
		<result property="rev3FullName" column="rev3FullName" />
		<result property="analysts" column="analysts" />
		<result property="performer" column="performers" />
		<result property="byPassInterim" column="BYPASS_INTERIM" />
		<result property="teamName" column="teamname" />
	</resultMap>


	<resultMap id="teamSubReDetailsTeamVo" class="com.worldcheck.atlas.vo.TeamDetails"
		groupBy="teamId">
		<result property="crn" column="CRN" />
		<result property="teamId" column="TEAM_ID" />
		<result property="clientDueDates" column="dueDates" />
		<result property="researchDueDates" column="ResearchDueDates" />
		<result property="primaryTeamDates" column="primaryTeamDueDates" />
		<result property="reqReceivedDate" column="reqRecDate" />
		<result property="teamTypeId" column="TEAM_TYPE_ID" />
		<result property="teamType" column="TEAM_TYPE" />
		<result property="office" column="OFFICE_ID" />
		<result property="officeName" column="OFFICE" />
		<result property="managerName" column="MANAGER_ID" />
		<result property="managerFullName" column="USER_FULL_NAME" />
		<result property="mainAnalyst" column="MAIN_ANALYST" />
		<result property="researchHead" column="RESEARCH_HEAD" />
		<result property="dueDate1" column="REV_INTDUEDATE1" />
		<result property="dueDate2" column="REV_INTDUEDATE2" />
		<result property="finalDueDate" column="REV_FINDUEDATE" />
		<result property="reviewer1" column="REVIEWER1" />
		<result property="reviewer2" column="REVIEWER2" />
		<result property="reviewer3" column="REVIEWER3" />
		<result property="rev1FullName" column="rev1FullName" />
		<result property="rev2FullName" column="rev2FullName" />
		<result property="rev3FullName" column="rev3FullName" />
		<result property="otherOffice1" column="REV_OTHER_OFF1" />
		<result property="otherOffice2" column="REV_OTHER_OFF2" />
		<result property="otherOffice3" column="REV_OTHER_OFF3" />
		<result property="analysts" column="analysts" />
		<result property="byPassInterim" column="BYPASS_INTERIM" />
		<result property="primarySubName" column="primarySubName" />
		<result property="primarySubCountry" column="primarySubCountry" />
		<result property="teamJlpPoints" column="jlpTeamPoints" />
		<result property="performer" column="performers" />
		<result property="scope" column="scope" />
		<result property="updatedBy" column="TEAM_UPDATED_BY" />
		<result property="teamSubjectREDetails" resultMap="TeamAssignment.SubTeamREMap" />
	</resultMap>
	
	<resultMap id="teamSubReDetailsVO" class="com.worldcheck.atlas.vo.TeamDetails"
		groupBy="teamId">
		<result property="crn" column="CRN" />
		<result property="teamId" column="TEAM_ID" />
		<result property="teamTypeId" column="TEAM_TYPE_ID" />
		<result property="teamType" column="TEAM_TYPE" />
		<result property="office" column="OFFICE_ID" />
		<result property="officeName" column="OFFICE" />
		<result property="managerName" column="MANAGER_ID" />
		<result property="managerFullName" column="USER_FULL_NAME" />
		<result property="mainAnalyst" column="MAIN_ANALYST" />
		<result property="researchHead" column="RESEARCH_HEAD" />
		<result property="dueDate1" column="REV_INTDUEDATE1" />
		<result property="dueDate2" column="REV_INTDUEDATE2" />
		<result property="finalDueDate" column="REV_FINDUEDATE" />
		<result property="reviewer1" column="REVIEWER1" />
		<result property="reviewer2" column="REVIEWER2" />
		<result property="reviewer3" column="REVIEWER3" />
		<result property="rev1FullName" column="rev1FullName" />
		<result property="rev2FullName" column="rev2FullName" />
		<result property="rev3FullName" column="rev3FullName" />
		<result property="otherOffice1" column="REV_OTHER_OFF1" />
		<result property="otherOffice2" column="REV_OTHER_OFF2" />
		<result property="otherOffice3" column="REV_OTHER_OFF3" />
		<result property="analysts" column="analysts" />
		<result property="byPassInterim" column="BYPASS_INTERIM" />
		<result property="primarySubName" column="primarySubName" />
		<result property="primarySubCountry" column="primarySubCountry" />
		<result property="teamJlpPoints" column="jlpTeamPoints" />
		<result property="performer" column="performers" />
		<result property="scope" column="scope" />
		<result property="updatedBy" column="TEAM_UPDATED_BY" />
		<result property="teamSubjectREDetails" resultMap="TeamAssignment.SubTeamREMap" />
	</resultMap>

	<resultMap id="SubTeamREMap" class="com.worldcheck.atlas.vo.SubTeamReMapVO">
		<result property="teamId" column="TEAM_ID" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="reId" column="RE_ID" />
		<result property="performer" column="performer" />
		<result property="performerFullName" column="performerFullName" />
		<result property="updatedBy" column="RE_UPDATED_BY" />
		<result property="jlpPoints" column="jlpoints" />
		<result property="reName" column="name" />
	</resultMap>

	<select id="getCaseTeamDetails" resultMap="teamDetailsVO"
		parameterClass="java.lang.String">
		SELECT a.*,decode(a.team_type,   'Supporting - Internal',   CONCAT('Supporting 
		',   rownum -1),   'Supporting - BI',   CONCAT('Supporting ',   rownum -1),   'Supporting - Vendor',   CONCAT('Supporting ',   rownum -1),   a.team_type) teamname,
		b.office,
		c.user_full_name,
		concatenate_list(CURSOR(select cum.user_full_name from (SELECT team_id,r,SUBSTR(',' || csv || ',',   instr(',' || csv || ',',   ',',   1,   r) + 1,   instr(',' || csv || ',',   ',',   1,   r + 1) -instr(',' || csv || ',',   ',',   1,   r) -1) analysts
FROM
  (SELECT ctd.analysts csv,ctd.team_id
   FROM cms_team_details ctd
   ),
    (SELECT rownum r
   FROM dual CONNECT BY LEVEL <![CDATA[ <= ]]> 30)
WHERE instr(csv || ',',   ',',   1,   r) > 0) p,cms_user_master cum
where p.analysts = cum.login_id
and p.team_id = a.team_id
order by team_id,r)) analysts
		FROM
		(SELECT
		ctd.team_id,
		ctd.crn,
		ctd.team_type_id,
		ctt.team_type,
		ctd.office_id,
		ctd.manager_id,
		ctd.main_analyst,
                ctd.analysts performers,
		to_char(ctd.rev_intduedate1,
		'dd-mm-YY') rev_intduedate1,
		to_char(ctd.rev_intduedate2, 'dd-mm-YY')
		rev_intduedate2,
		to_char(ctd.rev_finduedate, 'dd-mm-YY')
		rev_finduedate,
		ctd.bypass_interim,
		ctd.research_head,
		ctd.REVIEWER1,
		ctd.REVIEWER2,
		ctd.REVIEWER3,
		rev1.user_full_name rev1FullName,
		rev2.user_full_name rev2FullName,
		rev3.user_full_name rev3FullName
		FROM
		cms_team_details ctd,cms_user_master rev1,cms_user_master
		rev2,cms_user_master rev3,
		cms_team_type ctt
		WHERE ctd.crn = #crn#
		AND
		ctd.team_type_id = ctt.TEAM_TYPE_ID
		AND rev1.LOGIN_ID(+) =
		ctd.REVIEWER1
		AND rev2.LOGIN_ID(+) = ctd.REVIEWER2
		AND rev3.LOGIN_ID(+)
		= ctd.REVIEWER3
		ORDER BY ctd.team_type_id,
		ctd.team_id)
		a LEFT JOIN
		(SELECT office_master_id,
		office
		FROM cms_office_master)
		b ON a.office_id
		= b.office_master_id LEFT JOIN
		(SELECT login_id,
		user_full_name
		FROM
		cms_user_master)
		c ON a.manager_id = c.login_id 
</select>


	<select id="getCaseTeamSubReDetails" resultMap="teamSubReDetailsVO"
		parameterClass="java.util.HashMap">
		SELECT a.*,e.primarySubName,e.primarySubCountry,f.jlpTeamPoints,
		d.subject_id,
		d.re_id,
		d.performer,
		d.name,
		d.user_full_name
		performerFullName,
		d.RE_UPDATED_BY,
		 d.jlpoints,
		b.office,
		c.user_full_name,
		concatenate_list(CURSOR(select cum.user_full_name from (SELECT team_id,r,SUBSTR(',' || csv || ',',   instr(',' || csv || ',',   ',',   1,   r) + 1,   instr(',' || csv || ',',   ',',   1,   r + 1) -instr(',' || csv || ',',   ',',   1,   r) -1) analysts
FROM
  (SELECT ctd.analysts csv,ctd.team_id
   FROM cms_team_details ctd
   ),
    (SELECT rownum r
   FROM dual CONNECT BY LEVEL  <![CDATA[ <= ]]>  30)
WHERE instr(csv || ',',   ',',   1,   r) > 0) p,cms_user_master cum
where p.analysts = cum.login_id
and p.team_id = a.team_id
order by team_id,r)) analysts,
		concat(concat(nvl(x.company,0) , '+'), nvl(y.individual,0)) "scope"
		FROM
		(SELECT
		ctd.team_id,
		ctd.crn,
		ctd.team_type_id,
		ctt.team_type,
		ctd.office_id,
		ctd.manager_id,
		ctd.main_analyst,
		 ctd.UPDATED_BY TEAM_UPDATED_BY,
                ctd.analysts performers,
		to_char(ctd.rev_intduedate1,
		'dd-mm-YY') rev_intduedate1,
		to_char(ctd.rev_intduedate2, 'dd-mm-YY')
		rev_intduedate2,
		to_char(ctd.rev_finduedate, 'dd-mm-YY')
		rev_finduedate,
		ctd.bypass_interim,
		ctd.research_head,
		ctd.REVIEWER1,
		ctd.REVIEWER2,
		ctd.REVIEWER3,
		ctd.REV_OTHER_OFF1,
		ctd.REV_OTHER_OFF2,
		ctd.REV_OTHER_OFF3,
		rev1.user_full_name rev1FullName,
		rev2.user_full_name rev2FullName,
		rev3.user_full_name rev3FullName
		FROM
		cms_team_details ctd,cms_user_master rev1,cms_user_master
		rev2,cms_user_master rev3,
		cms_team_type ctt
		WHERE ctd.crn = #crn#
		AND
		ctd.team_id = #teamId#
		AND ctd.team_type_id = ctt.TEAM_TYPE_ID
		AND
		rev1.LOGIN_ID(+) = ctd.REVIEWER1
		AND rev2.LOGIN_ID(+) = ctd.REVIEWER2
		AND rev3.LOGIN_ID(+) = ctd.REVIEWER3
		ORDER BY ctd.team_type_id,
		ctd.team_id)
		a LEFT JOIN
		(SELECT cstrm.crn,
		cstrm.subject_id,
		cstrm.team_id,
		cstrm.re_id,
		cstrm.jlpoints,
		cstrm.performer,
		rev1.user_full_name,
		cstrm.UPDATED_BY RE_UPDATED_BY,
		crm.name
		FROM cms_sub_team_re_map cstrm,cms_user_master
		rev1,CMS_RE_MASTER crm
		WHERE cstrm.re_id = crm.re_master_id
		AND
		rev1.LOGIN_ID(+) = cstrm.performer)
		d ON a.team_id = d.team_id LEFT
		JOIN
		(SELECT office_master_id,
		office
		FROM cms_office_master)
		b ON
		a.office_id = b.office_master_id LEFT JOIN
		(SELECT login_id,
		user_full_name
		FROM cms_user_master)
		c ON a.manager_id = c.login_id LEFT
		JOIN
		(SELECT csm.SUBJECT_NAME primarySubName , CCM.COUNTRY primarySubCountry, crn
		FROM cms_subject
		csm,cms_country_master ccm
		WHERE csm.IS_PRIMARY_SUB = 1
		and
		csm.COUNTRY_ID = ccm.COUNTRY_MASTER_ID)
		e ON a.crn = e.crn LEFT JOIN
		(SELECT sum(JLPOINTS) jlpTeamPoints,team_id
		FROM cms_sub_team_re_map
		cstrm
		group by team_id)
		f ON a.team_id = f.team_id
		LEFT
		JOIN
		(SELECT count(*) company,crn
		FROM
		cms_subject cs, cms_entitytype_master cem
    where cs.entity_type_id = cem.entity_type_id
    and upper(cem.entity_name) = 'COMPANY'
		group by crn)
		x ON a.crn = x.crn  LEFT
		JOIN
		(SELECT count(*) individual,crn
		FROM
		cms_subject cs , cms_entitytype_master cem
    where cs.entity_type_id = cem.entity_type_id
    and upper(cem.entity_name) = 'INDIVIDUAL'
		group by crn)
		y ON a.crn = y.crn
		order by a.crn
	</select>

	<select id="getOfficeMaster" resultClass="com.worldcheck.atlas.vo.masters.UserMasterVO"
		parameterClass="com.worldcheck.atlas.vo.TeamDetails">
		SELECT distinct(CUM.LOGIN_ID) username,
		CUM.USER_FULL_NAME userFullName
		FROM CMS_USER_MASTER CUM,
		CMS_TEAM_DETAILS CTD,
		CMS_USER_ROLE_MAP CURM,
		CMS_TEAM_TYPE CTT
		WHERE
		CTD.OFFICE_ID = CUM.OFFICE_ID
		AND CUM.STATUS = 1
		AND CUM.USER_MASTER_ID
		= CURM.USER_ID
		AND CTT.TEAM_TYPE_ID = CTD.TEAM_TYPE_ID
		AND CURM.ROLE_ID
		IN ('R4', 'R7')
		AND CTD.CRN = #crn#
		AND CTD.TEAM_ID = #teamId#
		ORDER BY
		UPPER(CUM.USER_FULL_NAME)
	</select>

	<resultMap id="officeMasterMap" class="com.worldcheck.atlas.vo.TeamDetails"
		groupBy="office">
		<result property="office" column="OFFICE" />
		<result property="managerList" resultMap="TeamAssignment.managerMap" />
	</resultMap>

	<resultMap id="managerMap" class="com.worldcheck.atlas.vo.masters.UserMasterVO">
		<result property="username" column="username" />
		<result property="userFullName" column="userFullName" />
	</resultMap>


	<select id="getAllOfficeMaster" resultMap="officeMasterMap"
		parameterClass="com.worldcheck.atlas.vo.TeamDetails">
		SELECT distinct(CUM.LOGIN_ID) username,
		CUM.USER_FULL_NAME
		userFullName,COM.OFFICE
		FROM CMS_USER_MASTER CUM,
		CMS_USER_ROLE_MAP
		CURM,
		cms_office_master com
		WHERE CUM.STATUS = 1
		AND
		CUM.USER_MASTER_ID = CURM.USER_ID
		AND
		CURM.ROLE_ID IN ('R4', 'R7')
		AND
		COM.OFFICE_MASTER_ID = CUM.OFFICE_ID
		ORDER BY
		UPPER(CUM.USER_FULL_NAME)
	</select>

	<resultMap id="reviewerMasterMap" class="com.worldcheck.atlas.vo.TeamDetails"
		groupBy="office">
		<result property="office" column="OFFICE" />
		<result property="reviewer" resultMap="TeamAssignment.reviewerMap" />
	</resultMap>

	<resultMap id="reviewerMap" class="com.worldcheck.atlas.vo.masters.UserMasterVO">
		<result property="username" column="USERNAME" />
		<result property="userFullName" column="USERFULLNAME" />
	</resultMap>

	<select id="getAllOfficeReviewer" resultMap="reviewerMasterMap">
		SELECT
		DISTINCT(CUM.LOGIN_ID) USERNAME,
		CUM.USER_FULL_NAME
		USERFULLNAME,COM.OFFICE
		FROM
		CMS_USER_MASTER CUM,
		CMS_USER_ROLE_MAP CURM,
		CMS_OFFICE_MASTER COM
		WHERE CUM.USER_MASTER_ID =
		CURM.USER_ID
		AND
		CUM.STATUS = 1
		AND CURM.ROLE_ID IN ('R2','R4','R7')
		AND
		COM.OFFICE_MASTER_ID = CUM.OFFICE_ID
		ORDER BY
		UPPER(CUM.USER_FULL_NAME)
	</select>


	<resultMap id="teamSubjectMap" class="com.worldcheck.atlas.vo.TeamDetails"
		groupBy="teamId">
		<result property="teamId" column="TEAM_ID" />
		<result property="crn" column="CRN" />
		<result property="subList" resultMap="TeamAssignment.subjectMap" />
	</resultMap>

	<resultMap id="subjectMap" class="com.worldcheck.atlas.vo.SubjectDetails"
		groupBy="subjectId">
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="SUBJECT_NAME" />
		<result property="entityName" column="ENTITY_NAME" />
		<result property="countryName" column="COUNTRY" />
		<result property="reList" resultMap="TeamAssignment.reMap" />
	</resultMap>

	<resultMap id="reMap"
		class="com.worldcheck.atlas.vo.masters.ResearchElementMasterVO">
		<result property="rEMasterId" column="RE_ID" />
		<result property="points" column="JLPOINTS" />
		<result property="researchElementName" column="NAME" />
	</resultMap>

	<select id="getTeamSubjectDetails" resultMap="teamSubjectMap"
		parameterClass="java.util.HashMap">
		SELECT CSTRM.CRN,
		CSTRM.TEAM_ID,
		CSTRM.SUBJECT_ID,
		CSTRM.RE_ID,
		SUB.SUBJECT_NAME,
		CSTRM.JLPOINTS,
        SUB.IS_PRIMARY_SUB,
        CEM.ENTITY_NAME,
        CCM.COUNTRY,
		CRM.NAME
		FROM
		CMS_SUB_TEAM_RE_MAP CSTRM,
		CMS_SUBJECT SUB,
		CMS_RE_MASTER CRM,
		CMS_USER_MASTER CUM,
        CMS_COUNTRY_MASTER CCM,
        CMS_ENTITYTYPE_MASTER CEM
		WHERE
		CSTRM.CRN =
		SUB.CRN
		AND
		CSTRM.SUBJECT_ID = SUB.SUBJECT_ID
		AND CSTRM.RE_ID =
		CRM.RE_MASTER_ID
		AND CUM.LOGIN_ID(+) = CSTRM.PERFORMER
                and ccm.COUNTRY_MASTER_ID = sub.COUNTRY_ID
                and cem.ENTITY_TYPE_ID = sub.ENTITY_TYPE_ID
		AND CSTRM.TEAM_ID in
		<iterate property="teamIds" open="(" close=")" conjunction=",">
			#teamIds[]#
     	</iterate>
		GROUP BY
		CSTRM.TEAM_ID,CSTRM.SUBJECT_ID,CSTRM.RE_ID,CSTRM.CRN,SUB.SUBJECT_NAME,CSTRM.JLPOINTS,SUB.IS_PRIMARY_SUB,
		SUB.ENTITY_TYPE_ID,SUB.SUBJECT_ID,CRM.GROUP_ID,CRM.NAME,cem.ENTITY_NAME,ccm.COUNTRY
        ORDER BY CSTRM.TEAM_ID,SUB.IS_PRIMARY_SUB desc,
		CASE WHEN (SELECT SUB.ENTITY_TYPE_ID    
				FROM CMS_CLIENTCASE CASE,CMS_SUBJECT SUB ,  CMS_COUNTRY_MASTER COUNT,CMS_ENTITYTYPE_MASTER ENTITY    
				WHERE 	CASE.CRN=CSTRM.CRN AND SUB.CRN=CASE.CRN  AND SUB.COUNTRY_ID=COUNT.COUNTRY_MASTER_ID 
				and SUB.ENTITY_TYPE_ID = ENTITY.ENTITY_TYPE_ID  AND SUB.IS_PRIMARY_SUB = 1) = 1 THEN SUB.entity_type_id      
			END  ,			  
			CASE WHEN (SELECT SUB.ENTITY_TYPE_ID    
				FROM CMS_CLIENTCASE CASE,CMS_SUBJECT SUB ,  CMS_COUNTRY_MASTER COUNT,CMS_ENTITYTYPE_MASTER ENTITY    
				WHERE 	CASE.CRN=CSTRM.CRN AND SUB.CRN=CASE.CRN  AND SUB.COUNTRY_ID=COUNT.COUNTRY_MASTER_ID 
				and SUB.ENTITY_TYPE_ID = ENTITY.ENTITY_TYPE_ID       AND SUB.IS_PRIMARY_SUB = 1) = 2 THEN SUB.entity_type_id 			 
			END  desc, upper(SUB.SUBJECT_NAME) asc,
			SUB.SUBJECT_ID ASC, upper(CRM.GROUP_ID), upper(CRM.NAME) ASC
	</select>
	
	<select id="getTeamSubREAnalystCount" resultClass="com.worldcheck.atlas.vo.SubTeamReMapVO"
		parameterClass="java.lang.String">
		SELECT 
			count(*) analystCount,
			CSTRM.TEAM_ID teamId,
			CSTRM.SUBJECT_ID subjectId,
			CSTRM.RE_ID reId
		FROM CMS_SUB_TEAM_RE_MAP CSTRM, CMS_TEAM_DETAILS CTD,CMS_TEAM_TYPE CTT 
		WHERE CSTRM.CRN = #crn# and CSTRM.CRN = CTD.CRN 
		      and CTD.TEAM_TYPE_ID = CTT.TEAM_TYPE_ID and CSTRM.TEAM_ID = CTD.TEAM_ID 
		      and CTT.TEAM_TYPE in ('Primary','Supporting - Internal') 
		GROUP BY CSTRM.TEAM_ID,CSTRM.SUBJECT_ID,CSTRM.RE_ID
	</select>

	<select id="getAnalystReDetails" resultClass="com.worldcheck.atlas.vo.SubTeamReMapVO"
		parameterClass="java.util.HashMap">
		SELECT CSTRM.CRN crn,
		CSTRM.TEAM_ID teamId,
		CSTRM.SUBJECT_ID subjectId,
		CSTRM.RE_ID reId,
		SUB.SUBJECT_NAME subject,
		CSTRM.JLPOINTS jlpPoints,
		CRM."NAME" "reName",
		CSTRM.PERFORMER performer
		FROM
		CMS_SUB_TEAM_RE_MAP
		CSTRM,
		CMS_SUBJECT SUB,
		CMS_RE_MASTER
		CRM,
		CMS_USER_MASTER CUM
		WHERE
		CSTRM.CRN = SUB.CRN
		AND
		CSTRM.SUBJECT_ID =
		SUB.SUBJECT_ID
		AND CSTRM.RE_ID
		= CRM.RE_MASTER_ID
		AND CUM.LOGIN_ID(+) =
		CSTRM.PERFORMER
		AND
		CSTRM.TEAM_ID in
		<iterate property="teamIds" open="(" close=")" conjunction=",">
			#teamIds[]#
     	</iterate>
		ORDER BY SUB.IS_PRIMARY_SUB DESC,upper(SUB.SUBJECT_NAME) ASC,upper(CRM.NAME) ASC
	</select>


	<resultMap id="analystMap" class="com.worldcheck.atlas.vo.TeamDetails"
		groupBy="teamId">
		<result property="teamId" column="TEAM_ID" />
		<result property="analystList" resultMap="TeamAssignment.userAnalystMap" />
	</resultMap>

	<resultMap id="userAnalystMap" class="com.worldcheck.atlas.vo.masters.UserMasterVO">
		<result property="username" column="PERFORMER" />
		<result property="userFullName" column="USER_FULL_NAME" />
	</resultMap>

	<select id="getAnalystTeamDetails" resultMap="analystMap"
		parameterClass="java.util.HashMap">
		select b.team_id,cum.login_id performer,cum.user_full_name from (SELECT team_id,r,SUBSTR(',' || csv || ',',   instr(',' || csv || ',',   ',',   1,   r) + 1,   instr(',' || csv || ',',   ',',   1,   r + 1) -instr(',' || csv || ',',   ',',   1,   r) -1) analysts
FROM
  (SELECT ctd.analysts csv,ctd.team_id
   FROM cms_team_details ctd
   WHERE ctd.team_id in 
		<iterate property="teamIds" open="(" close=")" conjunction=",">
			#teamIds[]#
     	</iterate>
		),
    (SELECT rownum r
   FROM dual CONNECT BY LEVEL <![CDATA[ <= ]]>30)
WHERE instr(csv || ',',   ',',   1,   r) > 0) b,cms_user_master cum
where b.analysts = cum.login_id(+)
order by team_id,r
	</select>


	<resultMap id="analystOfficeMap" class="com.worldcheck.atlas.vo.TeamDetails"
		groupBy="office">
		<result property="office" column="OFFICE" />
		<result property="analystList" resultMap="TeamAssignment.UserAnalystMap" />
	</resultMap>
	
	<resultMap id="UserAnalystMap" class="com.worldcheck.atlas.vo.masters.UserMasterVO">
		<result column="performer" property="username" />
		<result column="USER_FULL_NAME" property="userFullName" />
		<result column="REPORTS_TO" property="reportsTo" />
	</resultMap>

	<select id="getAllOfficeAnalyst" resultMap="analystOfficeMap"
		parameterClass="java.util.HashMap">
		SELECT distinct(CUM.LOGIN_ID) performer,cum.REPORTS_TO,
		CUM.USER_FULL_NAME ,COM.OFFICE
		FROM CMS_USER_MASTER CUM,
		CMS_USER_ROLE_MAP CURM,
		cms_office_master com
		WHERE CUM.STATUS = 1
		AND
		CUM.USER_MASTER_ID = CURM.USER_ID
		AND
		CURM.ROLE_ID IN ('R5')
		AND
		COM.OFFICE_MASTER_ID = CUM.OFFICE_ID
		ORDER BY
		UPPER(CUM.USER_FULL_NAME)
	</select>



	<select id="getAnalystForManager" resultClass="com.worldcheck.atlas.vo.masters.UserMasterVO"
		parameterClass="java.lang.String">
	SELECT DISTINCT(CUM.LOGIN_ID) username,cum.USER_FULL_NAME userFullName,CUM.REPORTS_TO reportsTo
	FROM CMS_USER_MASTER CUM,
	CMS_USER_ROLE_MAP CURM
	WHERE CURM.USER_ID = cum.user_master_id
		AND CUM.STATUS = 1
		AND LEVEL>1
	START WITH upper(CUM.LOGIN_ID) = upper(#managerId#)
	CONNECT BY NOCYCLE PRIOR upper(CUM.LOGIN_ID) = upper(CUM.REPORTS_TO) and CURM.ROLE_ID = 'R5'
	</select>

	<select id="getAnalystMaster" resultClass="com.worldcheck.atlas.vo.masters.UserMasterVO"
		parameterClass="com.worldcheck.atlas.vo.TeamDetails">
		SELECT distinct(CUM.LOGIN_ID) username,
		CUM.USER_FULL_NAME userFullName,CUM.REPORTS_TO reportsTo
		FROM CMS_USER_MASTER CUM,
		CMS_TEAM_DETAILS CTD,
		CMS_USER_ROLE_MAP CURM
		WHERE
		CTD.OFFICE_ID = CUM.OFFICE_ID
		AND CUM.USER_MASTER_ID = CURM.USER_ID
		AND
		CUM.STATUS = 1
		AND CURM.ROLE_ID
		IN ('R5')
		AND
		CTD.CRN = #crn#
		AND CTD.TEAM_ID = #teamId#
		ORDER BY
		UPPER(CUM.USER_FULL_NAME)
	</select>

	<select id="getReviewerMaster" resultClass="com.worldcheck.atlas.vo.masters.UserMasterVO"
		parameterClass="com.worldcheck.atlas.vo.TeamDetails">
		SELECT distinct(CUM.LOGIN_ID) username,
		CUM.USER_FULL_NAME userFullName
		FROM CMS_USER_MASTER CUM,
		CMS_TEAM_DETAILS CTD,
		CMS_USER_ROLE_MAP CURM,
		CMS_TEAM_TYPE CTT
		WHERE
		CTD.OFFICE_ID = CUM.OFFICE_ID
		AND CUM.USER_MASTER_ID = CURM.USER_ID
		AND
		CUM.STATUS = 1
		AND
		CTT.TEAM_TYPE_ID = CTD.TEAM_TYPE_ID
		AND CURM.ROLE_ID
		IN
		('R2','R4','R7')
		AND CTD.CRN = #crn#
		AND CTD.TEAM_ID = #teamId#
		ORDER
		BY
		UPPER(CUM.USER_FULL_NAME)
</select>

	<select id="getReviewerList" resultClass="com.worldcheck.atlas.vo.masters.UserMasterVO">
		SELECT
		distinct(CUM.LOGIN_ID) username,
		CUM.USER_FULL_NAME userFullName
		FROM
		CMS_USER_MASTER CUM,
		CMS_USER_ROLE_MAP CURM
		WHERE CUM.USER_MASTER_ID =
		CURM.USER_ID
		AND CUM.STATUS = 1
		AND CURM.ROLE_ID IN ('R2','R4','R7')
		ORDER BY
		UPPER(CUM.USER_FULL_NAME)
</select>

	<select id="getTeamDetails" resultMap="teamDetailsMap"
		parameterClass="java.lang.String">
		select a.*,f.jlpTeamPoints,concat(concat(nvl(g.company,0) , '+'), nvl(h.individual,0)) "scope" from (SELECT
		CTD.CRN,CTD.TEAM_ID,
		SUB.SUBJECT_NAME primarysubname,CCM.COUNTRY primarysubcountry,
		ctd.office_id,ctd.manager_id, (select USER_FULL_NAME from CMS_USER_MASTER where login_id=CTD.manager_id)as managerFullName,ctd.main_analyst,
		TO_CHAR(CTD.REV_FINDUEDATE, 'dd-mm-YY') REV_FINDUEDATE,
		TO_CHAR(CTD.REV_INTDUEDATE1, 'dd-mm-YY') REV_INTDUEDATE1,
		TO_CHAR(CTD.REV_INTDUEDATE2, 'dd-mm-YY') REV_INTDUEDATE2,
		CTD.REVIEWER1,(select USER_FULL_NAME from CMS_USER_MASTER where login_id=CTD.REVIEWER1)as rev1FullName,
		CTD.REVIEWER2,(select USER_FULL_NAME from CMS_USER_MASTER where login_id=CTD.REVIEWER2)as rev2FullName,
		CTD.REVIEWER3,(select USER_FULL_NAME from CMS_USER_MASTER where login_id=CTD.REVIEWER3)as rev3FullName,
		CTD.BYPASS_INTERIM,CTD.REV_OTHER_OFF1,CTD.REV_OTHER_OFF2,CTD.REV_OTHER_OFF3
		FROM
		CMS_TEAM_DETAILS
		CTD,
		(SELECT *
		FROM
		CMS_SUBJECT SUB
		WHERE
		SUB.IS_PRIMARY_SUB = 1)
		SUB,
		CMS_COUNTRY_MASTER ccm
		WHERE SUB.CRN(+) =
		CTD.CRN
		AND
		CCM.COUNTRY_MASTER_ID = SUB.COUNTRY_ID
		AND TEAM_ID =
		#teamId#)
		a LEFT JOIN
		(SELECT sum(JLPOINTS) jlpTeamPoints,team_id
		FROM
		cms_sub_team_re_map cstrm
		group by team_id)
		f ON a.team_id = f.team_id LEFT
		JOIN
		(SELECT count(*) company,crn
		FROM
		cms_subject cs, cms_entitytype_master cem
    where cs.entity_type_id = cem.entity_type_id
    and upper(cem.entity_name) = 'COMPANY'
		group by crn)
		g ON a.crn = g.crn  LEFT
		JOIN
		(SELECT count(*) individual,crn
		FROM
		cms_subject cs , cms_entitytype_master cem
    where cs.entity_type_id = cem.entity_type_id
    and upper(cem.entity_name) = 'INDIVIDUAL'
		group by crn)
		h ON a.crn = h.crn
	</select>

	<select id="getSubTeamDetails" resultMap="subTeamDetailsMap"
		parameterClass="java.lang.String">
		SELECT CSTRM.CRN,
		CSTRM.SUBJECT_ID,
		SUB.SUBJECT_NAME,
		CSTRM.RE_ID,
		CSTRM.TEAM_ID,
		CSTRM.JLPOINTS,
		CSTRM.PERFORMER,
		CSTRM.REV_STATUS,
		CRM.NAME,
		CUM.USER_FULL_NAME,
	    CEM.ENTITY_NAME,
	    CCM.COUNTRY
		FROM
		CMS_SUB_TEAM_RE_MAP
		CSTRM,
		CMS_SUBJECT SUB,
		CMS_RE_MASTER CRM,
		CMS_USER_MASTER CUM,
        CMS_COUNTRY_MASTER CCM,
        CMS_ENTITYTYPE_MASTER CEM
		WHERE
		CSTRM.CRN = SUB.CRN
		AND
		CSTRM.SUBJECT_ID = SUB.SUBJECT_ID
		AND CSTRM.RE_ID = CRM.RE_MASTER_ID
		AND CUM.LOGIN_ID(+) = CSTRM.PERFORMER
		AND SUB.ENTITY_TYPE_ID = CEM.ENTITY_TYPE_ID
        AND SUB.COUNTRY_ID = CCM.COUNTRY_MASTER_ID
		AND CSTRM.TEAM_ID = #teamId#
		order by SUB.IS_PRIMARY_SUB desc,
		CASE WHEN (SELECT SUB.ENTITY_TYPE_ID    
				FROM CMS_CLIENTCASE CASE,CMS_SUBJECT SUB ,  CMS_COUNTRY_MASTER COUNT,CMS_ENTITYTYPE_MASTER ENTITY    
				WHERE 	CASE.CRN=CSTRM.CRN AND SUB.CRN=CASE.CRN  AND SUB.COUNTRY_ID=COUNT.COUNTRY_MASTER_ID 
				and SUB.ENTITY_TYPE_ID = ENTITY.ENTITY_TYPE_ID  AND SUB.IS_PRIMARY_SUB = 1) = 1 THEN SUB.entity_type_id      
			END  ,
			  
			CASE WHEN (SELECT SUB.ENTITY_TYPE_ID    
				FROM CMS_CLIENTCASE CASE,CMS_SUBJECT SUB ,  CMS_COUNTRY_MASTER COUNT,CMS_ENTITYTYPE_MASTER ENTITY    
				WHERE 	CASE.CRN=CSTRM.CRN AND SUB.CRN=CASE.CRN  AND SUB.COUNTRY_ID=COUNT.COUNTRY_MASTER_ID 
				and SUB.ENTITY_TYPE_ID = ENTITY.ENTITY_TYPE_ID       AND SUB.IS_PRIMARY_SUB = 1) = 2 THEN SUB.entity_type_id 
			 
			END  desc, upper(SUB.SUBJECT_NAME) asc,
			SUB.SUBJECT_ID ASC, upper(CRM.GROUP_ID), upper(CRM.NAME) ASC,CSTRM.SUBJECT_ID
	</select>
<!-- updated by juheen for reqRecdDate -->
	<select id="getCaseDetails" resultClass="com.worldcheck.atlas.vo.CaseDetails"
		parameterClass="java.lang.String">
		SELECT
		FINAL_DUE_DATE finalDueDate,CLIENT_INT_DUEDATE1
		cInterim1,CLIENT_INT_DUEDATE2 cInterim2,REQ_RECD_DT reqRecdDate,ccs.DESCRIPTION caseStatus 
		FROM CMS_CLIENTCASE cc, CMS_CASE_STATUS_MASTER ccs
		WHERE CRN = #crn#
		 and cc.CASE_STATUS_ID = ccs.CASE_STATUS_ID
</select>

<!--  Added by Vinay. For CR-67(Release 1.3) -->
<select id="getTeamAssignmentWINames" resultClass="com.worldcheck.atlas.vo.TeamDetails"
		parameterClass="java.lang.String">
		SELECT ta.crn crn,ta.teamtypelist teamType, biwi.workitem_name workitemName  FROM SAVVIONDB.teamassignment ta LEFT JOIN SAVVIONDB.BIZLOGIC_WORKITEM biwi
		ON ta.PROCESS_INSTANCE_ID = biwi.PROCESS_INSTANCE_ID
		WHERE CRN = #crn# AND biwi.workitem_name <![CDATA[ <> ]]> 'null'
</select>
<!--  End by Vinay-->

<select id="getColorDetails" resultClass="com.worldcheck.atlas.vo.TaskColorVO" parameterClass="java.util.HashMap">
		SELECT distinct COLOR color
		FROM CMS_COLOR_DETAILS
		WHERE CRN = #crn# and TASK_NAME = #taskName#
		
</select>
<!-- Change by Ashish Chaudhary to optimize the performance of Bulk Team Assignment on 3-Apr-2015  -->
	<select id="getCompletCaseDetails" resultMap="teamSubReDetailsTeamVo"
		parameterClass="java.util.HashMap">
		SELECT a.*,e.primarySubName,e.primarySubCountry,f.jlpTeamPoints,
		d.subject_id,
		d.re_id,
		d.name,
		d.performer,
		d.user_full_name performerFullName,
		d.RE_UPDATED_BY,
		 d.jlpoints,
		b.office,
		c.user_full_name,
(SELECT 
       LISTAGG(user_full_name, ',') WITHIN GROUP (ORDER BY user_full_name) from
 (
  select team_id,cum.user_full_name from 
  (SELECT team_id,r,SUBSTR(',' || csv || ',',   
    instr(',' || csv || ',',   ',',   1,   r) + 1,   
    instr(',' || csv || ',',   ',',   1,   r + 1) -instr(',' || csv || ',',   ',',   1,   r) -1) analysts

FROM
(SELECT ctd.analysts csv,ctd.team_id FROM cms_team_details ctd),
(SELECT rownum r FROM dual CONNECT BY LEVEL <![CDATA[ <= ]]> 30)
WHERE instr(csv || ',',   ',',   1,   r) > 0) p,cms_user_master cum
where p.analysts = cum.login_id
order by team_id,r
  )q
  where q.team_id = a.team_id
  ) analysts		
,
		concat(concat(nvl(x.company,0) , '+'), nvl(y.individual,0)) "scope"
		FROM
		(SELECT ctd.team_id,
		(select to_char(CLIENT_INT_DUEDATE1, 'dd-mm-YY') || ':' || to_char(CLIENT_INT_DUEDATE2, 'dd-mm-YY')|| ':'||to_char(FINAL_DUE_DATE, 'dd-mm-YY')  from cms_clientcase where crn=ctd.crn) as dueDates,
		(select to_char(RSRCH_INT_DUEDATE1, 'dd-mm-YY') || ':' || to_char(RSRCH_INT_DUEDATE2, 'dd-mm-YY')|| ':'||to_char(RSRCH_FINAL_DUE_DATE, 'dd-mm-YY')  from cms_clientcase where crn=ctd.crn) as ResearchDueDates,
		(select REQ_RECD_DT from cms_clientcase where crn=ctd.crn) as reqRecDate,
	   
		ctd.crn,
		ctd.team_type_id,
		ctt.team_type,
		ctd.office_id,
		ctd.manager_id,
		ctd.main_analyst,
		ctd.UPDATED_BY TEAM_UPDATED_BY,
                ctd.analysts performers,
		to_char(ctd.rev_intduedate1, 'dd-mm-YY')
		rev_intduedate1,
		to_char(ctd.rev_intduedate2, 'dd-mm-YY')
		rev_intduedate2,
		to_char(ctd.rev_finduedate, 'dd-mm-YY')
		rev_finduedate,
	    (select to_char(rev_intduedate1, 'dd-mm-YY') ||':'||to_char(rev_intduedate2, 'dd-mm-YY') ||':'||to_char(rev_finduedate, 'dd-mm-YY') from   cms_team_details  where team_type_id = 1 and crn = ctd.crn  )as primaryTeamDueDates   ,
		ctd.bypass_interim,
		ctd.research_head,
		ctd.REVIEWER1,
		ctd.REVIEWER2,
		ctd.REVIEWER3,
		ctd.REV_OTHER_OFF1,
		ctd.REV_OTHER_OFF2,
		ctd.REV_OTHER_OFF3,
		rev1.user_full_name rev1FullName,
		rev2.user_full_name rev2FullName,
		rev3.user_full_name rev3FullName
		FROM
		cms_team_details ctd,cms_user_master rev1,cms_user_master
		rev2,cms_user_master rev3,
		cms_team_type ctt
		WHERE ctd.team_id in
		<iterate property="teamIds" open="(" close=")" conjunction=",">
			#teamIds[]#
     </iterate>

		AND ctd.team_type_id = ctt.TEAM_TYPE_ID
		AND rev1.LOGIN_ID(+) =
		ctd.REVIEWER1
		AND rev2.LOGIN_ID(+) = ctd.REVIEWER2
		AND rev3.LOGIN_ID(+)
		= ctd.REVIEWER3
		ORDER BY ctd.team_type_id,
		ctd.team_id)
		a LEFT JOIN
		(SELECT cstrm.crn,
		cstrm.subject_id,
		cstrm.team_id,
		cstrm.re_id,
		 cstrm.jlpoints,
		cstrm.performer,
		rev1.user_full_name,
		cstrm.UPDATED_BY RE_UPDATED_BY,
		crm.name
		FROM cms_sub_team_re_map
		cstrm,cms_user_master rev1,CMS_RE_MASTER crm
		WHERE cstrm.re_id =
		crm.re_master_id
		AND rev1.LOGIN_ID(+) = cstrm.performer)
		d ON a.team_id
		= d.team_id LEFT JOIN
		(SELECT office_master_id,
		office
		FROM
		cms_office_master)
		b ON a.office_id = b.office_master_id LEFT JOIN
		(SELECT login_id,
		user_full_name
		FROM cms_user_master)
		c ON a.manager_id
		= c.login_id LEFT JOIN
		(SELECT 
		csm.SUBJECT_NAME primarySubName ,CCM.COUNTRY primarySubCountry,
		crn
		FROM cms_subject csm,cms_country_master ccm
		WHERE csm.IS_PRIMARY_SUB
		= 1
		and csm.COUNTRY_ID = ccm.COUNTRY_MASTER_ID)
		e ON a.crn = e.crn LEFT
		JOIN
		(SELECT sum(JLPOINTS) jlpTeamPoints,team_id
		FROM
		cms_sub_team_re_map cstrm
		group by team_id)
		f ON a.team_id = f.team_id
		 LEFT
		JOIN
		(SELECT count(*) company,crn
		FROM
		cms_subject cs, cms_entitytype_master cem
    where cs.entity_type_id = cem.entity_type_id
    and upper(cem.entity_name) = 'COMPANY'
		group by crn)
		x ON a.crn = x.crn  LEFT
		JOIN
		(SELECT count(*) individual,crn
		FROM
		cms_subject cs , cms_entitytype_master cem
    where cs.entity_type_id = cem.entity_type_id
    and upper(cem.entity_name) = 'INDIVIDUAL'
		group by crn)
		y ON a.crn = y.crn
		order by a.crn
	</select>



	<update id="updateTeamDetails" parameterClass="com.worldcheck.atlas.vo.TeamDetails">
		update
		CMS_TEAM_DETAILS set
		MANAGER_ID = #managerName#,
		UPDATED_ON = SYSDATE,
		UPDATED_BY =#updatedBy# ,
		MAIN_ANALYST = #mainAnalyst#,
		REVIEWER1 = #reviewer1#,
		REVIEWER2 = #reviewer2#,
		REVIEWER3 = #reviewer3#,
		REV_OTHER_OFF1 = #otherOffice1#,
		REV_OTHER_OFF2 =#otherOffice2#,
		REV_OTHER_OFF3 =#otherOffice3#,
		analysts =#csvAnalysts#,
		REV_INTDUEDATE1= decode(#dueDate1#,'',null,to_date(#dueDate1#,'dd-MM-YY')),
		REV_INTDUEDATE2= decode(#dueDate2#,'',null,to_date(#dueDate2#,'dd-MM-YY')), 
		REV_FINDUEDATE=to_date(#finalDueDate#,'dd-MM-YY')
		where TEAM_ID = #teamId#
   </update>

	<update id="updateSubTeamDetails" parameterClass="com.worldcheck.atlas.vo.SubTeamReMapVO">
		update
		CMS_SUB_TEAM_RE_MAP set
		PERFORMER = #performer#,
		UPDATED_BY =
		#updatedBy#,
		UPDATED_ON = SYSDATE
		where TEAM_ID = #teamId#
		AND SUBJECT_ID
		= #subjectId#
		AND RE_ID = #reId#
   </update>

	<insert id="addSubTeamDetails" parameterClass="com.worldcheck.atlas.vo.SubTeamReMapVO">
		<selectKey resultClass="int" type="pre" keyProperty="subTeamReMapId">
			SELECT
			CMS_SUBTEAMREMAP_SEQ.nextval AS VALUE FROM DUAL
		</selectKey>
		INSERT INTO CMS_SUB_TEAM_RE_MAP(MAP_ID,CRN,TEAM_ID,SUBJECT_ID, RE_ID,
		JLPOINTS,UPDATED_BY,UPDATED_ON,PERFORMER)
		values
		(#subTeamReMapId#,#crn#,#teamId#,#subjectId#,
		#reId#,#jlpPoints#,#updatedBy#,SYSDATE,#performer#)
	</insert>

	<delete id="deleteSubTeamDetails" parameterClass="java.lang.Integer">

		DELETE FROM
		CMS_SUB_TEAM_RE_MAP WHERE TEAM_ID = #teamId#

	</delete>

	<delete id="deleteAnalystTeamDetails" parameterClass="com.worldcheck.atlas.vo.TeamDetails">
		DELETE FROM
		CMS_SUB_TEAM_RE_MAP WHERE
		TEAM_ID = #teamId#
		AND performer
		not in
		<iterate property="analyst" open="(" close=")" conjunction=",">
			#analyst[]#
     </iterate>

	</delete>


	<delete id="deleteSubjectREMappingForAnalyst" parameterClass="java.util.HashMap">
		DELETE FROM CMS_SUB_TEAM_RE_MAP
		WHERE CRN = #crn# and TEAM_ID =
		#teamId# and SUBJECT_ID = #subjectId# and
		PERFORMER = #performer#
		and
		RE_ID not in
		<iterate property="reIds" open="(" close=")" conjunction=",">
			#reIds[]#
      	 </iterate>
	</delete>

	<delete id="deleteSubjectMappingForAnalyst" parameterClass="java.util.HashMap">
		DELETE FROM CMS_SUB_TEAM_RE_MAP
		WHERE CRN = #crn# and TEAM_ID =
		#teamId# and PERFORMER = #performer# and
		SUBJECT_ID not in
		<iterate property="subjectIds" open="(" close=")" conjunction=",">
			#subjectIds[]#
     </iterate>
	</delete>

	<select id="getAssignedUserDetails" resultClass="com.worldcheck.atlas.vo.SubTeamReMapVO"
		parameterClass="com.worldcheck.atlas.vo.SubTeamReMapVO">
		SELECT distinct(CSTRM.PERFORMER) performer
		FROM
		CMS_SUB_TEAM_RE_MAP CSTRM,
		CMS_TEAM_DETAILS CTD,
		CMS_TEAM_TYPE CTT
		WHERE
		CSTRM.TEAM_ID = CTD.TEAM_ID
		AND CTD.TEAM_TYPE_ID =
		CTT.TEAM_TYPE_ID
		AND
		CSTRM.PERFORMER IS NOT NULL
		AND CTT.TEAM_TYPE NOT IN('Supporting - BI',
		'Supporting - Vendor')
		AND CTD.CRN = #crn#
		AND cstrm.TEAM_ID != #teamId#
	</select>

	<select id="getAssignedTeamsForUserAndCrn" resultClass="java.lang.String"
		parameterClass="java.util.HashMap">
		select concatenate_list(CURSOR(select ctt.TEAM_TYPE
		from cms_team_details ctd,cms_sub_team_re_map cstrm,CMS_TEAM_TYPE ctt
		where cstrm.TEAM_ID = ctd.TEAM_ID
		and ctd.TEAM_TYPE_ID =
		ctt.TEAM_TYPE_ID
		and ctd.CRN = #crn#
		and (ctd.MANAGER_ID = #userId#
		or
		ctd.REVIEWER1 = #userId#
		or ctd.REVIEWER2 = #userId#
		or ctd.REVIEWER3 =
		#userId#
		or cstrm.PERFORMER = #userId#)
		group by
		ctd.TEAM_ID,ctt.TEAM_TYPE)) teamList from dual
</select>


	<select id="getTeamType" resultClass="java.lang.String"
		parameterClass="java.lang.String">
		SELECT TEAM_TYPE
		FROM CMS_TEAM_DETAILS CTD,CMS_TEAM_TYPE
		CTT
		WHERE CTD.TEAM_TYPE_ID = CTT.TEAM_TYPE_ID
		AND CTD.TEAM_ID = #teamId#
	</select>

	<select id="getUserRoleForTeam" resultClass="java.lang.String"
		parameterClass="java.util.HashMap">
		SELECT * FROM (SELECT
		CASE WHEN MANAGER_ID = #userId#
		THEN 'MANAGER'
		ELSE 'NOT FOUND'
		END AS COLUMNNAME
		FROM CMS_TEAM_DETAILS
		WHERE TEAM_ID = #teamId#
		UNION
		SELECT
		CASE WHEN REVIEWER1 = #userId# THEN
		'REVIEWER'
		WHEN REVIEWER2 = #userId# THEN 'REVIEWER'
		WHEN REVIEWER3 =
		#userId# THEN 'REVIEWER'
		ELSE 'NOT FOUND'
		END AS COLUMNNAME
		FROM
		CMS_TEAM_DETAILS
		WHERE TEAM_ID = #teamId#
		UNION
		SELECT
		CASE WHEN PERFORMER
		= #userId# THEN 'ANALYST'
		ELSE 'NOT FOUND'
		END AS COLUMNNAME
		FROM
		CMS_SUB_TEAM_RE_MAP
		WHERE TEAM_ID = #teamId#)
		WHERE UPPER(COLUMNNAME)
		NOT LIKE UPPER('%NOT FOUND%')
</select>

	<select id="getUserReForTeam" resultClass="com.worldcheck.atlas.vo.SubTeamReMapVO"
		parameterClass="java.util.HashMap">
		SELECT CSTRM.CRN crn,
		CSTRM.TEAM_ID teamId,
		CSTRM.SUBJECT_ID subjectId,
		CSTRM.RE_ID reId,
		SUB.SUBJECT_NAME subject,
		CSTRM.JLPOINTS jlpPoints,
		CRM."NAME" "reName",
		CSTRM.PERFORMER performer
		FROM
		CMS_SUB_TEAM_RE_MAP
		CSTRM,
		CMS_SUBJECT SUB,
		CMS_RE_MASTER
		CRM,
		CMS_USER_MASTER CUM
		WHERE
		CSTRM.CRN = SUB.CRN
		AND
		CSTRM.SUBJECT_ID =
		SUB.SUBJECT_ID
		AND CSTRM.RE_ID
		= CRM.RE_MASTER_ID
		AND CUM.LOGIN_ID(+) =
		CSTRM.PERFORMER
		AND
		CSTRM.TEAM_ID in
		<iterate property="teamIds" open="(" close=")" conjunction=",">
			#teamIds[]#
     	</iterate>
		AND CSTRM.PERFORMER = #userId#
		ORDER BY
		CSTRM.TEAM_ID,CSTRM.SUBJECT_ID,CSTRM.RE_ID
	</select>

	<select id="getTeamNamesForCRN" resultClass="com.worldcheck.atlas.vo.TeamDetails"
		parameterClass="java.lang.String">
		SELECT decode(team_type,   'Supporting - Internal',   CONCAT(CONCAT('Supporting 
		',   rownum -1),   ' (Internal)'),   'Supporting - BI',   CONCAT(CONCAT('Supporting ',   rownum -1),   ' (BI)'),   'Supporting - Vendor',   CONCAT(CONCAT('Supporting ',   rownum -1),   ' (Vendor)'),   team_type) teamname,
  team_id teamid
FROM
  (SELECT ctt.team_type,
     ctd.team_id
   FROM cms_team_details ctd,
     cms_team_type ctt
   WHERE ctd.team_type_id = ctt.team_type_id
		AND CRN = #crn#
		ORDER BY ctd.team_type_id, ctd.team_id)
	</select>


	<select id="getPrimaryTeamId" resultClass="java.lang.Integer"
		parameterClass="java.lang.String">
		SELECT TEAM_ID
		FROM CMS_TEAM_DETAILS CTD,
  			 CMS_TEAM_TYPE CTT
		WHERE CTD.TEAM_TYPE_ID = CTT.TEAM_TYPE_ID
 			  AND CTT.TEAM_TYPE = 'Primary'
 			  AND CRN = #crn#
	</select>

	<select id="getMyIncomingTaskRole" resultClass="com.worldcheck.atlas.vo.TeamDetails" parameterClass="java.lang.String">
	select b.crn crn ,c.roletype roletype,concat(concat(b.team_type,'##'),b.team_id) teamName from ((SELECT ctd.crn,ctd.team_id,ctt.team_type
FROM cms_team_details ctd,cms_team_type ctt,cms_case_status_master ccsm,cms_clientcase ccc
where ctd.team_type_id = ctt.TEAM_TYPE_ID
and ccc.crn = ctd.crn
and ccc.case_status_id = ccsm.CASE_STATUS_ID
and ccsm.DESCRIPTION = 'In Progress') b join 
(select * from (SELECT crn,team_id,
     CASE
   WHEN reviewer1 = #userId# THEN
    'REVIEWER'
   WHEN reviewer2 = #userId# THEN
    'REVIEWER'
   WHEN reviewer3 = #userId# THEN
    'REVIEWER'
  END AS
   roletype
   FROM cms_team_details
  UNION
   SELECT crn,team_id,
     CASE
   WHEN performer = #userId# THEN
    'ANALYST'
  END AS
   roletype
   FROM cms_sub_team_re_map
  ) where roletype is not null) c 
  on b.team_id = c.team_id)
  </select>

  
  <delete id="deleteTeamDetails" parameterClass="java.util.List">

		DELETE FROM CMS_TEAM_DETAILS WHERE TEAM_ID IN <iterate open="(" close=")" conjunction=",">
      			#teamIdList[].teamId#
    	</iterate>

	</delete>
	
	
	<select id="getAnalystForTeam" parameterClass="java.lang.String"
		resultClass="com.worldcheck.atlas.vo.SubTeamReMapVO">
		select cum.login_id performer,cum.user_full_name performerFullName 
		from
(SELECT r,SUBSTR(',' || csv || ',',   instr(',' || csv || ',',   ',',   1,   r) + 1,   instr(',' || csv || ',',   ',',   1,   r + 1) -instr(',' || csv || ',',   ',',   1,   r) -1) analysts
		FROM
		  (SELECT ctd.analysts csv
		   FROM cms_team_details ctd
		   WHERE ctd.team_id = #teamId#),
		    (SELECT rownum r
		   FROM dual CONNECT BY LEVEL <![CDATA[ <= ]]> 30)
		WHERE instr(csv || ',',   ',',   1,   r) > 0) b,cms_user_master cum
		where b.analysts = cum.login_id
		 order by r
	</select>
	
	<select id="getCSVAnalystsForTeam" parameterClass="java.lang.Integer"
		resultClass="java.lang.String">
		select analysts from cms_team_details
		where team_id = #teamId#
	</select>
	
	<update id="updateCSVAnalysts" parameterClass="com.worldcheck.atlas.vo.TeamDetails">
		UPDATE cms_team_details 
		SET analysts = #csvAnalysts#,
		<isNotNull  property="mainAnalyst">
			<isNotEmpty property="mainAnalyst">
				MAIN_ANALYST  = #mainAnalyst#,
			</isNotEmpty>
		</isNotNull>
		UPDATED_BY = #updatedBy#,
		UPDATED_ON = SYSDATE
		where team_id = #teamId#
	</update>
	
	<select id="getTeamManager" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		select MANAGER_ID from cms_team_details
		where team_id = #teamId#
	</select>
	
	<select id="getTeamDetailsForAnalyist" resultClass="com.worldcheck.atlas.vo.TeamDetails"
			parameterClass="java.lang.String">
		select ccc.case_mgr_id managerName, ctd.reviewer1, ctd.reviewer2, ctd.reviewer3
	from CMS_CLIENTCASE ccc,cms_team_details ctd 
	where ctd.crn in ( 
	  select DISTINCT(ctd.crn) from CMS_SUB_TEAM_RE_MAP cstrm,cms_team_details ctd 
	  where cstrm.crn = ctd.crn and cstrm.team_id = ctd.team_id 
	  and ctd.team_type_id in (1,2) and performer=#analyst#)
	and ccc.crn=ctd.crn and ccc.case_status_id in (1,2,3) 
	</select>

	<update id="updatePerformerReJlp" parameterClass="com.worldcheck.atlas.vo.SubTeamReMapVO">
			UPDATE CMS_SUB_TEAM_RE_MAP 
			  SET JLPOINTS = #jlpPoints#,
			  UPDATED_BY = #updatedBy#,
			  UPDATED_ON = SYSDATE
			  WHERE TEAM_ID =#teamId# 
			  and CRN = #crn# 
			  and PERFORMER = #performer#
			  and SUBJECT_ID = #subjectId# 
			  and RE_ID = #reId#
	   </update>

<resultMap id="caseStatusResultMap" class="java.util.HashMap">   
	<result property="key" column="TEAM_ID"/> 
	 <result property="value" column="DESCRIPTION"/>
</resultMap>
<select id="getCaseStatusResultMap" resultMap="caseStatusResultMap" parameterClass="java.util.List" remapResults="true">
		 SELECT to_char(CTD.TEAM_ID) team_id , CCSM.DESCRIPTION
			FROM CMS_CLIENTCASE CC , CMS_TEAM_DETAILS CTD,CMS_CASE_STATUS_MASTER CCSM
			WHERE CC.CRN = CTD.CRN
			AND CC.CASE_STATUS_ID = CCSM.CASE_STATUS_ID
			AND CTD.TEAM_ID IN
			<iterate open="(" close=")" conjunction=",">
				#teamId[]#
			</iterate>	
</select> 

<select id="getBulkAssignedAnalyst" parameterClass="java.util.List" resultClass="com.worldcheck.atlas.vo.TeamDetails">
	SELECT ANALYSTS,CRN,TEAM_ID teamId
	FROM CMS_TEAM_DETAILS
	WHERE CRN IN (
			SELECT DISTINCT(CRN) FROM CMS_TEAM_DETAILS WHERE TEAM_ID IN
				<iterate open="(" close=")" conjunction=",">
					#teamId[]#
				</iterate>
	)
	AND TEAM_TYPE_ID IN (1,2)
	AND ANALYSTS IS NOT NULL
	ORDER BY TEAM_ID 
</select>	


<select id="getLegacyCaseTeamDetails" resultClass="com.worldcheck.atlas.vo.TeamDetails"
		parameterClass="java.lang.String">
		select a.*, decode(teamtype,   'bi',   CONCAT('Supporting ',   rownum -1),   'vendor0',  
  CONCAT('Supporting ',   rownum -1),   'vendor1',   CONCAT('Supporting ',   rownum -1),   'primary','Primary',CONCAT('Supporting ',   rownum -1)) teamname
  from (SELECT ca.crn,
  teamid,
  decode(teamtype,   'primary',   '1',   'bi',   '3',   'vendor0',   '4',   'vendor1',   '4',   '2') AS
teamTypeId,
  teamtype,
  decode(teamtype,   'primary',   com.office,   'bi',   NULL,   'vendor0',   NULL,   'vendor1',   NULL,   com.office) officeName,
   to_char(intduedate1, 'dd-mm-YY') dueDate1,
   to_char(intduedate2, 'dd-mm-YY') dueDate2, 
   to_char(finduedate, 'dd-mm-YY') finalDueDate,
   MAX(
CASE
WHEN assignmenttype = 'REVIEWER1' THEN  decode(cum.USER_FULL_NAME,null,assignee,cum.USER_FULL_NAME)
END) rev1FullName,
  MAX(
CASE
WHEN assignmenttype = 'REVIEWER2' THEN  decode(cum.USER_FULL_NAME,null,assignee,cum.USER_FULL_NAME)
END) rev2FullName,
  MAX(
CASE
WHEN assignmenttype = 'REVIEWER3' THEN  decode(cum.USER_FULL_NAME,null,assignee,cum.USER_FULL_NAME)
END) rev3FullName,
  MAX(
CASE
WHEN assignmenttype = 'CASEMANAGER' THEN  decode(cum.USER_FULL_NAME,null,assignee,cum.USER_FULL_NAME)
WHEN assignmenttype = 'VENDORMANAGER' THEN  decode(cum.USER_FULL_NAME,null,assignee,cum.USER_FULL_NAME)
WHEN assignmenttype LIKE '%BI%' THEN  decode(cum.USER_FULL_NAME,null,assignee,cum.USER_FULL_NAME)
END) managerFullName,
  MAX(
CASE
WHEN assignmenttype = 'PRIMARYANALYST' THEN  decode(cum.USER_FULL_NAME,null,assignee,cum.USER_FULL_NAME)
END) analysts
FROM caseassignment @LEGACY ca,
  caseteam @LEGACY ct,
  cms_office_master com,
  cms_user_master cum
WHERE ca.crn = #crn#
 AND assignmenttype NOT IN('ANALYST')
 AND ca.crn = ct.crn
 AND ca.teamid = ct.id
 AND com.office_master_id = ct.officeid
 AND ca.assignee = cum.login_id(+)
GROUP BY ca.crn,
  intduedate1,
  intduedate2,
  finduedate,
  teamtype,
  office,
  teamid
ORDER BY teamTypeId) a


</select>

<select id="getLegacyCaseTeamSubReDetails" resultClass="com.worldcheck.atlas.vo.TeamDetails"
		parameterClass="com.worldcheck.atlas.vo.TeamDetails">
		select a.*,e.primarySubName,e.primarySubCountry,f.jlpteampoints teamJlpPoints,
  concat(concat(nvl(x.company,0) , '+'), nvl(y.individual,0)) "scope" from (SELECT ca.crn,
  to_char(intduedate1,   'dd-mm-YY') duedate1,
  to_char(intduedate2,   'dd-mm-YY') duedate2,
  to_char(finduedate,   'dd-mm-YY') finalduedate,
  teamid,
  teamtype,
 MAX(
CASE
WHEN assignmenttype = 'REVIEWER1' THEN decode(cum.user_full_name,   NULL,   assignee,   cum.user_full_name)
END) reviewer1,
  MAX(
CASE
WHEN assignmenttype = 'REVIEWER2' THEN decode(cum.user_full_name,   NULL,   assignee,   cum.user_full_name)
END) reviewer2,
  MAX(
CASE
WHEN assignmenttype = 'REVIEWER3' THEN decode(cum.user_full_name,   NULL,   assignee,   cum.user_full_name)
END) reviewer3,
  MAX(
CASE
WHEN assignmenttype = 'CASEMANAGER' THEN decode(cum.user_full_name,   NULL,   assignee,   cum.user_full_name)
WHEN assignmenttype = 'VENDORMANAGER' THEN decode(cum.user_full_name,   NULL,   assignee,   cum.user_full_name)
WHEN assignmenttype LIKE '%BI%' THEN decode(cum.user_full_name,   NULL,   assignee,   cum.user_full_name)
END) manager,
  MAX(
CASE
WHEN assignmenttype = 'PRIMARYANALYST' THEN decode(cum.user_full_name,   NULL,   assignee,   cum.user_full_name)
END) analysts
FROM caseassignment @LEGACY ca,
  caseteam @LEGACY ct,
  cms_user_master cum
WHERE ca.crn = #crn#
and upper(teamtype) = upper(#teamType#)
and teamid=#teamId#
 AND assignmenttype NOT IN('ANALYST')
 AND ca.crn = ct.crn
 AND ca.teamid = ct.id
AND ca.assignee = cum.login_id(+)
GROUP BY ca.crn,
  intduedate1,
  intduedate2,
  finduedate,
  teamtype,
  teamid) a LEFT
		JOIN
		(SELECT csm.SUBJECTNAME primarySubName , CCM.COUNTRY primarySubCountry, crn
		FROM subject_mv
		csm,cms_country_master ccm
		WHERE csm.ISPRIMARYSUB = 1
		and
		csm.COUNTRYID = ccm.CODE)
		e ON a.crn = e.crn LEFT JOIN
		 (SELECT sum(POINTS) jlpTeamPoints,teamid,teamtype,crn
		FROM caseassignment@legacy ca,remaster@legacy rem
                where ca.reid = rem.id
		group by teamid,teamtype,crn) f ON a.teamid = f.teamid and a.teamtype = f.teamtype and a.crn = f.crn
		LEFT JOIN
		(SELECT count(*) company,crn
		FROM
		subject_mv cs, cms_entitytype_master cem
    where cs.ENTITYTYPECODE = cem.entity_type_id
    and upper(cem.entity_name) = 'COMPANY'
		group by crn)
		x ON a.crn = x.crn  LEFT
		JOIN
		(SELECT count(*) individual,crn
		FROM
		subject_mv cs, cms_entitytype_master cem
    where cs.ENTITYTYPECODE = cem.entity_type_id
    and upper(cem.entity_name) = 'INDIVIDUAL'
		group by crn)
		y ON a.crn = y.crn
	</select>


	<!--Added by Juheen,For CR-L10,TeamAssignment Task-->
		<select id="isHoliday" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		 select count(*) from cms_holiday_master where
		 dated_on = to_date(#holidayDate#) and office_id = #officeId#
	    </select>
		
		
	<!--Added by Juheen,For CR-L10,Bulk TeamAssignment  -->
		
		<select id="isHolidayCheckForTeams" parameterClass="java.util.HashMap"	resultClass="java.lang.Integer">
		
		 select count(*) from cms_holiday_master 
		 where dated_on = to_date(#rFinal#,'dd-mm-yy') 
		 
		  <isNotEmpty property="rInterim1" prepend="or">
		    dated_on = to_date(#rInterim1#,'dd-mm-yy') 
		 </isNotEmpty>
		 
		  <isNotEmpty property="rInterim2" prepend="or">
		    dated_on = to_date(#rInterim2#, 'dd-mm-yy')
		  </isNotEmpty>
		  
		 and office_id = #officeId#
		 
	    </select>
	

<!--Added by Juheen,For CR-L10,update research due dates Bulk TeamAssignment  
<update id="updateResearchDueDates" parameterClass="com.worldcheck.atlas.vo.CaseDetails" >
UPDATE
		CMS_CLIENTCASE set
<isNotNull  property="rInterim1">
	<isNotEmpty property="rInterim1">
		RSRCH_INT_DUEDATE1  = #rInterim1#,
	</isNotEmpty>
</isNotNull>
<isNotNull  property="rInterim2">
	<isNotEmpty property="rInterim2">
		RSRCH_INT_DUEDATE2  = #rInterim2#,
	</isNotEmpty>
</isNotNull>
<isNotNull  property="finalRDueDate">
	<isNotEmpty property="finalRDueDate">
		RSRCH_FINAL_DUE_DATE  = #finalRDueDate#,
	</isNotEmpty>
</isNotNull>
UPDATED_BY = #updatedBy#,
		UPDATED_ON = SYSDATE
		where CRN=#crn#
</update>
	-->	

</sqlMap>
