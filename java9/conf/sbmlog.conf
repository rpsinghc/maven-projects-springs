# $Id: sbmlog.conf 61806 2011-01-28 09:35:42Z sgujare $ $Name$
#
# Created by Nick Kanakakorn Mon Apr 23 15:26:07 PDT 2001
# Maintained and extended by Anand Krishniyer
#
# For more information look at javadoc of
#org.apache.log4j.PropertyConfigurator
#org.apache.log4j.PatternLayout

########################
# Appender definitions #
########################

########################
# JDBCAppender
########################
# <param name="log4j.appender.JDBCAppender">
#    <visible>false</visible>
#    <alias>JDBC appender definition.</alias>
#    <description>Defines the JDBC appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
#log4j.appender.JDBCAppender=com.savvion.common.logging.JDBCAppender

# <param name="log4j.appender.JDBCAppender.layout.ConversionPattern">
#    <alias>JDBC Log Message Format</alias>
#    <description>The format of the JDBC log messages will be according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>APNDRINFO</group>
# </param>
#log4j.appender.JDBCAppender.layout.ConversionPattern=%m

########################
# Mail Appender
########################
# <param name="log4j.appender.mail">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The mail log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
#log4j.appender.mail=org.apache.log4j.net.SMTPAppender

# <param name="log4j.appender.mail.To">
#    <visible>false</visible>
#    <alias>Defaut value of the email recipient</alias>
#    <description>The defaut value of the email recipient.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
#log4j.appender.mail.To=admin@savvion.com

# <param name="log4j.appender.mail.From">
#    <visible>false</visible>
#    <alias>Defaut value of the email sender</alias>
#    <description>The defaut value of the email sender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
#log4j.appender.mail.From=sbmlogger@savvion.com

# <param name="log4j.appender.mail.SMTPHost">
#    <visible>false</visible>
#    <alias>Mail host</alias>
#    <description>The complete machine name of the Mail host.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
#log4j.appender.mail.SMTPHost=mail.savvion.com

# <param name="log4j.appender.mail.Subject">
#    <visible>false</visible>
#    <alias>Defaut value of the email subjet</alias>
#    <description>The defaut value of the email subjet.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
#log4j.appender.mail.Subject=SBM Error message

# <param name="log4j.appender.mail.LocationInfo">
#    <visible>false</visible>
#    <alias>Event Location Info</alias>
#    <description>Specifies whether to extract the location information related to the event.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
#log4j.appender.mail.LocationInfo=false

# <param name="log4j.appender.mail.Threshold">
#    <visible>false</visible>
#    <alias>Mail Threshold</alias>
#    <description>The Mail threshold value.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
#log4j.appender.mail.Threshold=ERROR

# <param name="log4j.appender.mail.layout">
#    <visible>false</visible>
#    <alias>mail Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
#log4j.appender.mail.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.mail.layout.ConversionPattern">
#    <visible>false</visible>
#    <alias>Mail Log Message Format</alias>
#    <description>Format messages in the Management log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
#log4j.appender.mail.layout.ConversionPattern=%p - %m%n

########################
# stdout Appender 
########################
# <param name="log4j.additivity.stdout">
#    <visible>false</visible>
#    <alias>Additivity for stdout log file</alias>
#    <description>if true log statements from parents will be appended to the stdout log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
#log4j.additivity.stdout=false

# <param name="log4j.appender.stdout">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The stdout log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender

# <param name="log4j.appender.stdout.layout">
#    <visible>false</visible>
#    <alias>stdout Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.stdout.layout.ConversionPattern">
#    <alias>Standard Out Log Message Format</alias>
#    <description>Format messages in the Standard Out console according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BL4LEVELINFO</group>
# </param>
#log4j.appender.stdout.layout.ConversionPattern=%5p - %m%n

##########################################################################
#   Root category definition

# This is good for production environment
# Set the priority to be info, so any log below info level won't be printed out
# This is good for debugging environment
# Set the priority to be debug, so any log will be printed out
# Define the root category.
# Set the priority at DEBUG level, and then add the names of appender.

# <param name="log4j.rootCategory">
#    <alias>SBM Log Level</alias>
#    <description>The log level for messages written to the default SBM log file.</description>
#    <legalvalues>fatal,SBM|error,SBM|warn,SBM|info,SBM|debug,SBM</legalvalues>
#    <group>RLLEVELINFO</group>
# </param>
log4j.rootCategory=info,SBM

#
# Appender definition
#
# SBM is general log appender for root, and sbm Category

# <param name="log4j.appender.SBM">
#    <visible>false</visible>
#    <alias>Default type of appender for SBM components</alias>
#    <description>All SBM loggers inherit this appender if no appender is defined.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.SBM=org.apache.log4j.RollingFileAppender
log4j.appender.SBM.Encoding=UTF-8

# Here we show various way to log
# 1. relative path
# Create log files into logs directory under current directory
# This could be under servlet container logs or sbm home depends on how
# SBM get started

# <param name="log4j.appender.SBM.File">
#    <visible>false</visible>
#    <alias>SBM Log File Name</alias>
#    <description>File name for the SBM log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.appender.SBM.File=${sbm.home}/logs/sbm.log

# 2. absolute path
#log4j.appender.SBM.File=/opt/sbmlogs/sbm.log

# 3. Using property
# If EBMS property is defined in java -Dsbm.home=/opt/sbm, this would be useful too
# We can do this in startSBM and also servlet initialization parameter
#log4j.appender.SBM.File=${sbm.home}logs/sbm.log

# 4. standard output
#log4j.appender.SBM.File=System.out

# 5. Using syslog
#log4j.appender.SBM=org.apache.log4j.net.SyslogAppender

# The syslog daemon resides on www.yourhost.net
#log4j.appender.SBM.SyslogHost=www.yourhost.net

# <param name="log4j.appender.SBM.MaxFileSize">
#    <alias>SBM Log Maximum File Size</alias>
#    <description>The Maximum size for the SBM log file. MB or KB should be capitalized.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>RLLEVELINFO</group>
# </param>
log4j.appender.SBM.MaxFileSize=6MB

# Keep 3 backup files
# <param name="log4j.appender.SBM.MaxBackupIndex">
#    <alias>SBM Log Maximum Number of Backups</alias>
#    <description>The maximum number of backup archive files used for the sbm log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>RLLEVELINFO</group>
# </param>
log4j.appender.SBM.MaxBackupIndex=3

#
# Layout definition
#

# <param name="log4j.appender.SBM.layout">
#    <visible>false</visible>
#    <alias>Layout type for SBM log file</alias>
#    <description>Messages logged to the SBM log file will use the associated message pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.SBM.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.SBM.layout.ConversionPattern">
#    <alias>SBM Log Message Format</alias>
#    <description>Format messages in the SBM log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>RLLEVELINFO</group>
# </param>
log4j.appender.SBM.layout.ConversionPattern=%d{DATE} %c{3} %p - %m%n

#%M.%L (method, line number) is good for debugging but very slow
#%t thread number is good for debugging
#log4j.appender.SBM.layout.ConversionPattern=%d{DATE} %c{3} %p %M.%L- %m%n

##########################################################################
#   BPM Portal category definition
#
# The BPM Portal category inherits its priority from root. However, it's output
# will go to Portal.File appender defined above. It's additivity is non-cumulative.
# The priority level can be set individually as below

# <param name="log4j.category.Portal">
#    <alias>Portal Log Level</alias>
#    <description>The log level for messages written to the Portal log file.</description>
#    <legalvalues>fatal,Portal.File|error,Portal.File|warn,Portal.File|info,Portal.File|debug,Portal.File</legalvalues>
#    <group>PORTALLEVELINFO</group>
# </param>
log4j.category.Portal=info,Portal.File

# <param name="log4j.additivity.Portal">
#    <visible>false</visible>
#    <alias>Additivity for BPM Portal log file</alias>
#    <description>if true log statements from parents will be appended to the Portal log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.Portal=false

#
# Appender definition
#
# Portal.File is set to be a FileAppender for BPM Portal

# <param name="log4j.appender.Portal.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The BPM Portal log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.Portal.File=org.apache.log4j.RollingFileAppender
log4j.appender.Portal.File.Encoding=UTF-8

# <param name="log4j.appender.Portal.File.MaxFileSize">
#    <alias>BPM Portal Maximum File Size</alias>
#    <description>Maximum size for the BPM Portal log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>PORTALLEVELINFO</group>
# </param>
log4j.appender.Portal.File.MaxFileSize=6MB

# <param name="log4j.appender.Portal.File.MaxBackupIndex">
#    <alias>BPM Portal Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the BPM Portal log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>PORTALLEVELINFO</group>
# </param>
log4j.appender.Portal.File.MaxBackupIndex=3

# <param name="log4j.appender.Portal.File.File">
#    <visible>false</visible>
#    <alias>BPM Portal Log File Name</alias>
#    <description>The BPM Portal log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.Portal.File.File=${sbm.home}/logs/bpmportal.log

#
# Layout definition
#

# <param name="log4j.appender.Portal.File.layout">
#    <visible>false</visible>
#    <alias>BPM Portal Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.Portal.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.Portal.File.layout.ConversionPattern">
#    <alias>BPM Portal Log Message Format</alias>
#    <description>Format messages in the BPM Portal log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>PORTALLEVELINFO</group>
# </param>
log4j.appender.Portal.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

##########################################################################
#   BizPulse category definition
#
# The BizPulse category inherits its priority from root. However, it's output
# will go to BizPulse.File apender defined above. It's additivity is non-cumulative.
# The priority level can be set individually as below

# <param name="log4j.category.BizPulse">
#    <alias>BizPulse Log Level</alias>
#    <description>The log level for messages written to the BizPulse log file.</description>
#    <legalvalues>fatal,BizPulse.File|error,BizPulse.File|warn,BizPulse.File|info,BizPulse.File|debug,BizPulse.File</legalvalues>
#    <group>BPLEVELINFO</group>
# </param>
log4j.category.BizPulse=info,BizPulse.File

# <param name="log4j.additivity.BizPulse">
#    <visible>false</visible>
#    <alias>Additivity for BizPulse log file</alias>
#    <description>if true log statements from parents will be appended to the BizPulse log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.BizPulse=false

#
# Appender definition
#
# BizPulse.File is set to be a FileAppender for BizPulse

# <param name="log4j.appender.BizPulse.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The BizPulse log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizPulse.File=org.apache.log4j.RollingFileAppender
log4j.appender.BizPulse.File.Encoding=UTF-8

# <param name="log4j.appender.BizPulse.File.MaxFileSize">
#    <alias>BizPulse Maximum File Size</alias>
#    <description>Maximum size for the BizPulse log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BPLEVELINFO</group>
# </param>
log4j.appender.BizPulse.File.MaxFileSize=6MB

# <param name="log4j.appender.BizPulse.File.MaxBackupIndex">
#    <alias>BizPulse Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the BizPulse log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BPLEVELINFO</group>
# </param>
log4j.appender.BizPulse.File.MaxBackupIndex=3

# <param name="log4j.appender.BizPulse.File.File">
#    <visible>false</visible>
#    <alias>BizPulse Log File Name</alias>
#    <description>The BizPulse log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizPulse.File.File=${sbm.home}/logs/bizpulse.log

#
# Layout definition
#

# <param name="log4j.appender.BizPulse.File.layout">
#    <visible>false</visible>
#    <alias>BizPulse Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizPulse.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.BizPulse.File.layout.ConversionPattern">
#    <alias>BizPulse Log Message Format</alias>
#    <description>Format messages in the BizPulse log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BPLEVELINFO</group>
# </param>
log4j.appender.BizPulse.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

##########################################################################

##########################################################################
#   BizPulseOutput (BizPulse.output) category definition
#
# The BizPulseOutput category inherits its priority from root. However, it's output
# will go to BizPulseOutput.File apender defined above. It's additivity is non-cumulative.
# The priority level can be set individually as below

# <param name="log4j.category.BizPulseOutput">
#    <alias>BizPulseOutput Log Level</alias>
#    <description>The log level for messages written to the BizPulseOutput log file.</description>
#    <legalvalues>fatal,BizPulseOutput.File|error,BizPulseOutput.File|warn,BizPulseOutput.File|info,BizPulseOutput.File|debug,BizPulseOutput.File</legalvalues>
#    <group>BPOLEVELINFO</group>
# </param>
log4j.category.BizPulseOutput=info,BizPulseOutput.File

# <param name="log4j.additivity.BizPulseOutput">
#    <visible>false</visible>
#    <alias>Additivity for BizPulseOutput log file</alias>
#    <description>if true log statements from parents will be appended to the BizPulseOutput log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.BizPulseOutput=false

#
# Appender definition
#
# BizPulseOutput.File is set to be a FileAppender for BizPulseOutput

# <param name="log4j.appender.BizPulseOutput.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The BizPulseOutput log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizPulseOutput.File=org.apache.log4j.RollingFileAppender
log4j.appender.BizPulseOutput.File.Encoding=UTF-8

# <param name="log4j.appender.BizPulseOutput.File.MaxFileSize">
#    <alias>BizPulseOutput Maximum File Size</alias>
#    <description>Maximum size for the BizPulseOutput log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BPOLEVELINFO</group>
# </param>
log4j.appender.BizPulseOutput.File.MaxFileSize=6MB

# <param name="log4j.appender.BizPulseOutput.File.MaxBackupIndex">
#    <alias>BizPulseOutput Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the BizPulseOutput log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BPOLEVELINFO</group>
# </param>
log4j.appender.BizPulseOutput.File.MaxBackupIndex=3

# <param name="log4j.appender.BizPulseOutput.File.File">
#    <visible>false</visible>
#    <alias>BizPulseOutput Log File Name</alias>
#    <description>The BizPulseOutput log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizPulseOutput.File.File=${sbm.home}/BizPulse/BizPulse.output

#
# Layout definition
#

# <param name="log4j.appender.BizPulseOutput.File.layout">
#    <visible>false</visible>
#    <alias>BizPulseOutput Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizPulseOutput.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.BizPulseOutput.File.layout.ConversionPattern">
#    <alias>BizPulseOutput Log Message Format</alias>
#    <description>Format messages in the BizPulseOutput log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BPOLEVELINFO</group>
# </param>
log4j.appender.BizPulseOutput.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

##########################################################################

##########################################################################
#   BizSolo category definition
#
# The BizSolo category inherits its priority from root. However, it's output
# will go to BizSolo.File apender defined above. It's additivity is non-cumulative.
# The priority level can be set individually as below

# <param name="log4j.category.BizSolo">
#    <alias>BizSolo Log Level</alias>
#    <description>The log level for messages written to the BizSolo log file.</description>
#    <legalvalues>fatal,BizSolo.File|error,BizSolo.File|warn,BizSolo.File|info,BizSolo.File|debug,BizSolo.File</legalvalues>
#    <group>BSOLEVELINFO</group>
# </param>
log4j.category.BizSolo=info,BizSolo.File

# <param name="log4j.additivity.BizSolo">
#    <visible>false</visible>
#    <alias>Additivity for BizSolo log file</alias>
#    <description>if true log statements from parents will be appended to the BizSolo log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.BizSolo=false

#
# Appender definition
#
# BizSolo.File is set to be a FileAppender for BizSolo

# <param name="log4j.appender.BizSolo.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The BizSolo log appender.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BSOLEVELINFO</group>
# </param>
log4j.appender.BizSolo.File=org.apache.log4j.RollingFileAppender
log4j.appender.BizSolo.File.Encoding=UTF-8

# <param name="log4j.appender.BizSolo.File.MaxFileSize">
#    <alias>BizSolo Maximum File Size</alias>
#    <description>Maximum size for the BizSolo log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BSOLEVELINFO</group>
# </param>
log4j.appender.BizSolo.File.MaxFileSize=6MB

# <param name="log4j.appender.BizSolo.File.MaxBackupIndex">
#    <alias>BizSolo Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the BizSolo log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BSOLEVELINFO</group>
# </param>
log4j.appender.BizSolo.File.MaxBackupIndex=3

# <param name="log4j.appender.BizSolo.File.File">
#    <visible>false</visible>
#    <alias>BizSolo Log File Name</alias>
#    <description>The BizSolo log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizSolo.File.File=${sbm.home}/logs/bizsolo.log

#
# Layout definition
#

# <param name="log4j.appender.BizSolo.File.layout">
#    <visible>false</visible>
#    <alias>BizSolo Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BSOLEVELINFO</group>
# </param>
log4j.appender.BizSolo.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.BizSolo.File.layout.ConversionPattern">
#    <alias>BizSolo Log Message Format</alias>
#    <description>Format messages in the BizSolo log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BSOLEVELINFO</group>
# </param>
log4j.appender.BizSolo.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

##########################################################################
#   BizStore category definition
#
# The BizStore category inherits its priority from root. However, it's output
# will go to BizStore.File apender defined above. It's additivity is non-cumulative.
# The priority level can be set individually as below

# <param name="log4j.category.BizStore">
#    <alias>BizStore Log Level</alias>
#    <description>The log level for messages written to the BizStore log file.</description>
#    <legalvalues>fatal,BizStore.File|error,BizStore.File|warn,BizStore.File|info,BizStore.File|debug,BizStore.File</legalvalues>
#    <group>BSTRLEVELINFO</group>
# </param>
log4j.category.BizStore=info,BizStore.File

# <param name="log4j.additivity.BizStore">
#    <visible>false</visible>
#    <alias>Additivity for BizStore log file</alias>
#    <description>if true log statements from parents will be appended to the BizStore log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.BizStore=false

#
# Appender definition
#
# BizStore.File is set to be a FileAppender for BizStore

# <param name="log4j.appender.BizStore.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The BizStore log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizStore.File=org.apache.log4j.RollingFileAppender
log4j.appender.BizStore.File.Encoding=UTF-8

# <param name="log4j.appender.BizStore.File.MaxFileSize">
#    <alias>BizStore Maximum File Size</alias>
#    <description>Maximum size for the BizStore log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BSTRLEVELINFO</group>
# </param>
log4j.appender.BizStore.File.MaxFileSize=6MB

# <param name="log4j.appender.BizStore.File.MaxBackupIndex">
#    <alias>BizStore Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the BizStore log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BSTRLEVELINFO</group>
# </param>
log4j.appender.BizStore.File.MaxBackupIndex=3

# <param name="log4j.appender.BizStore.File.File">
#    <visible>false</visible>
#    <alias>BizStore Log File Name</alias>
#    <description>The BizStore log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizStore.File.File=${sbm.home}/logs/bizstore.log

#
# Layout definition
#

# <param name="log4j.appender.BizStore.File.layout">
#    <visible>false</visible>
#    <alias>BizStore Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizStore.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.BizStore.File.layout.ConversionPattern">
#    <alias>BizStore Log Message Format</alias>
#    <description>Format messages in the BizStore log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BSTRLEVELINFO</group>
# </param>
log4j.appender.BizStore.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n


##########################################################################
#   WebService category definition
#
# The WebService category inherits its priority from root. However, it's output
# will go to WebService.File apender defined above. It's additivity is non-cumulative.
# The priority level can be set individually as below

# <param name="log4j.category.WebService">
#    <alias>WebService Log Level</alias>
#    <description>The log level for messages written to the WebService log file.</description>
#    <legalvalues>fatal,WebService.File|error,WebService.File|warn,WebService.File|info,WebService.File|debug,WebService.File</legalvalues>
#    <group>WSLEVELINFO</group>
# </param>
log4j.category.WebService=info,WebService.File

# <param name="log4j.additivity.WebService">
#    <visible>false</visible>
#    <alias>Additivity for WebService log file</alias>
#    <description>if true log statements from parents will be appended to the WebService log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.WebService=false

#
# Appender definition
#
# WebService.File is set to be a FileAppender for WebService

# <param name="log4j.appender.WebService.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The WebService log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.WebService.File=org.apache.log4j.RollingFileAppender
log4j.appender.WebService.File.Encoding=UTF-8

# <param name="log4j.appender.WebService.File.MaxFileSize">
#    <alias>WebService Maximum File Size</alias>
#    <description>Maximum size for the WebService log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>WSLEVELINFO</group>
# </param>
log4j.appender.WebService.File.MaxFileSize=6MB

# <param name="log4j.appender.WebService.File.MaxBackupIndex">
#    <alias>WebService Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the WebService log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>WSLEVELINFO</group>
# </param>
log4j.appender.WebService.File.MaxBackupIndex=3

# <param name="log4j.appender.WebService.File.File">
#    <visible>false</visible>
#    <alias>WebService Log File Name</alias>
#    <description>The WebService log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.WebService.File.File=${sbm.home}/logs/webservice.log

#
# Layout definition
#

# <param name="log4j.appender.WebService.File.layout">
#    <visible>false</visible>
#    <alias>WebService Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.WebService.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.WebService.File.layout.ConversionPattern">
#    <alias>WebService Log Message Format</alias>
#    <description>Format messages in the WebService log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>WSLEVELINFO</group>
# </param>
log4j.appender.WebService.File.layout.ConversionPattern=%d{DATE} %c{3} %p - %m%n

##########################################################################
#   Mconsole category definition
#
# The Dashboard category inherits its priority from root. However, it's output
# will go to MConsole.File apender defined above. It's additivity is non-cumulative.
# The priority level can be set individually as below

# <param name="log4j.category.MConsole">
#    <alias>Dashboard Log Level</alias>
#    <description>The log level for messages written to the Dashboard log file.</description>
#    <legalvalues>fatal,MConsole.File|error,MConsole.File|warn,MConsole.File|info,MConsole.File|debug,MConsole.File</legalvalues>
#    <group>DBRDLEVELINFO</group>
# </param>
log4j.category.MConsole=info,MConsole.File

# <param name="log4j.additivity.MConsole">
#    <visible>false</visible>
#    <alias>Additivity for Dashboard log file</alias>
#    <description>if true log statements from parents will be appended to the Dashboard log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.MConsole=false

#
# Appender definition
#
# MConsole.File is set to be a FileAppender for MConsole

# <param name="log4j.appender.MConsole.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The mconsole log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.MConsole.File=org.apache.log4j.RollingFileAppender
log4j.appender.MConsole.File.Encoding=UTF-8

# <param name="log4j.appender.MConsole.File.MaxFileSize">
#    <alias>mconsole Maximum File Size</alias>
#    <description>Maximum size for the mconsole log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>DBRDLEVELINFO</group>
# </param>
log4j.appender.MConsole.File.MaxFileSize=6MB

# <param name="log4j.appender.MConsole.File.MaxBackupIndex">
#    <alias>mconsole Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the mconsole log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>DBRDLEVELINFO</group>
# </param>
log4j.appender.MConsole.File.MaxBackupIndex=3

# <param name="log4j.appender.MConsole.File.File">
#    <visible>false</visible>
#    <alias>mconsole Log File Name</alias>
#    <description>The mconsole log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.MConsole.File.File=${sbm.home}/logs/mconsole.log

#
# Layout definition
#

# <param name="log4j.appender.MConsole.File.layout">
#    <visible>false</visible>
#    <alias>Management Console Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.MConsole.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.MConsole.File.layout.ConversionPattern">
#    <alias>Management Console Log Message Format</alias>
#    <description>Format messages in the Management Console log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>DBRDLEVELINFO</group>
# </param>
log4j.appender.MConsole.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

##########################################################################
#   Archiver category definition
log4j.category.Archiver=info,Archiver.File
log4j.additivity.Archiver=false

log4j.appender.Archiver.File=org.apache.log4j.RollingFileAppender
log4j.appender.Archiver.File.Encoding=UTF-8
log4j.appender.Archiver.File.MaxFileSize=10MB
log4j.appender.Archiver.File.MaxBackupIndex=25
log4j.appender.Archiver.File.File=${sbm.home}/logs/archiver.log
log4j.appender.Archiver.File.layout=org.apache.log4j.PatternLayout
log4j.appender.Archiver.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

##########################################################################
#   com.ibatis category definition
log4j.category.com.ibatis=info,com.ibatis.File
log4j.additivity.com.ibatis=false

log4j.appender.com.ibatis.File=org.apache.log4j.RollingFileAppender
log4j.appender.com.ibatis.File.Encoding=UTF-8
log4j.appender.com.ibatis.File.MaxFileSize=10MB
log4j.appender.com.ibatis.File.MaxBackupIndex=25
log4j.appender.com.ibatis.File.File=${sbm.home}/logs/archiver.log
log4j.appender.com.ibatis.File.layout=org.apache.log4j.PatternLayout
log4j.appender.com.ibatis.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

##########################################################################
#   java.sql category definition
log4j.category.java.sql=info,java.sql.File
log4j.additivity.java.sql=false

log4j.appender.java.sql.File=org.apache.log4j.RollingFileAppender
log4j.appender.java.sql.File.Encoding=UTF-8
log4j.appender.java.sql.File.MaxFileSize=10MB
log4j.appender.java.sql.File.MaxBackupIndex=25
log4j.appender.java.sql.File.File=${sbm.home}/logs/archiver.log
log4j.appender.java.sql.File.layout=org.apache.log4j.PatternLayout
log4j.appender.java.sql.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

##########################################################################
#   EventPublisher category definition
#
# The EventPublisher category inherits its priority from root. However, it's output
# will go to EventPublisher.File apender defined above. It's additivity is non-cumulative.
# The priority level can be set individually as below

# <param name="log4j.category.EventPublisher">
#    <alias>Event Publisher Log Level</alias>
#    <description>The log level for messages written to the Event Publisher log file.</description>
#    <legalvalues>fatal,EventPublisher.File|error,EventPublisher.File|warn,EventPublisher.File|info,EventPublisher.File|debug,EventPublisher.File</legalvalues>
#    <group>EVTPLEVELINFO</group>
# </param>
log4j.category.EventPublisher=info,EventPublisher.File

# <param name="log4j.additivity.EventPublisher">
#    <visible>false</visible>
#    <alias>Additivity for Event Publisher log file</alias>
#    <description>if true log statements from parents will be appended to the Event Publisher log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.EventPublisher=false

#
# Appender definition
#
# EventPublisher.File is set to be a FileAppender for EventPublisher

# <param name="log4j.appender.EventPublisher.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The Event Publisher log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.EventPublisher.File=org.apache.log4j.RollingFileAppender
log4j.appender.EventPublisher.File.Encoding=UTF-8

# <param name="log4j.appender.EventPublisher.File.MaxFileSize">
#    <alias>Event Publisher Maximum File Size</alias>
#    <description>Maximum size for the Event Publisher log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>EVTPLEVELINFO</group>
# </param>
log4j.appender.EventPublisher.File.MaxFileSize=6MB

# <param name="log4j.appender.EventPublisher.File.MaxBackupIndex">
#    <alias>Event Publisher Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the Event Publisher log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>EVTPLEVELINFO</group>
# </param>
log4j.appender.EventPublisher.File.MaxBackupIndex=3

# <param name="log4j.appender.EventPublisher.File.File">
#    <visible>false</visible>
#    <alias>Event Publisher Log File Name</alias>
#    <description>The Event Publisher log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.EventPublisher.File.File=${sbm.home}/logs/eventpublisher.log

#
# Layout definition
#

# <param name="log4j.appender.EventPublisher.File.layout">
#    <visible>false</visible>
#    <alias>Event Publisher Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.EventPublisher.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.EventPublisher.File.layout.ConversionPattern">
#    <alias>Event Publisher Log Message Format</alias>
#    <description>Format messages in the Event Publisher log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>EVTPLEVELINFO</group>
# </param>
log4j.appender.EventPublisher.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n
##########################################################################
##########################################################################
##########################################################################
# For BizLogic 

####### BizLogic category definition.

# <param name="log4j.category.BizLogic">
#    <alias>BizLogic Log Level</alias>
#    <description>The log level for messages written to the BizLogic log file.</description>
#    <legalvalues>fatal,BizLogic.File|error,BizLogic.File|warn,BizLogic.File|info,BizLogic.File|debug,BizLogic.File</legalvalues>
#    <group>BL4LEVELINFO</group>
# </param>
log4j.category.BizLogic=info,BizLogic.File

# Specifying that don't log messages to the root category, which are
# being directed towards this category.

# <param name="log4j.additivity.BizLogic">
#    <visible>false</visible>
#    <alias>Additivity for BizLogic log file</alias>
#    <description>if true log statements from parents will be appended to the BizLogic log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.BizLogic=false

###Appender definition for "BizLogic.File"

# <param name="log4j.appender.BizLogic.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The BizLogic log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizLogic.File=org.apache.log4j.RollingFileAppender
log4j.appender.BizLogic.File.Encoding=UTF-8

# <param name="log4j.appender.BizLogic.File.MaxFileSize">
#    <alias>BizLogic Maximum File Size</alias>
#    <description>Maximum size for the BizLogic log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BL4LEVELINFO</group>
# </param>
log4j.appender.BizLogic.File.MaxFileSize=6MB

# <param name="log4j.appender.BizLogic.File.MaxBackupIndex">
#    <alias>BizLogic Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the BizLogic log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BL4LEVELINFO</group>
# </param>
log4j.appender.BizLogic.File.MaxBackupIndex=3

# <param name="log4j.appender.BizLogic.File.File">
#    <visible>false</visible>
#    <alias>BizLogic Log File Name</alias>
#    <description>The BizLogic log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizLogic.File.File=${sbm.home}/logs/bizlogic.log

# <param name="log4j.appender.BizLogic.File.Threshold">
#    <visible>false</visible>
#    <alias>BizLogic Threshold</alias>
#    <description>The BizLogic threshold value.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizLogic.File.Threshold=DEBUG

# <param name="log4j.appender.BizLogic.File.append">
#    <visible>false</visible>
#    <alias>BizLogic Append</alias>
#    <description>The BizLogic append option.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizLogic.File.append=true

# <param name="log4j.appender.BizLogic.File.layout">
#    <visible>false</visible>
#    <alias>BizLogic Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizLogic.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.BizLogic.File.layout.ConversionPattern">
#    <alias>BizLogic Log Message Format</alias>
#    <description>Format messages in the BizLogic log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BL4LEVELINFO</group>
# </param>
log4j.appender.BizLogic.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

# For BizLogic 4.0 upto here
##########################################################################
##########################################################################
##########################################################################

####### Messaging category definition.

# <param name="log4j.category.Messaging">
#    <alias>Messaging Log Level</alias>
#    <description>The log level for Messages written to the message log file.</description>
#    <legalvalues>fatal,Messaging.File|error,Messaging.File|warn,Messaging.File|info,Messaging.File|debug,Messaging.File</legalvalues>
#    <group>BMXLEVELINFO</group>
# </param>
log4j.category.Messaging=debug,Messaging.File

# Specifying that don't log messages to the root category, which are
# being directed towards this category.

# <param name="log4j.additivity.Messaging">
#    <visible>false</visible>
#    <alias>Additivity for messages log file</alias>
#    <description>if true log statements from parents will be appended to the message log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.Messaging=false

###Appender definition for "Messaging.File"

# <param name="log4j.appender.Messaging.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The messages log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.Messaging.File=org.apache.log4j.RollingFileAppender
log4j.appender.Messaging.File.Encoding=UTF-8

# <param name="log4j.appender.Messaging.File.MaxFileSize">
#    <alias>Messages Maximum File Size</alias>
#    <description>Maximum size for the Messages log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BMXLEVELINFO</group>
# </param>
log4j.appender.Messaging.File.MaxFileSize=6MB

# <param name="log4j.appender.Messaging.File.immediateFlush">
#    <visible>false</visible>
#    <alias>Messages Immediate Flush</alias>
#    <description>The Messages immediate flush option.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.Messaging.File.immediateFlush=true

# <param name="log4j.appender.Messaging.File.MaxBackupIndex">
#    <alias>Messages Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the Messages log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BMXLEVELINFO</group>
# </param>
log4j.appender.Messaging.File.MaxBackupIndex=3

# <param name="log4j.appender.Messaging.File.File">
#    <visible>false</visible>
#    <alias>Messages Log File Name</alias>
#    <description>The Messages log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.Messaging.File.File=${sbm.home}/logs/blmessages.log

# <param name="log4j.appender.Messaging.File.Threshold">
#    <visible>false</visible>
#    <alias>Messages Threshold</alias>
#    <description>The Messages threshold value.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.Messaging.File.Threshold=DEBUG

# <param name="log4j.appender.Messaging.File.append">
#    <visible>false</visible>
#    <alias>Messages Append</alias>
#    <description>The Messages append option.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.Messaging.File.append=true

# <param name="log4j.appender.Messaging.File.layout">
#    <visible>false</visible>
#    <alias>Messages Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.Messaging.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.Messaging.File.layout.ConversionPattern">
#    <alias>Messages Log Message Format</alias>
#    <description>Format messages in the Messages log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BMXLEVELINFO</group>
# </param>
log4j.appender.Messaging.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

####### BizLogicClient category definition

# <param name="log4j.category.BizLogicClient">
#    <alias>BizLogic Client Library Log Level</alias>
#    <description>The log level for messages written to the BizLogic Client Library log file.</description>
#    <legalvalues>fatal,BizLogicClient.File|error,BizLogicClient.File|warn,BizLogicClient.File|info,BizLogicClient.File|debug,BizLogicClient.File</legalvalues>
#    <group>BLCLLEVELINFO</group>
# </param>
log4j.category.BizLogicClient=info,BizLogicClient.File

# Specifying that don't log messages to the root category, which are
# being directed towards this category.

# <param name="log4j.additivity.BizLogicClient">
#    <visible>false</visible>
#    <alias>Additivity for BizLogic Client Library log file</alias>
#    <description>if true log statements from parents will be appended to the BizLogic Client Library log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.BizLogicClient=false

####### EOF of BizLogicClient category

###Appender definition for "BizLogicClient"

# <param name="log4j.appender.BizLogicClient.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The BizLogic Client Library log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizLogicClient.File=org.apache.log4j.RollingFileAppender
log4j.appender.BizLogicClient.File.Encoding=UTF-8

# <param name="log4j.appender.BizLogicClient.File.MaxFileSize">
#    <alias>BizLogic Client Library Maximum File Size</alias>
#    <description>Maximum size for the BizLogic Client Library log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BLCLLEVELINFO</group>
# </param>
log4j.appender.BizLogicClient.File.MaxFileSize=6MB

# <param name="log4j.appender.BizLogicClient.File.immediateFlush">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The BizLogic Client Library log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizLogicClient.File.immediateFlush=true

# <param name="log4j.appender.BizLogicClient.File.MaxBackupIndex">
#    <alias>BizLogic Client Library Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the BizLogic Client Library log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BLCLLEVELINFO</group>
# </param>
log4j.appender.BizLogicClient.File.MaxBackupIndex=3

# <param name="log4j.appender.BizLogicClient.File.File">
#    <visible>false</visible>
#    <alias>BizLogic Client Library Log File Name</alias>
#    <description>The BizLogic Client Library log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizLogicClient.File.File=D:/WCSBM76SP1/logs/bizlogicclient.log

# <param name="log4j.appender.BizLogicClient.File.Threshold">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The BizLogic Client Library log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizLogicClient.File.Threshold=DEBUG

# <param name="log4j.appender.BizLogicClient.File.append">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The BizLogic Client Library log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizLogicClient.File.append=true

# <param name="log4j.appender.BizLogicClient.File.layout">
#    <visible>false</visible>
#    <alias>BizLogic Client Library Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BizLogicClient.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.BizLogicClient.File.layout.ConversionPattern">
#    <alias>BizLogic Client Library Log Message Format</alias>
#    <description>Format messages in the BizLogic Client Library log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BLCLLEVELINFO</group>
# </param>
log4j.appender.BizLogicClient.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

####### Cluster category definition

# <param name="log4j.category.cluster">
#    <alias>Cluster Setup Tool Log Level</alias>
#    <description>The log level for messages written to the log file for Cluster Setup Tool.</description>
#    <legalvalues>fatal,cluster.File|error,cluster.File|warn,cluster.File|info,cluster.File|debug,cluster.File</legalvalues>
#    <group>BLCLLEVELINFO</group>
# </param>
log4j.category.cluster=info,cluster.File

# Specifying that don't log messages to the root category, which are
# being directed towards this category.

# <param name="log4j.additivity.cluster">
#    <visible>false</visible>
#    <alias>Additivity for Cluster Setup Tool log file</alias>
#    <description>if true log statements from parents will be appended to the log file for Cluster Setup Tool.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.cluster=false

####### EOF of cluster category

###Appender definition for "cluster"

# <param name="log4j.appender.cluster.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The Cluster Setup Tool log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.cluster.File=org.apache.log4j.RollingFileAppender
log4j.appender.cluster.File.Encoding=UTF-8

# <param name="log4j.appender.cluster.File.MaxFileSize">
#    <alias>Maximum File Size of Cluster Setup Tool log file</alias>
#    <description>Maximum size for the Cluster Setup Tool log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BLCLLEVELINFO</group>
# </param>
log4j.appender.cluster.File.MaxFileSize=6MB

# <param name="log4j.appender.cluster.File.immediateFlush">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The Cluster Setup Tool log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.cluster.File.immediateFlush=true

# <param name="log4j.appender.cluster.File.MaxBackupIndex">
#    <alias>Maximum Number of Backup log files for Cluster Setup Tool</alias>
#    <description>Maximum number of backup archive files used for the Cluster Setup Tool log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BLCLLEVELINFO</group>
# </param>
log4j.appender.cluster.File.MaxBackupIndex=3

# <param name="log4j.appender.cluster.File.File">
#    <visible>false</visible>
#    <alias>Cluster Setup Tool Log File Name</alias>
#    <description>The Cluster Setup Tool log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.cluster.File.File=D:/WCSBM76SP1/cluster/logs/bmcluster.log

# <param name="log4j.appender.cluster.File.Threshold">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The Cluster Setup Tool log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.cluster.File.Threshold=DEBUG

# <param name="log4j.appender.cluster.File.append">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The Cluster Setup Tool log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.cluster.File.append=true

# <param name="log4j.appender.cluster.File.layout">
#    <visible>false</visible>
#    <alias>Cluster Setup Tool Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.cluster.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.cluster.File.layout.ConversionPattern">
#    <alias>Cluster Setup Tool Log Message Format</alias>
#    <description>Format messages in the Cluster Setup Tool log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BLCLLEVELINFO</group>
# </param>
log4j.appender.cluster.File.layout.ConversionPattern=%d{DATE} %c{3} %p - %m%n




###### DBConfigTool category definition

# <param name="log4j.category.DBConfigTool">
#    <alias>DBConfigTool Log Level</alias>
#    <description>The log level for messages written to the log file for the Database Configuration Tool.</description>
#    <legalvalues>fatal,DBConfigTool.File|error,DBConfigTool.File|warn,DBConfigTool.File|info,DBConfigTool.File|debug,DBConfigTool.File</legalvalues>
# </param>
log4j.category.DBConfigTool=info,DBConfigTool.File

# Specifying that don't log messages to the root category, which are
# being directed towards this category.

# <param name="log4j.additivity.DBConfigTool">
#    <visible>false</visible>
#    <alias>DBConfigTool log file</alias>
#    <description>if true log statements from parents will be appended to the Database Configuration Tool log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.DBConfigTool=false

####### EOF of DBConfigTool category

###Appender definition for "DBConfigTool"

# <param name="log4j.appender.DBConfigTool.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The DBConfigTool log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.DBConfigTool.File=org.apache.log4j.RollingFileAppender
log4j.appender.DBConfigTool.File.Encoding=UTF-8

# <param name="log4j.appender.DBConfigTool.File.MaxFileSize">
#    <alias>DBConfigTool Maximum File Size</alias>
#    <description>Maximum size for the Database Configuration Tool log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.DBConfigTool.File.MaxFileSize=6MB

# <param name="log4j.appender.DBConfigTool.File.immediateFlush">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The DBConfigTool log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.DBConfigTool.File.immediateFlush=true

# <param name="log4j.appender.DBConfigTool.File.MaxBackupIndex">
#    <alias>DBConfigTool Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the Database Configuration Tool log file.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.DBConfigTool.File.MaxBackupIndex=3

# <param name="log4j.appender.DBConfigTool.File.File">
#    <visible>false</visible>
#    <alias>DBConfigTool Log File Name</alias>
#    <description>The DBConfigTool log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.DBConfigTool.File.File=${sbm.home}/logs/dbconfigtool.log

# <param name="log4j.appender.DBConfigTool.File.Threshold">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The DBConfigTool log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.DBConfigTool.File.Threshold=DEBUG

# <param name="log4j.appender.DBConfigTool.File.append">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The DBConfigTool log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.DBConfigTool.File.append=true

# <param name="log4j.appender.DBConfigTool.File.layout">
#    <visible>false</visible>
#    <alias>DBConfigTool Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.DBConfigTool.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.DBConfigTool.File.layout.ConversionPattern">
#    <alias>DBConfigTool Log Message Format</alias>
#    <description>Format messages in the Database Configuration Tool log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.DBConfigTool.File.layout.ConversionPattern=%d{DATE} %c{3} %p - %m%n


##########################################################################
#   MAdapter category definition
#
# The MAdapter category inherits its priority from root. However, it's output
# will go to MAdapter.File appender defined above. It's additivity is non-cumulative.
# The priority level can be set individually as below

# <param name="log4j.category.MAdapter">
#    <alias>Home Log Level</alias>
#    <description>The log level for messages written to the Home log file.</description>
#    <legalvalues>fatal,MAdapter.File|error,MAdapter.File|warn,MAdapter.File|info,MAdapter.File|debug,MAdapter.File</legalvalues>
#    <group>BSLEVELINFO</group>
# </param>
log4j.category.MAdapter=info,MAdapter.File

# <param name="log4j.additivity.MAdapter">
#    <visible>false</visible>
#    <alias>Additivity for Home log file</alias>
#    <description>if true log statements from parents will be appended to the Home log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.MAdapter=false

#
# Appender definition
#
# MAdapter.File is set to be a FileAppender for MAdapter

# <param name="log4j.appender.MAdapter.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The Home log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.MAdapter.File=org.apache.log4j.RollingFileAppender
log4j.appender.MAdapter.File.Encoding=UTF-8

# <param name="log4j.appender.MAdapter.File.MaxFileSize">
#    <alias>Home Maximum File Size</alias>
#    <description>Maximum size for the Home log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BSLEVELINFO</group>
# </param>
log4j.appender.MAdapter.File.MaxFileSize=6MB

# <param name="log4j.appender.MAdapter.File.MaxBackupIndex">
#    <alias>Home Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the Home log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BSLEVELINFO</group>
# </param>
log4j.appender.MAdapter.File.MaxBackupIndex=3

# <param name="log4j.appender.MAdapter.File.File">
#    <visible>false</visible>
#    <alias>Home Log File Name</alias>
#    <description>The Home log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.MAdapter.File.File=${sbm.home}/logs/managedadapter.log

#
# Layout definition
#

# <param name="log4j.appender.MAdapter.File.layout">
#    <visible>false</visible>
#    <alias>Home Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.MAdapter.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.MAdapter.File.layout.ConversionPattern">
#    <alias>Home Log Message Format</alias>
#    <description>Format messages in the Home log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BSLEVELINFO</group>
# </param>
log4j.appender.MAdapter.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

##########################################################################
#   PIM category definition
#

# <param name="log4j.category.pim">
#    <alias>pim Log Level</alias>
#    <description>The log level for messages written to the pim log file.</description>
#    <legalvalues>fatal,pim.File|error,pim.File|warn,pim.File|info,pim.File|debug,pim.File</legalvalues>
#    <group>ARCHLEVELINFO</group>
# </param>
log4j.category.pim=info,pim.File

# <param name="log4j.additivity.pim">
#    <visible>false</visible>
#    <alias>Additivity for pim log file</alias>
#    <description>if true log statements from parents will be appended to the pim log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.pim=false

#
# Appender definition
#
# pim.File is set to be a FileAppender for PIM

# <param name="log4j.appender.pim.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The pim log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.pim.File=org.apache.log4j.RollingFileAppender
log4j.appender.pim.File.Encoding=UTF-8

# <param name="log4j.appender.pim.File.MaxFileSize">
#    <alias>pim Maximum File Size</alias>
#    <description>Maximum size for the pim log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>ARCHLEVELINFO</group>
# </param>
log4j.appender.pim.File.MaxFileSize=6MB

# <param name="log4j.appender.pim.File.MaxBackupIndex">
#    <alias>pim Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the pim log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>ARCHLEVELINFO</group>
# </param>
log4j.appender.pim.File.MaxBackupIndex=3

# <param name="log4j.appender.pim.File.File">
#    <visible>false</visible>
#    <alias>pim Log File Name</alias>
#    <description>The pim log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.pim.File.File=${sbm.home}/logs/pim.log

#
# Layout definition
#

# <param name="log4j.appender.pim.File.layout">
#    <visible>false</visible>
#    <alias>pim Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.pim.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.pim.File.layout.ConversionPattern">
#    <alias>pim Log Message Format</alias>
#    <description>Format messages in the pim log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>ARCHLEVELINFO</group>
# </param>
log4j.appender.pim.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n



##########################################################################
#   SDMS category definition
#

# <param name="log4j.category.sdms">
#    <alias>sdms Log Level</alias>
#    <description>The log level for messages written to the sdms log file.</description>
#    <legalvalues>fatal,sdms.File|error,sdms.File|warn,sdms.File|info,sdms.File|debug,sdms.File</legalvalues>
#    <group>ARCHLEVELINFO</group>
# </param>
log4j.category.sdms=info,sdms.File

# <param name="log4j.additivity.sdms">
#    <visible>false</visible>
#    <alias>Additivity for sdms log file</alias>
#    <description>if true log statements from parents will be appended to the sdms log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.sdms=false

#
# Appender definition
#
# sdms.File is set to be a FileAppender for sdms

# <param name="log4j.appender.sdms.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The sdms log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.sdms.File=org.apache.log4j.RollingFileAppender
log4j.appender.sdms.File.Encoding=UTF-8

# <param name="log4j.appender.sdms.File.MaxFileSize">
#    <alias>sdms Maximum File Size</alias>
#    <description>Maximum size for the sdms log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>ARCHLEVELINFO</group>
# </param>
log4j.appender.sdms.File.MaxFileSize=6MB

# <param name="log4j.appender.sdms.File.MaxBackupIndex">
#    <alias>sdms Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the sdms log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>ARCHLEVELINFO</group>
# </param>
log4j.appender.sdms.File.MaxBackupIndex=3

# <param name="log4j.appender.sdms.File.File">
#    <visible>false</visible>
#    <alias>sdms Log File Name</alias>
#    <description>The sdms log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.sdms.File.File=${sbm.home}/logs/sdms.log

#
# Layout definition
#

# <param name="log4j.appender.sdms.File.layout">
#    <visible>false</visible>
#    <alias>sdms Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.sdms.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.sdms.File.layout.ConversionPattern">
#    <alias>sdms Log Message Format</alias>
#    <description>Format messages in the sdms log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>ARCHLEVELINFO</group>
# </param>
log4j.appender.sdms.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

##########################################################################
#   Reusable Business object category definition
#

# <param name="log4j.category.bo">
#    <alias>BO Log Level</alias>
#    <description>The log level for messages written to the bo log file.</description>
#    <legalvalues>fatal,bo.File|error,bo.File|warn,bo.File|info,bo.File|debug,bo.File</legalvalues>
#    <group>ARCHLEVELINFO</group>
# </param>
log4j.category.bo=info,bo.File

# <param name="log4j.additivity.bo">
#    <visible>false</visible>
#    <alias>Additivity for bo log file</alias>
#    <description>if true log statements from parents will be appended to the bo log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.bo=false

#
# Appender definition
#
# bo.File is set to be a FileAppender for bo

# <param name="log4j.appender.bo.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The bo log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.bo.File=org.apache.log4j.RollingFileAppender
log4j.appender.bo.File.Encoding=UTF-8

# <param name="log4j.appender.bo.File.MaxFileSize">
#    <alias>bo Maximum File Size</alias>
#    <description>Maximum size for the bo log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>ARCHLEVELINFO</group>
# </param>
log4j.appender.bo.File.MaxFileSize=6MB

# <param name="log4j.appender.bo.File.MaxBackupIndex">
#    <alias>bo Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the bo log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>ARCHLEVELINFO</group>
# </param>
log4j.appender.bo.File.MaxBackupIndex=3

# <param name="log4j.appender.bo.File.File">
#    <visible>false</visible>
#    <alias>bo Log File Name</alias>
#    <description>The bo log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.bo.File.File=${sbm.home}/logs/bo.log

#
# Layout definition
#

# <param name="log4j.appender.bo.File.layout">
#    <visible>false</visible>
#    <alias>bo Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.bo.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.bo.File.layout.ConversionPattern">
#    <alias>bo Log Message Format</alias>
#    <description>Format messages in the bo log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>ARCHLEVELINFO</group>
# </param>
log4j.appender.bo.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n

##########################################################################
#   Business Expert category definition
#
# The Business Expert category inherits its priority from root. However, it's output
# will go to BEServer.File appender defined above. It's additivity is non-cumulative.
# The priority level can be set individually as below

# <param name="log4j.category.BEServer">
#    <alias>BE Log Level</alias>
#    <description>The log level for messages written to the BE log file.</description>
#    <legalvalues>fatal,BEServer.File|error,BEServer.File|warn,BEServer.File|info,BEServer.File|debug,BEServer.File</legalvalues>
#    <group>BELEVELINFO</group>
# </param>
log4j.category.BEServer=info,BEServer.File

# <param name="log4j.additivity.BEServer">
#    <visible>false</visible>
#    <alias>Additivity for Business Expert log file</alias>
#    <description>if true log statements from parents will be appended to the BE log file.</description>
#    <legalvalues>true|false</legalvalues>
# </param>
log4j.additivity.BEServer=false

#
# Appender definition
#
# BE.File is set to be a FileAppender for Business Expert

# <param name="log4j.appender.BEServer.File">
#    <visible>false</visible>
#    <alias>Logging Type</alias>
#    <description>The Business Expert log appender.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BEServer.File=org.apache.log4j.RollingFileAppender
log4j.appender.BEServer.File.Encoding=UTF-8

# <param name="log4j.appender.BEServer.File.MaxFileSize">
#    <alias>Business Expert Maximum File Size</alias>
#    <description>Maximum size for the Business Expert log file before back up or clean up.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BELEVELINFO</group>
# </param>
log4j.appender.BEServer.File.MaxFileSize=6MB

# <param name="log4j.appender.BEServer.File.MaxBackupIndex">
#    <alias>Business Expert Maximum Number of Backups</alias>
#    <description>Maximum number of backup archive files used for the Business Expert log file.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BELEVELINFO</group>
# </param>
log4j.appender.BEServer.File.MaxBackupIndex=3

# <param name="log4j.appender.BEServer.File.File">
#    <visible>false</visible>
#    <alias>Business Expert Log File Name</alias>
#    <description>The Business Expert log file name.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BEServer.File.File=${sbm.home}/logs/beserver.log

#
# Layout definition
#

# <param name="log4j.appender.BEServer.File.layout">
#    <visible>false</visible>
#    <alias>Business Expert Layout Style</alias>
#    <description>Log messages will be formatted in accordance with the specified conversion pattern.</description>
#    <legalvalues>ANY</legalvalues>
# </param>
log4j.appender.BEServer.File.layout=org.apache.log4j.PatternLayout

# <param name="log4j.appender.BEServer.File.layout.ConversionPattern">
#    <alias>Business Expert Log Message Format</alias>
#    <description>Format messages in the Business Expert log file according to this pattern.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>BELEVELINFO</group>
# </param>
log4j.appender.BEServer.File.layout.ConversionPattern=[#| %d{DATE} | %c{3} | %p | ${sbm.server.name} | %m | %t |#]%n
