<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="RemarksVO">


	<!-- Inserting into Remarks Component  -->
	<!--
		<insert id="insert"
		parameterClass="com.worldcheck.juno.vo.component.RemarksVO"> insert
		into RG_REMARKS ( REMARKS_ID, CASE_ID, PROCESSCYCLEID, REMARKS,
		REPORT_INCLUDE_IND, UPDATED_ON,UPDATED_BY, SUBJECT_ID, IS_AUTO_SAVED
		)values ( RG_REMARKS_SEQ.NEXTVAL, #crn#,#processCycleId#,#remarks#,
		#includeInReport#, sysdate,'swati', #subjectId#, #isAutoSave# )
		</insert>
	-->
	<insert id="insertHistory" parameterClass="com.worldcheck.juno.vo.component.RemarksVO">
		insert into
		RG_REMARKS_HST (
		HISTORY_ID,
		REMARKS_ID,
		CASE_ID,
		PROCESSCYCLEID,
		REMARKS,
		REPORT_INCLUDE_IND,
		UPDATED_ON,UPDATED_BY,
		SUBJECT_ID,TEAM_ID)
		
		(select 
		RG_REMARKS_HST_SEQ.NEXTVAL,rg.REMARKS_ID,rg.CASE_ID,rg.PROCESSCYCLEID,rg.REMARKS,rg.REPORT_INCLUDE_IND,sysdate,rg.UPDATED_BY,
		rg.SUBJECT_ID,rg.TEAM_ID from RG_REMARKS rg where rg.REMARKS_ID=#id#
		)
	
	  </insert>



	<!--
		<update id="update"
		parameterClass="com.worldcheck.juno.vo.component.RemarksVO"> update
		RG_REMARKS set REMARKS = #remarks#, PROCESSCYCLEID=#processCycleId# ,
		UPDATED_ON=sysdate where CASE_ID = #crn# AND SUBJECT_ID = #subjectId#
		AND upper(IS_AUTO_SAVED)=upper('N') </update>
	-->

	<resultMap id="resultVO" class="com.worldcheck.juno.vo.component.RemarksVO">
		<result property="id" column="REMARKS_ID" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="crn" column="CASE_ID" />
		<result property="remarks" column="REMARKS" />
		<result property="includeInReport" column="REPORT_INCLUDE_IND" />
		<result property="displayDate" column="displayDate" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="SUBJECT_NAME" />
		<result property="isAutoSave" column="IS_AUTO_SAVED" />
		<result property="teamTypeId" column="TEAM_ID" />
		<result property="updateOn" column="UPDATED_ON" />

	</resultMap>

	<select id="listByCRN" resultMap="resultVO" parameterClass="java.util.HashMap">
		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (SELECT rg.REMARKS_ID,
		rg.CASE_ID,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.REMARKS,
		rg.REPORT_INCLUDE_IND,
		rg.UPDATED_ON,
		to_char(rg.UPDATED_ON, 'DD-Mon-YY HH24:MI:SS') as displayDate,
		rg.UPDATED_BY,
		rg.SUBJECT_ID,
		cs.REPORT_SUBJECT_NAME SUBJECT_NAME,
		rg.IS_AUTO_SAVED,rg.TEAM_ID
		FROM
		RG_REMARKS rg
		,CMS_CASECYCLE cc,
		RG_SUBJECT cs
		WHERE CASE_ID=#crn# and
		rg.PROCESSCYCLEID =
		cc.CASECYCLE_ID and
		rg.SUBJECT_ID = cs.SUBJECT_ID
		and cs.ENTITY_TYPE_ID=#componentLevel#
		AND
		upper(rg.IS_AUTO_SAVED)=upper('N')

		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>


		order by rg.report_include_ind
		desc,cs.is_primary_sub desc,cs.REPORT_ORDER
		ASC,upper(cs.REPORT_SUBJECT_NAME) asc,cc.PROCESSCYCLE_ORDER desc
		) a WHERE ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#
	</select>

	<resultMap id="resultHistory" class="com.worldcheck.juno.vo.component.RemarksVO">

		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="id" column="HISTORY_ID" />
		<result property="remarks" column="REMARKS" />

	</resultMap>

	<select id="getHistory" resultMap="resultHistory"
		parameterClass="java.util.HashMap">

		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (SELECT rg.UPDATED_ON,
		rg.UPDATED_BY,
		 rg.PROCESSCYCLEID,
		cc.DESCRIPTION,rg.HISTORY_ID,rg.REMARKS
		FROM RG_REMARKS_HST
		rg,CMS_CASECYCLE cc

		WHERE rg.PROCESSCYCLEID = cc.CASECYCLE_ID
		and
		rg.REMARKS_ID=#recordId#
		order by rg.UPDATED_ON
		desc
		
		) a WHERE ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#



	</select>

	<select id="getProcessList" resultClass="java.lang.Integer"
		parameterClass="java.util.HashMap">
		SELECT PROCESSCYCLEID FROM RG_REMARKS
		WHERE
		SUBJECT_ID=#subjectId#
		AND CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('N')
	</select>


	<update id="updateAutoSave" parameterClass="com.worldcheck.juno.vo.component.RemarksVO">

		update RG_REMARKS set
		REMARKS = #remarks#,
		PROCESSCYCLEID=#processCycleId# ,
		UPDATED_ON=sysdate,UPDATED_BY=#updateBy#,
		PARENT_RECORD_ID = #id#,
		IS_AUTO_SAVED = 'Y'
		where
		REMARKS_ID=#autoSaveId#
	</update>




	<select id="getById" resultMap="resultVO" parameterClass="java.lang.Long">
		SELECT
		rg.REMARKS_ID,
		rg.CASE_ID,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.REMARKS,
		rg.REPORT_INCLUDE_IND,
		to_char(rg.UPDATED_ON, 'DD-Mon-YY HH24:MI:SS')
		as displayDate,
		rg.UPDATED_BY,
		rg.SUBJECT_ID,
		rg.UPDATED_ON,
		cs.REPORT_SUBJECT_NAME SUBJECT_NAME,
		rg.IS_AUTO_SAVED,rg.TEAM_ID
		FROM RG_REMARKS rg
		,CMS_CASECYCLE cc,
		RG_SUBJECT cs
		WHERE rg.PROCESSCYCLEID = cc.CASECYCLE_ID AND
		rg.SUBJECT_ID =
		cs.SUBJECT_ID AND
		rg.REMARKS_ID = #id#
		--AND
		upper(rg.IS_AUTO_SAVED)=upper('N')
	</select>

	<!--
		<select id="getAutoSave" resultMap="resultVO"
		parameterClass="java.util.HashMap"> SELECT rg.REMARKS_ID, rg.CASE_ID,
		rg.PROCESSCYCLEID, cc.DESCRIPTION, rg.REMARKS, rg.REPORT_INCLUDE_IND,
		rg.UPDATED_ON,rg.UPDATED_BY, rg.SUBJECT_ID, cs.SUBJECT_NAME,
		rg.IS_AUTO_SAVED FROM RG_REMARKS rg ,CMS_CASECYCLE cc, RG_SUBJECT cs
		WHERE CASE_ID=#crn# AND rg.SUBJECT_ID=#subId# AND rg.PROCESSCYCLEID =
		#processCycle# AND rg.PROCESSCYCLEID = cc.CASECYCLE_ID AND
		rg.SUBJECT_ID = cs.SUBJECT_ID AND upper(rg.IS_AUTO_SAVED)=upper('Y')

		</select>
	-->

	<select id="getAutoSaveById" resultMap="resultVO">

		SELECT rg.REMARKS_ID,
		rg.CASE_ID,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.REMARKS,
		rg.REPORT_INCLUDE_IND,
		rg.UPDATED_ON,rg.UPDATED_BY,
		rg.SUBJECT_ID,
		cs.REPORT_SUBJECT_NAME SUBJECT_NAME,
		rg.IS_AUTO_SAVED
		FROM RG_REMARKS rg
		,CMS_CASECYCLE cc,
		RG_SUBJECT cs
		WHERE rg.PROCESSCYCLEID =
		cc.CASECYCLE_ID AND
		rg.SUBJECT_ID = cs.SUBJECT_ID AND
		rg.REMARKS_ID = #id# AND
		upper(rg.IS_AUTO_SAVED)=upper('Y')

	</select>

	<delete id="delete">
		delete FROM RG_REMARKS WHERE
		REMARKS_ID = #id#
	</delete>

	<delete id="deleteId">
		delete FROM RG_REMARKS WHERE
		REMARKS_ID in ($ids$)
	</delete>

<!--generic query-->
	<delete id="deleteIds" parameterClass="java.util.HashMap">
		delete FROM RG_REMARKS WHERE
		REMARKS_ID IN

		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
	    </iterate>
	</delete>

	<delete id="deleteAutoSaveById">
		delete FROM RG_REMARKS
		WHERE
		REMARKS_ID = #id#
		AND
		upper(IS_AUTO_SAVED)=upper('Y')
	</delete>



	<!--generic query-->
	<select id="findById" resultClass="int">
		select count(rg.REMARKS_ID)
		FROM RG_REMARKS rg
		WHERE
		rg.REMARKS_ID = #id#
	</select>

	<!--generic query-->
	<select id="findAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.REMARKS_ID
		FROM RG_REMARKS rg, RG_REMARKS prnt
		WHERE
		rg.CASE_ID=#crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		rg.PARENT_RECORD_ID = #parentId#
		AND prnt.REMARKS_ID = rg.PARENT_RECORD_ID
		and prnt.PROCESSCYCLEID in ($processCycleId$)
	</select>

	<!--generic query-->
	<select id="findNewAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.REMARKS_ID
		FROM RG_REMARKS rg
		WHERE CASE_ID=#crn#
		AND
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</select>

	<select id="getProcessCycleList" parameterClass="java.util.HashMap"
		resultMap="ProcessCycleVO.processCycleList">
		<!--
			select 'Interim 1' Process_Cycle , 2 Process_Cycle_Id from
			cms_clientcase cc where cc.CLIENT_INT_DUEDATE1 is not null AND NOT
			EXISTS (select summarry.REMARKS_ID from RG_REMARKS summarry where
			summarry.REMARKS_ID != #recordId# and summarry.subject_id = #subId#
			and summarry.processcycleid = 2 and
			upper(summarry.IS_AUTO_SAVED)=upper('N')) and cc.crn = #crn# UNION
			ALL select 'Interim 2' Process_Cycle, 3 Process_Cycle_Id from
			cms_clientcase cc where cc.CLIENT_INT_DUEDATE2 is not null AND NOT
			EXISTS (select summarry.REMARKS_ID from RG_REMARKS summarry where
			summarry.REMARKS_ID != #recordId# and summarry.subject_id = #subId#
			and summarry.processcycleid = 3 and
			upper(summarry.IS_AUTO_SAVED)=upper('N')) and cc.crn = #crn# UNION
			ALL select 'Final' Process_Cycle, 1 Process_Cycle_Id from
			cms_clientcase cc where cc.FINAL_DUE_DATE is not null AND NOT EXISTS
			(select summarry.REMARKS_ID from RG_REMARKS summarry where
			summarry.REMARKS_ID != #recordId# and summarry.subject_id = #subId#
			and summarry.processcycleid = 1 and
			upper(summarry.IS_AUTO_SAVED)=upper('N')) and cc.crn = #crn# order by
			process_cycle_id
		-->


		select rem.processcycleid Process_Cycle_Id,cc.DESCRIPTION
		Process_Cycle
		from rg_remarks rem, cms_casecycle cc
		where rem.subject_id=#subId# and rem.case_id=#crn#
		and cc.casecycle_id= rem.processcycleid
		and upper(rem.IS_AUTO_SAVED)=upper('N')
		 and rem.REMARKS_ID != #recordId#
	</select>

	<!--generic query-->
	<select id="getSubProcCycleList" resultMap="ReportSubjectVO.subProcCycleList">

		select rem.subject_id
		subject_id,
		rem.processcycleid Process_Cycle_Id,cs.subject_name
		subject_name,
		ccl.DESCRIPTION Process_Cycle
		from RG_REMARKS rem,
		RG_SUBJECT cs ,CMS_CASECYCLE ccl
		where cs.CRN = rem.case_id
		and
		ccl.CASECYCLE_ID= rem.processcycleid
		and cs.subject_id =rem.subject_id
		and rem.case_id = #crn#
		and upper(rem.IS_AUTO_SAVED)=upper('N')
		order by cs.subject_id, rem.processcycleid
	</select>


	<insert id="insertAutoSave" parameterClass="com.worldcheck.juno.vo.component.RemarksVO">
		<selectKey keyProperty="autoSaveId" resultClass="long">
			SELECT
			RG_REMARKS_SEQ.NEXTVAL from dual
		</selectKey>
		insert into RG_REMARKS (
		REMARKS_ID,
		CASE_ID,
		PROCESSCYCLEID,
		REMARKS,
		REPORT_INCLUDE_IND,
		UPDATED_ON,UPDATED_BY,
		SUBJECT_ID,
		IS_AUTO_SAVED,
		PARENT_RECORD_ID,TEAM_ID
		)values (
		#autoSaveId#,
		#crn#,#processCycleId#,#remarks#,
		#includeInReport#,
		sysdate,#updateBy#,
		#subjectId#,
		'Y',
		#id#,#teamTypeId#
		)


	</insert>


	<!--generic query-->
	<delete id="deleteNewAutoSave">
		delete FROM RG_REMARKS WHERE
		CASE_ID=#crn# AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</delete>

	<!--generic query-->
	<delete id="deleteAutoSave">
		delete FROM RG_REMARKS WHERE
		CASE_ID=#crn# AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID = #parentId#
	</delete>


	<!--- Calling Insert procedure -->
	<insert id="insert" parameterClass="com.worldcheck.juno.vo.component.RemarksVO">
		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_REMARKS_SEQ.NEXTVAL from dual
		</selectKey>
		insert into RG_REMARKS (
		REMARKS_ID,
		CASE_ID,
		PROCESSCYCLEID,
		REMARKS,
		REPORT_INCLUDE_IND,
		UPDATED_ON,UPDATED_BY,
		SUBJECT_ID,
		IS_AUTO_SAVED,
		PARENT_RECORD_ID,TEAM_ID
		)values (
		#id#,
		#crn#,
		#processCycleId#,
		#remarks#,
		#includeInReport#,
		sysdate,
		#updateBy#,
		#subjectId#,
		'N',
		null,#teamTypeId#
		)
	</insert>


	<update id="update" parameterClass="com.worldcheck.juno.vo.component.RemarksVO">
		update RG_REMARKS
		SET
		PROCESSCYCLEID = #processCycleId#,
		REMARKS = #remarks#,
		UPDATED_ON =
		sysdate,
		UPDATED_BY = #updateBy#
		WHERE REMARKS_ID = #id#
   </update>

	<!--- Calling Update procedure -->
	<select id="getArticleText" resultClass="java.lang.String">
		select NVL(REMARKS,'') REMARKS from
		RG_REMARKS_HST where history_id=#recordId#
		</select>

	<select id="getSearchCount" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">

		SELECT count(*)
		FROM RG_REMARKS rg
		,CMS_CASECYCLE cc, RG_SUBJECT cs
		WHERE
		CASE_ID=#crn# and
		rg.PROCESSCYCLEID = cc.CASECYCLE_ID and
		rg.SUBJECT_ID	= cs.SUBJECT_ID
		AND cs.ENTITY_TYPE_ID=#componentLevel#
		AND upper(rg.IS_AUTO_SAVED)=upper('N')
		
		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>

	</select>

	<select id="getHistoryCount" resultClass="java.lang.Integer">
		SELECT count(*)
		FROM
		RG_REMARKS_HST
		rg where
		rg.REMARKS_ID=#recordId#
		
		
		</select>
	<!-- Mark Done for Remarks Component -->
	<parameterMap id="getParameterMapMD" class="java.util.Map">

		<parameter property="crn" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="componentName" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="errorCode" jdbcType="INTEGER" javaType="java.lang.Integer"
			mode="OUT" />

	</parameterMap>


	<!--- Calling stored procedure -->
	<procedure id="callMarkDone" parameterMap="getParameterMapMD">

		{ call
		RG_PROC_MARK_DONE(?,?,?)} 
	</procedure>
	<!--
		- Calling stored procedure <parameterMap id="getParameterMap"
		class="java.util.Map"> <parameter property="crn" jdbcType="VARCHAR"
		javaType="java.lang.String" mode="IN" /> <parameter
		property="processCycle" jdbcType="LONG" javaType="java.lang.Long"
		mode="IN" /> <parameter property="documentColumnId" jdbcType="LONG"
		javaType="java.lang.Long" mode="IN" /> <parameter property="userCode"
		jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" /> <parameter
		property="errorCode" jdbcType="INTEGER" javaType="java.lang.Integer"
		mode="OUT" /> </parameterMap> <procedure id="callMakeCopy"
		parameterMap="getParameterMap"> { call RG_PROC_MAKE_COPY( ?, ?, ?, ?,
		?, 'REMARKS','N','REMARKS_ID','N','N','N')} </procedure>
	-->


	<parameterMap id="getParameterMapIncExdReport" class="java.util.Map">

		<parameter property="includeExcludeIds" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="includeExcludeIdentifire" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="userCode" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="errorCode" jdbcType="INTEGER" javaType="java.lang.Integer"
			mode="OUT" />
	</parameterMap>


	<!--- Calling stored procedure -->
	<procedure id="callIncExdReport" parameterMap="getParameterMapIncExdReport">

		{ call
		RG_PROC_IND_EXD_REPORT( ?, ?, ?,
		?,'REMARKS','N','REMARKS_ID','N','N')} 
   </procedure>
	<select id="checkIfExist" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		select count(*) from RG_REMARKS where
		PROCESSCYCLEID=#processCycleId# and SUBJECT_ID = #subjectId# and
		case_id=#crn# and upper(IS_AUTO_SAVED)=upper('N')
	</select>

	<!-- makeCopy Remarks Of Summary -->

	<insert id="makeCopy" parameterClass="java.util.HashMap">

		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_REMARKS_SEQ.nextval from dual
	  </selectKey>

		insert into RG_REMARKS (
		REMARKS_ID,
		CASE_ID,
		PROCESSCYCLEID,
		REMARKS,
		REPORT_INCLUDE_IND,
		UPDATED_ON,UPDATED_BY,
		SUBJECT_ID,
		IS_AUTO_SAVED,TEAM_ID
		)
		select #id#,
		CASE_ID,
		#processCycleId#,
		REMARKS,
		'Y',
		sysdate,#userName#,
		SUBJECT_ID,
		IS_AUTO_SAVED,TEAM_ID
		from
		RG_REMARKS
		where
		REMARKS_ID =#recordId#
	</insert>
	<!-- history of makeCopyManagement  Summary -->
	<insert id="makeCopyHst" parameterClass="java.util.HashMap">
		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_REMARKS_HST_SEQ.nextval from dual
	  </selectKey>
		insert into
		RG_REMARKS_HST (
		HISTORY_ID,
		REMARKS_ID,
		CASE_ID,
		PROCESSCYCLEID,
		REMARKS,
		REPORT_INCLUDE_IND,
		UPDATED_ON,UPDATED_BY,
		SUBJECT_ID,TEAM_ID)

		select
		#id#,#genSumryId#, CASE_ID,
		PROCESSCYCLEID,
		REMARKS,
		'Y',
		sysdate,UPDATED_BY,
		SUBJECT_ID,TEAM_ID from RG_REMARKS
		where REMARKS_ID
		= #genSumryId#
	</insert>
	
	
		<insert id="insertHistoryBeforeDeletion"
		parameterClass="java.util.HashMap">
		insert into RG_REMARKS_HST (
		HISTORY_ID,
		CASE_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,
		UPDATED_ON,
		UPDATED_BY,REMARKS_ID
		
		)
    
	    SELECT
		RG_REMARKS_HST_SEQ.NEXTVAL,inner_view.*
		FROM
		<iterate property="recList" conjunction="UNION ALL" open="("
			close=")">
			 (SELECT CASE_ID,SUBJECT_ID,PROCESSCYCLEID,sysdate,#userName# UPDATED_BY ,#recList[]# REMARKS_ID
			  from RG_REMARKS  
   			 where REMARKS_ID=#recList[]#)
			
		</iterate>
		inner_view
    </insert>
    
    
    	<resultMap id="miniRecord"
		class="com.worldcheck.juno.vo.component.RemarksVO"
		groupBy="id">
		<result property="id" column="REMARKS_ID" />
		<result property="updateOn" column="UPDATED_ON" />
	</resultMap>

	<select id="getUpdationTimeById" resultMap="miniRecord">
		SELECT
		rg.REMARKS_ID,
		rg.UPDATED_ON
		FROM RG_REMARKS rg
		WHERE
		rg.REMARKS_ID = #id#
	</select>

</sqlMap>
