<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="EnglishMediaCheckVO">

	<insert id="insert"
		parameterClass="com.worldcheck.juno.vo.component.EnglishMediaCheckVO">
		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_ENG_MEDIA_CHECK_SEQ.NEXTVAL from dual
	  </selectKey>
		insert into RG_ENG_MEDIA_CHECK (
		ENG_MEDIA_CHECK_ID,
		CASE_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,
		RESEARCH_DOC_ID,
		UPDATED_ON,
		UPDATED_BY,
		TABLE_BOTTOM_NOTES,
		SAME_NAME_IND,
		SOURCE1,
		SOURCE2,
		SOURCE3,
		DATE1,
		DATE2,
		DATE3,
		RISK_SUMMARY,
		LINK,
		HEADLINE,
		ARTICLE_TEXT,
		REPORT_INCLUDE_IND,
		IS_AUTO_SAVED,
		TEAM_ID, COMPONENT_NAME, 
		local_media_check, 
		headline_issues,
		LINKED_SUB_PARENT_DOC,
		GRID_UPDATED_ON
		)values (
		#id#,
		#crn#,
		#subjectId#,
		#processCycleId#,
		#rdNumber#,
		sysdate,
		#updateBy#,
		#tableBottomNotes#,
		#sameNameSubject#,
		#source1#,
		#source2#,
		#source3#,
		#date1#,
		#date2#,
		#date3#,
		#summaryOfRisk#,
		#link#,
		#headline#,
		#article#,
		#includeExcludeIdentifire#,
		'N',#teamTypeId#, 
		#compName#, 
		#canPerformLMC#, 
		#issueOfHeadline#,
		#linkSubParentDocId#,
		sysdate
		)
	</insert>

	<resultMap id="listResetRDNumberRes"
		class="com.worldcheck.juno.vo.component.EnglishMediaCheckVO">
		<result property="id" column="emc_reset_id" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="subjectId" column="SUBJECT_ID" />
	</resultMap>
	
	<select id="listResetRDNumber" resultMap="listResetRDNumberRes" parameterClass="java.util.HashMap">
		SELECT emc_reset_id, subject_id, processcycleid FROM rg_reset_emc_rd_number where case_id = #crn#
	</select>
	<delete id="removeRDNumberData" parameterClass="java.util.HashMap">
		delete from rg_reset_emc_rd_number where emc_reset_id in($idList$)
	</delete>	 
	<insert id="insertAutoSave"
		parameterClass="com.worldcheck.juno.vo.component.EnglishMediaCheckVO">
		<selectKey keyProperty="autoSaveId" resultClass="long">
			SELECT
			RG_ENG_MEDIA_CHECK_SEQ.NEXTVAL from dual
	  </selectKey>
		insert into RG_ENG_MEDIA_CHECK (
		ENG_MEDIA_CHECK_ID,
		CASE_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,
		UPDATED_ON,
		UPDATED_BY,
		TABLE_BOTTOM_NOTES,
		SAME_NAME_IND,
		SOURCE1,
		SOURCE2,
		SOURCE3,
		DATE1,
		DATE2,
		DATE3,
		RISK_SUMMARY,
		LINK,
		HEADLINE,
		ARTICLE_TEXT,
		IS_AUTO_SAVED,
		PARENT_RECORD_ID,TEAM_ID, COMPONENT_NAME, local_media_check, headline_issues
		)values (
		#autoSaveId#,
		#crn#,
		#subjectId#,
		#processCycleId#,
		sysdate,
		#updateBy#,
		#tableBottomNotes#,
		#sameNameSubject#,
		#source1#,
		#source2#,
		#source3#,
		#date1#,
		#date2#,
		#date3#,
		#summaryOfRisk#,
		#link#,
		#headline#,
		#article#,
		'Y',
		#id#,#teamTypeId#, #compName#, #canPerformLMC#, #issueOfHeadline#
		)
	</insert>

	<insert id="insertRisksForRecord"
		parameterClass="java.util.HashMap">
		INSERT INTO RG_ENG_MEDIA_CHK_RISKS
		(ENG_MEDIA_CHECK_RISK_ID, RISK_CODE, ENG_MEDIA_CHECK_ID)
		SELECT
		RG_ENG_MEDIA_CHECK_RISKS_SEQ.NEXTVAL,inner_view.*
		FROM
		<iterate property="recList" conjunction="UNION ALL" open="("
			close=")">
			SELECT #recList[].riskVO.code# RISK_CODE, #recList[].englishMediaCheckVO.id#
			ENG_MEDIA_CHECK_ID FROM DUAL
		
			WHERE NOT EXISTS
			(SELECT ENG_MEDIA_CHECK_RISK_ID
			FROM RG_ENG_MEDIA_CHK_RISKS
			WHERE
			ENG_MEDIA_CHECK_ID = #recList[].englishMediaCheckVO.id#
			AND RISK_CODE =	#recList[].riskVO.code#
			)
			
		</iterate>
		inner_view
    </insert>
	<!--
		<insert id="insertRisksForRecord" parameterClass="java.util.List">
		INSERT ALL <iterate> into RG_ENG_MEDIA_CHK_RISKS
		(ENG_MEDIA_CHECK_RISK_ID, RISK_CODE, ENG_MEDIA_CHECK_ID) Values
		(RG_ENG_MEDIA_CHECK_RISKS_SEQ.NEXTVAL, #[].riskVO.code#,
		#[].englishMediaCheckVO.id#) </iterate> SELECT * FROM dual </insert>
	-->

	<insert id="insertRIdsForRecord"
		parameterClass="com.worldcheck.juno.vo.component.EnglishMediaCheckRelDocVO">
		INSERT INTO RG_ENG_RELATED_DOCS
		(ENGLISH_RELATED_DOCS_ID, PARENT_DOC_ID, CHILD_DOC_ID)
		SELECT
		RG_ENGLISH_RELATED_DOCS_SEQ.NEXTVAL, #parentDocId#,#childDocId#
		FROM
		dual
		WHERE NOT EXISTS (SELECT ENGLISH_RELATED_DOCS_ID
		FROM
		RG_ENG_RELATED_DOCS
		WHERE PARENT_DOC_ID = #parentDocId#
		AND CHILD_DOC_ID
		= #childDocId#
		)
	</insert>

	<insert id="insertRSForRecord"
		parameterClass="com.worldcheck.juno.vo.component.EnglishMediaCheckRelSubVO">
		INSERT INTO RG_ENG_RELATED_SUBJECT
		(ENGLISH_RELATED_SUBJECT_ID, PARENT_DOC_ID, CHILD_DOC_ID, SUBJECT_ID)
		SELECT RG_ENGLISH_RELATED_SUBJECT_SEQ.NEXTVAL,
		#parentDocId#,#childDocId#,#subjectConfigVO.subjectId#
		FROM dual
		WHERE
		NOT EXISTS (SELECT ENGLISH_RELATED_SUBJECT_ID
		FROM
		RG_ENG_RELATED_SUBJECT
		WHERE PARENT_DOC_ID = #parentDocId#
		AND
		SUBJECT_ID = #subjectConfigVO.subjectId#
		)
	</insert>

	<delete id="removeRisksForRecord">
		DELETE FROM RG_ENG_MEDIA_CHK_RISKS WHERE
		ENG_MEDIA_CHECK_ID = #emcId#
	</delete>

	<delete id="removeRIdsForRecord">
		DELETE FROM RG_ENG_RELATED_DOCS WHERE PARENT_DOC_ID =
		#emcId#
	</delete>

	<delete id="removeRSForRecord">
		delete from rg_eng_media_check where linked_sub_parent_doc in ($emcId$)
	</delete>

	<delete id="removeRisksExceptIds">
		DELETE FROM RG_ENG_MEDIA_CHK_RISKS
		WHERE
		ENG_MEDIA_CHECK_ID = #emcId#
		AND RISK_CODE NOT IN ($idList$)
	</delete>

	<delete id="removeRIdsExceptIds">
		DELETE FROM RG_ENG_RELATED_DOCS
		WHERE PARENT_DOC_ID =
		#emcId#
		AND CHILD_DOC_ID NOT IN ($idList$)
	</delete>

	<delete id="removeRSExceptIds">
		DELETE FROM RG_ENG_RELATED_SUBJECT
		WHERE PARENT_DOC_ID
		= #emcId#
		AND SUBJECT_ID NOT IN ($idList$)
	</delete>

	<update id="update"
		parameterClass="com.worldcheck.juno.vo.component.EnglishMediaCheckVO">
		UPDATE RG_ENG_MEDIA_CHECK
		SET
		PROCESSCYCLEID =
		#processCycleId#,
		UPDATED_ON = sysdate,
		UPDATED_BY =
		#updateBy#,
		TABLE_BOTTOM_NOTES = #tableBottomNotes#,
		SAME_NAME_IND =
		#sameNameSubject#,
		SOURCE1 = #source1#,
		SOURCE2 = #source2#,
		SOURCE3 =
		#source3#,
		DATE1 = #date1#,
		DATE2 = #date2#,
		DATE3 = #date3#,
		RISK_SUMMARY = #summaryOfRisk#,
		LINK = #link#,
		HEADLINE = #headline#,
		ARTICLE_TEXT = #article#,
		IS_AUTO_SAVED = 'N',
		COMPONENT_NAME = #compName#,   
		local_media_check = #canPerformLMC#,
		headline_issues = #issueOfHeadline#,
		RESEARCH_DOC_ID = #rdNumber#,
		TEAM_ID=#teamTypeId#
		WHERE ENG_MEDIA_CHECK_ID = #id#
	</update>

	<update id="updateAutoSave"
		parameterClass="com.worldcheck.juno.vo.component.EnglishMediaCheckVO">
		UPDATE RG_ENG_MEDIA_CHECK
		SET
		PROCESSCYCLEID =
		#processCycleId#,
		UPDATED_ON = sysdate,
		UPDATED_BY =
		#updateBy#,
		TABLE_BOTTOM_NOTES = #tableBottomNotes#,
		SAME_NAME_IND =
		#sameNameSubject#,
		SOURCE1 = #source1#,
		SOURCE2 = #source2#,
		SOURCE3 =
		#source3#,
		DATE1 = #date1#,
		DATE2 = #date2#,
		DATE3 = #date3#,
		RISK_SUMMARY = #summaryOfRisk#,
		LINK = #link#,
		HEADLINE = #headline#,
		ARTICLE_TEXT = #article#,
		IS_AUTO_SAVED = 'Y',
		COMPONENT_NAME = #compName#,
		local_media_check = #canPerformLMC#,
		headline_issues = #issueOfHeadline#
		WHERE ENG_MEDIA_CHECK_ID =
		#autoSaveId#
	</update>

	<resultMap id="unrelatedDocs"
		class="com.worldcheck.juno.vo.component.EnglishMediaCheckVO">
		<result property="id" column="ENG_MEDIA_CHECK_ID" />
	</resultMap>

	<select id="listUnrelatedDocOnId" parameterClass="java.util.HashMap"
		resultMap="unrelatedDocs">
		SELECT rg.ENG_MEDIA_CHECK_ID
		FROM RG_ENG_MEDIA_CHECK
		rg
		WHERE
		rg.SUBJECT_ID = #subId#
		AND rg.PROCESSCYCLEID = #processCycleId#
		AND
		upper(rg.IS_AUTO_SAVED)=upper('N')
		<isNotEqual prepend="AND" property="emcId" compareValue="0">
			rg.ENG_MEDIA_CHECK_ID != #emcId#
		</isNotEqual>
		and rg.REPORT_INCLUDE_IND = 'Y'
		<isNotEqual prepend="AND" property="emcId" compareValue="0">
		rg.ENG_MEDIA_CHECK_ID not in 
		(select PARENT_DOC_ID from RG_ENG_RELATED_DOCS rel 
		join RG_ENG_MEDIA_CHECK emc on rel.PARENT_DOC_ID = emc.ENG_MEDIA_CHECK_ID and emc.SUBJECT_ID = #subId#  and rel.child_doc_id = #emcId#)
		</isNotEqual>
		order by rg.ENG_MEDIA_CHECK_ID asc
	</select>
	
	
	<!--
		rg.ENG_MEDIA_CHECK_ID NOT IN ( SELECT rel.CHILD_DOC_ID FROM
		RG_ENG_RELATED_DOCS rel WHERE rel.PARENT_DOC_ID = #emcId# )
	-->

	<resultMap id="unrelatedSubjects" class="com.worldcheck.juno.vo.common.ReportSubjectVO">
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="reportSubjectName" column="SUBJECT_NAME" />
	</resultMap>

	<select id="listUnrelatedSubjectsOnId" parameterClass="java.util.HashMap"
		resultMap="unrelatedSubjects">
		SELECT sub.SUBJECT_ID, sub.REPORT_SUBJECT_NAME SUBJECT_NAME
		FROM RG_SUBJECT sub
		WHERE sub.SUBJECT_ID != #subId#
		and sub.CRN=#crn#
	</select>
	<!--
		NOT IN ( SELECT rel.SUBJECT_ID FROM RG_ENG_RELATED_SUBJECT rel WHERE
		sub.SUBJECT_ID != #subId# <isNotEqual prepend="AND" property="emcId"
		compareValue="0"> rel.PARENT_DOC_ID = #emcId# </isNotEqual> )
	-->

	<resultMap id="riskCat" class="com.worldcheck.juno.vo.component.RiskVO">
		<result property="code" column="RISK_CODE" />
		<result property="name" column="RISK" />
	</resultMap>

	<resultMap id="emcRiskSet"
		class="com.worldcheck.juno.vo.component.EnglishMediaCheckRiskVO"
		groupBy="id">
		<result property="id" column="ENG_MEDIA_CHECK_RISK_ID" />
		<result property="parentId" column="ENG_MEDIA_CHECK_ID" />
		<result property="riskVO" resultMap="EnglishMediaCheckVO.riskCat" />
	</resultMap>

	<resultMap id="subject" class="com.worldcheck.juno.vo.common.ReportSubjectVO">
		<result property="subjectId" column="REL_SUB_ID" />
		<result property="reportSubjectName" column="REL_SUB_NAME" />
	</resultMap>

	<resultMap id="emcRSSet"
		class="com.worldcheck.juno.vo.component.EnglishMediaCheckRelSubVO"
		groupBy="id">
		<result property="id" column="ENGLISH_RELATED_SUBJECT_ID" />
		<result property="parentDocId" column="ENG_MEDIA_CHECK_ID" />
		<result property="childDocId" column="REL_SUB_CHILD_ID" />
		<result property="subjectConfigVO" resultMap="EnglishMediaCheckVO.subject" />
	</resultMap>

	<resultMap id="emcRIdSet"
		class="com.worldcheck.juno.vo.component.EnglishMediaCheckRelDocVO"
		groupBy="id">
		<result property="id" column="ENGLISH_RELATED_DOCS_ID" />
		<result property="parentDocId" column="ENG_MEDIA_CHECK_ID" />
		<result property="childDocId" column="REL_DOC_ID" />
	</resultMap>

	<resultMap id="emcList"
		class="com.worldcheck.juno.vo.component.EnglishMediaCheckVO" groupBy="id">
		<result property="id" column="ENG_MEDIA_CHECK_ID" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="SUBJECT_NAME" />
		<result property="reportSubjectName" column="REPORT_SUBJECT_NAME" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="crn" column="CASE_ID" />
		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="isAutoSave" column="IS_AUTO_SAVED" />
		<result property="date1" column="DATE1" />
		<result property="date2" column="DATE2" />
		<result property="date3" column="DATE3" />
		<result property="summaryOfRisk" column="RISK_SUMMARY" />
		<result property="headline" column="HEADLINE" />
		<result property="link" column="LINK" />
		<result property="rdNumber" column="RESEARCH_DOC_ID" />
		<result property="sameNameSubject" column="SAME_NAME_IND" />
		<result property="includeExcludeIdentifire" column="REPORT_INCLUDE_IND" />
		<result property="englishMediaCheckRiskSet" resultMap="EnglishMediaCheckVO.emcRiskSet"
			notNullColumn="ENG_MEDIA_CHECK_RISK_ID" />
		<result property="englishMediaCheckRelSubSet" resultMap="EnglishMediaCheckVO.emcRSSet"
			notNullColumn="ENGLISH_RELATED_SUBJECT_ID" />
		<result property="englishMediaCheckRelDocSet" resultMap="EnglishMediaCheckVO.emcRIdSet"
			notNullColumn="ENGLISH_RELATED_DOCS_ID" />
		<result property="teamTypeId" column="TEAM_ID" />	
		<result property="canPerformLMC" column="LOCAL_MEDIA_CHECK" />
		<result property="issueOfHeadline" column="HEADLINE_ISSUES" />
		<result property="linkSubParentDocId" column="LINKED_SUB_PARENT_DOC" />
		
	</resultMap>

	<resultMap id="extendedEmcList"
		class="com.worldcheck.juno.vo.component.EnglishMediaCheckVO" extends="emcList">
		<result property="tableBottomNotes" column="TABLE_BOTTOM_NOTES" />
		<result property="source1" column="source1" />
		<result property="source2" column="source2" />
		<result property="source3" column="source3" />
		<result property="readOnly" column="READ_ONLY" />
		<result property="article" column="ARTICLE_TEXT" />
		<result property="compName" column="COMPONENT_NAME" />
		<result property="linkSubParentSubjectName" column="LINK_PARENT_SUB_NAME" />
	</resultMap>

	<resultMap id="emcMediaList"
		class="com.worldcheck.juno.vo.component.EnglishMediaCheckVO">
		<result property="id" column="ENG_MEDIA_CHECK_ID" />
		<result property="rdNumber" column="RESEARCH_DOC_ID" />
		<result property="article" column="ARTICLE_TEXT" />
		<result property="subjectName" column="report_subject_name" />
		<result property="processCycleName" column="DESCRIPTION" />
	</resultMap>


	<resultMap id="emcListForDirectRisk"
		class="com.worldcheck.juno.vo.component.EnglishMediaCheckVO" groupBy="id">
		<result property="id" column="ENG_MEDIA_CHECK_ID" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="SUBJECT_NAME" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<!-- <result property="processCycleName" column="DESCRIPTION" />-->
		<result property="crn" column="CASE_ID" />
		<result property="rdNumber" column="RESEARCH_DOC_ID" />
		<result property="sameNameSubject" column="SAME_NAME_IND" />
		<result property="englishMediaCheckRiskSet" resultMap="EnglishMediaCheckVO.emcRiskSet"
			notNullColumn="ENG_MEDIA_CHECK_RISK_ID" />
	</resultMap>
	
	<resultMap id="relatedSubjectDocs"
		class="com.worldcheck.juno.vo.component.EnglishMediaCheckVO">
		<result property="id" column="ENG_MEDIA_CHECK_ID" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="subjectId" column="SUBJECT_ID" />
	</resultMap>

	<select id="listRelatedSubjectDoc" 
		resultMap="relatedSubjectDocs">
		SELECT rg.ENG_MEDIA_CHECK_ID, rg.SUBJECT_ID,
		rg.PROCESSCYCLEID
		FROM RG_ENG_MEDIA_CHECK
		rg
		LEFT OUTER JOIN RG_ENG_RELATED_SUBJECT
		rers ON
		rers.PARENT_DOC_ID =
		rg.ENG_MEDIA_CHECK_ID
		WHERE
		rg.ENG_MEDIA_CHECK_ID = #id#		

	</select>
	
	<select id="isRelatedSubChildDoc" parameterClass="java.util.HashMap" resultClass="java.lang.Boolean">
		select CASE WHEN LINKED_SUB_PARENT_DOC IS NULL THEN 'false'
				ELSE 'true' END READ_ONLY
		from RG_ENG_MEDIA_CHECK
		where ENG_MEDIA_CHECK_ID = #emcId#
	</select>


	<select id="listByCRN" resultMap="emcList" parameterClass="java.util.HashMap">
		select rgData.*,
		rers.CHILD_DOC_ID AS REL_SUB_CHILD_ID,
		rers.ENGLISH_RELATED_SUBJECT_ID,
		sub.SUBJECT_ID as REL_SUB_ID,
		sub.REPORT_SUBJECT_NAME as REL_SUB_NAME,
		rerd.ENGLISH_RELATED_DOCS_ID,
		rerd.CHILD_DOC_ID AS REL_DOC_ID,
		remcr.ENG_MEDIA_CHECK_RISK_ID,
		remcr.RISK_CODE,
		risk.RISK,REMC.RESEARCH_DOC_ID AS RDNUMBER,
		sub.REPORT_ORDER

		from (
		SELECT rg.ENG_MEDIA_CHECK_ID, rownum rn,
		rg.SUBJECT_ID,
		cs.REPORT_SUBJECT_NAME,
		cc.DESCRIPTION,
		cc.PROCESSCYCLE_ORDER,
		rg.PROCESSCYCLEID,
		rg.CASE_ID,
		rg.UPDATED_ON,
		rg.UPDATED_BY,
		rg.RISK_SUMMARY,
		rg.LINK,
		rg.SAME_NAME_IND,
		rg.RESEARCH_DOC_ID,
		rg.DATE1,
		rg.DATE2,
		rg.DATE3,
		rg.LINKED_SUB_PARENT_DOC,
		rg.IS_AUTO_SAVED,
		rg.REPORT_INCLUDE_IND,
		rg.TEAM_ID,
		cs.REPORT_ORDER,
		cs.SUBJECT_NAME,
		cs.IS_PRIMARY_SUB,
		rg.HEADLINE_ISSUES,
		rg.HEADLINE,
		rg.LOCAL_MEDIA_CHECK
	 
		FROM
		RG_ENG_MEDIA_CHECK rg
		JOIN
		CMS_CASECYCLE cc ON	cc.CASECYCLE_ID = rg.PROCESSCYCLEID
		JOIN RG_SUBJECT cs ON (cs.SUBJECT_ID = rg.SUBJECT_ID and cs.ENTITY_TYPE_ID=#componentLevel#)
		WHERE
		rg.CASE_ID =#crn# 
		AND
		upper(rg.IS_AUTO_SAVED)=upper('N')
		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>


		order by rg.report_include_ind desc, cs.IS_PRIMARY_SUB desc, cs.REPORT_ORDER asc, upper(cs.REPORT_SUBJECT_NAME) asc, cs.SUBJECT_ID,
		rg.SAME_NAME_IND asc,cc.PROCESSCYCLE_ORDER desc,
		rg.RESEARCH_DOC_ID asc

		) rgData

		LEFT OUTER JOIN RG_ENG_RELATED_SUBJECT
		rers ON
		rers.PARENT_DOC_ID =
		rgData.ENG_MEDIA_CHECK_ID
		LEFT OUTER JOIN
		RG_SUBJECT sub ON sub.SUBJECT_ID
		= rers.SUBJECT_ID
		LEFT OUTER JOIN
		RG_ENG_RELATED_DOCS rerd ON
		rerd.PARENT_DOC_ID =
		rgData.ENG_MEDIA_CHECK_ID
		LEFT OUTER JOIN RG_ENG_MEDIA_CHECK REMC
		ON
		RERD.CHILD_DOC_ID=REMC.ENG_MEDIA_CHECK_ID
		LEFT OUTER JOIN
		RG_ENG_MEDIA_CHK_RISKS remcr ON remcr.ENG_MEDIA_CHECK_ID =
		rgData.ENG_MEDIA_CHECK_ID
		LEFT OUTER JOIN CMS_RISK_MASTER risk ON
		risk.RISK_CODE = remcr.RISK_CODE
		<isNotNull property="limit">
			<isNotEqual property="limit" compareValue="0">

				WHERE rgData.rn
				BETWEEN
				#start# AND #limit#
		   		</isNotEqual>
		</isNotNull>


		order by rgData.report_include_ind desc,rgData.IS_PRIMARY_SUB desc, rgData.REPORT_ORDER asc, upper(rgData.REPORT_SUBJECT_NAME) asc, rgData.SUBJECT_ID,
		rgData.SAME_NAME_IND asc,rgData.PROCESSCYCLE_ORDER desc,
		rgData.RESEARCH_DOC_ID asc,risk.RISK asc,
		REMC.RESEARCH_DOC_ID asc,sub.REPORT_ORDER asc
	</select>
	<select id="getSearchCount" resultClass="java.lang.Integer"
		parameterClass="java.util.HashMap">

		SELECT count(*)
		FROM RG_ENG_MEDIA_CHECK rg,RG_SUBJECT
		cs

		WHERE
		rg.CASE_ID = #crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('N') 
		AND cs.SUBJECT_ID = rg.SUBJECT_ID
		AND cs.ENTITY_TYPE_ID=#componentLevel#
		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>

	</select>


	<select id="getById" resultMap="extendedEmcList">
		SELECT rg.ENG_MEDIA_CHECK_ID,
		rg.SUBJECT_ID,rg.CASE_ID,
		cs.SUBJECT_NAME,
		cs.REPORT_SUBJECT_NAME,
		rg.PROCESSCYCLEID,
		rg.CASE_ID,
		cc.DESCRIPTION,
		rg.UPDATED_ON,
		rg.UPDATED_BY,
		rg.RESEARCH_DOC_ID,
		rg.RISK_SUMMARY,
		rg.LINK,
		rg.SAME_NAME_IND,
		rg.DATE1,
		rg.DATE2,
		rg.DATE3,
		rg.IS_AUTO_SAVED,
		rg.REPORT_INCLUDE_IND,
		rg.TABLE_BOTTOM_NOTES,
		rg.source1,
		rg.source2,
		rg.source3,
		rg.HEADLINE,
		rg.HEADLINE_ISSUES,
		rg.LOCAL_MEDIA_CHECK,
		rg.component_name,
		rg.ARTICLE_TEXT,rg.TEAM_ID,
		rers.CHILD_DOC_ID AS REL_SUB_CHILD_ID,
		rers.ENGLISH_RELATED_SUBJECT_ID,
		sub.SUBJECT_ID as REL_SUB_ID,
		sub.REPORT_SUBJECT_NAME as REL_SUB_NAME,
		rerd.ENGLISH_RELATED_DOCS_ID,
		rerd.CHILD_DOC_ID AS REL_DOC_ID,
		remcr.ENG_MEDIA_CHECK_RISK_ID,
		remcr.RISK_CODE,
		CASE WHEN rg.LINKED_SUB_PARENT_DOC IS NULL THEN 'false'
		ELSE 'true' END READ_ONLY,
		rg.LINKED_SUB_PARENT_DOC,
		psub.REPORT_SUBJECT_NAME AS LINK_PARENT_SUB_NAME,
		risk.RISK
		FROM RG_ENG_MEDIA_CHECK rg
		JOIN
		CMS_CASECYCLE cc ON cc.CASECYCLE_ID = rg.PROCESSCYCLEID
		JOIN
		RG_SUBJECT cs ON cs.SUBJECT_ID = rg.SUBJECT_ID
		LEFT OUTER JOIN
		RG_ENG_RELATED_SUBJECT rers ON rers.PARENT_DOC_ID =
		rg.ENG_MEDIA_CHECK_ID
		LEFT OUTER JOIN RG_SUBJECT sub ON sub.SUBJECT_ID
		= rers.SUBJECT_ID
		LEFT OUTER JOIN RG_ENG_MEDIA_CHECK rercs ON rercs.ENG_MEDIA_CHECK_ID = rg.LINKED_SUB_PARENT_DOC
		LEFT OUTER JOIN RG_SUBJECT psub ON psub.SUBJECT_ID = rercs.SUBJECT_ID
		LEFT OUTER JOIN RG_ENG_RELATED_DOCS rerd ON
		rerd.PARENT_DOC_ID = rg.ENG_MEDIA_CHECK_ID
		LEFT OUTER JOIN
		RG_ENG_MEDIA_CHK_RISKS remcr ON remcr.ENG_MEDIA_CHECK_ID =
		rg.ENG_MEDIA_CHECK_ID
		LEFT OUTER JOIN CMS_RISK_MASTER risk ON
		risk.RISK_CODE = remcr.RISK_CODE 
		WHERE
		rg.ENG_MEDIA_CHECK_ID = #id# 
		order by rerd.child_doc_id ASC
	</select>

	<select id="listForGenerateMedia" resultMap="emcMediaList"
		parameterClass="java.util.HashMap">
		SELECT
		rg.ENG_MEDIA_CHECK_ID,
		rg.ARTICLE_TEXT,
		rg.RESEARCH_DOC_ID,
		cc.description,cs.report_subject_name
		FROM
		RG_ENG_MEDIA_CHECK rg,
		cms_casecycle cc, 
		rg_subject cs
		WHERE
		cc.casecycle_id= rg.processcycleid
		and
		cs.subject_id= rg.subject_id
		and cs.ENTITY_TYPE_ID=#componentLevel#
		and rg.CASE_ID = #crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('N')
		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.processcycleid=#processCycleId#
			</isNotEqual>
		</isNotNull>
		order by rg.report_include_ind desc,cs.IS_PRIMARY_SUB desc,
		cs.REPORT_ORDER ASC,upper(cs.REPORT_SUBJECT_NAME),cs.SUBJECT_ID,rg.SAME_NAME_IND,
		cc.PROCESSCYCLE_ORDER desc, rg.RESEARCH_DOC_ID ASC

	</select>

	<!--
		<update id="reorderRdNumbers"> declare rdNumber number(6):=1; recordId
		number(10); totalRecords number; subId number:=#subId#; processCycle
		number:=#processCycle#; crn VARCHAR2(200):=#crn#; begin select
		count(*) into totalRecords from RG_ENG_MEDIA_CHECK where subject_id =
		subId and processcycleid = processCycle and is_auto_saved = 'N' and
		CASE_ID = crn; while rdNumber <= totalRecords loop select
		ENG_MEDIA_CHECK_ID into recordId from ( select ENG_MEDIA_CHECK_ID from
		RG_ENG_MEDIA_CHECK where subject_id = subId and processcycleid =
		processCycle and is_auto_saved = 'N' and CASE_ID = crn and
		RESEARCH_DOC_ID >= rdNumber order by RESEARCH_DOC_ID asc ) where
		ROWNUM < 2; update RG_ENG_MEDIA_CHECK set RESEARCH_DOC_ID = rdNumber
		where ENG_MEDIA_CHECK_ID = recordId; rdNumber:= rdNumber + 1; end
		loop; END; </update>
	-->

	<!--useless right now-->
	<select id="maxRDNumber" resultClass="int">
		select MAX(RESEARCH_DOC_ID)
		FROM RG_ENG_MEDIA_CHECK
		WHERE SUBJECT_ID = #subjectId#
		AND CASE_ID =
		#crn#
		AND PROCESSCYCLEID = #processCycleId#
	</select>

	<resultMap id="miniEmcRecord"
		class="com.worldcheck.juno.vo.component.EnglishMediaCheckVO" groupBy="id">
		<result property="id" column="ENG_MEDIA_CHECK_ID" />
		<result property="updateOn" column="UPDATED_ON" />
	</resultMap>

	<!--generic query-->
	<select id="getUpdationTimeById" resultMap="miniEmcRecord">
		SELECT
		rg.ENG_MEDIA_CHECK_ID,
		rg.UPDATED_ON
		FROM RG_ENG_MEDIA_CHECK rg
		WHERE
		rg.ENG_MEDIA_CHECK_ID = #id#
	</select>

	<!--generic query-->
	<select id="findById" resultClass="int">
		select
		count(rg.ENG_MEDIA_CHECK_ID)
		FROM RG_ENG_MEDIA_CHECK rg
		WHERE
		rg.ENG_MEDIA_CHECK_ID = #id#
	</select>

	<!--generic query-->
	<delete id="delete">
		delete FROM RG_ENG_MEDIA_CHECK WHERE
		ENG_MEDIA_CHECK_ID = #id#
	</delete>

	<!--generic query-->
	<delete id="deleteIds">
		delete FROM RG_ENG_MEDIA_CHECK WHERE
		ENG_MEDIA_CHECK_ID IN
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
	    </iterate>
	</delete>

	<!--generic query-->
	<delete id="deleteNewAutoSave">
		delete FROM RG_ENG_MEDIA_CHECK WHERE
		CASE_ID=#crn# AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</delete>

	<!--generic query-->
	<delete id="deleteAutoSave">
		delete FROM RG_ENG_MEDIA_CHECK WHERE
		CASE_ID=#crn# AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID = #parentId#
	</delete>

	<!--generic query-->
	<select id="findAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.ENG_MEDIA_CHECK_ID
		FROM RG_ENG_MEDIA_CHECK rg, RG_ENG_MEDIA_CHECK prnt
		WHERE
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		rg.PARENT_RECORD_ID = #parentId#
		AND prnt.ENG_MEDIA_CHECK_ID = rg.PARENT_RECORD_ID
		and prnt.PROCESSCYCLEID in ($processCycleId$)
	</select>

	<!--generic query-->
	<select id="findNewAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.ENG_MEDIA_CHECK_ID
		FROM RG_ENG_MEDIA_CHECK rg
		WHERE rg.CASE_ID=#crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		rg.PARENT_RECORD_ID IS NULL
	</select>

	<!-- this query is used in direct risk factors component -->
	<select id="getEMCList" resultMap="emcListForDirectRisk">


		SELECT rg.ENG_MEDIA_CHECK_ID,
		rg.SUBJECT_ID,
		cs.SUBJECT_NAME,
		rg.PROCESSCYCLEID,
		rg.CASE_ID,
		remcr.RISK_CODE,
		rg.RESEARCH_DOC_ID,
		risk.RISK, rg.SAME_NAME_IND,
		remcr.ENG_MEDIA_CHECK_RISK_ID
		FROM RG_ENG_MEDIA_CHECK rg
		JOIN
		CMS_CASECYCLE cc ON cc.CASECYCLE_ID =
		rg.PROCESSCYCLEID
		JOIN RG_SUBJECT
		cs ON cs.SUBJECT_ID = rg.SUBJECT_ID


		LEFT OUTER JOIN
		RG_ENG_MEDIA_CHK_RISKS remcr ON
		remcr.ENG_MEDIA_CHECK_ID =
		rg.ENG_MEDIA_CHECK_ID
		LEFT OUTER JOIN
		CMS_RISK_MASTER risk ON
		risk.RISK_CODE = remcr.RISK_CODE
		WHERE
		rg.CASE_ID = #crn# AND
		rg.PROCESSCYCLEID=#processCycleId# AND
		upper(rg.IS_AUTO_SAVED)=upper('N')
		AND
		upper(rg.REPORT_INCLUDE_IND)=upper('Y')
		order by rg.RESEARCH_DOC_ID
		ASC,
		rg.SUBJECT_ID ASC
	
	</select>
	
	<!-- this query is used when Direct Risk Factor component is marked done -->
	<select id="getRisksForSubject" resultMap="ReportSubjectVO.getSubjectRisks">
		select distinct risk.risk_code, emc.subject_id from rg_eng_media_chk_risks risk
		join rg_eng_media_check emc on emc.eng_media_check_id = risk.eng_media_check_id
		where emc.case_id = #crn# and emc.processcycleid = #processCycleId#
	</select>
	
	<!-- EMC History  -->
	<select id="getArticleText" resultClass="java.lang.String">
		select ARTICLE_TEXT from
		RG_ENG_MEDIA_CHECK_HST where history_id=#recordId#
	</select>
	
	<select id="getArticleTextType" resultClass="java.lang.String">
		select 
		<isEqual property="type" compareValue="article">
		ARTICLE_TEXT as ARTICLE_TEXT 
		</isEqual>
		<isEqual property="type" compareValue="summary">
		RISK_SUMMARY as ARTICLE_TEXT 
		</isEqual>
		from
		RG_ENG_MEDIA_CHECK_HST where history_id=#recordId#
	</select>

	<select id="getHistoryCount" resultClass="java.lang.Integer">
		SELECT count(*)
		FROM
		RG_ENG_MEDIA_CHECK_HST
		rg where
		rg.ENG_MEDIA_CHECK_ID=#recordId#
	</select>

	<resultMap id="resultHistory"
		class="com.worldcheck.juno.vo.component.EnglishMediaCheckVO">
		<result property="id" column="HISTORY_ID" />
		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		
		<result property="source1" column="source1" />
		<result property="source2" column="source2" />
		<result property="source3" column="source3" />
		<result property="date1" column="DATE1" />
		<result property="date2" column="DATE2" />
		<result property="date3" column="DATE3" />
		<result property="link" column="LINK" />
		<result property="summaryOfRisk" column="RISK_SUMMARY" />
		<result property="issueOfHeadline" column="HEADLINE_ISSUES" />
		<result property="headline" column="HEADLINE" />
		<result property="canPerformLMC" column="LOCAL_MEDIA_CHECK" />
		<result property="headline" column="HEADLINE" />
		<result property="tableBottomNotes" column="TABLE_BOTTOM_NOTES" />

	</resultMap>

	<select id="getHistory" resultMap="resultHistory"
		parameterClass="java.util.HashMap">

		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (SELECT
		rg.HISTORY_ID,
		rg.UPDATED_ON,
		rg.UPDATED_BY,
		 rg.PROCESSCYCLEID,
		cc.DESCRIPTION,rg.source1,rg.source2,rg.source3,
		rg.LINK,
		rg.RISK_SUMMARY,
		rg.HEADLINE,
		rg.TABLE_BOTTOM_NOTES, 
    	rg.DATE1,
		rg.DATE2,
		rg.DATE3,
		HEADLINE_ISSUES,
		LOCAL_MEDIA_CHECK

		FROM RG_ENG_MEDIA_CHECK_HST
		rg,CMS_CASECYCLE cc

		WHERE rg.PROCESSCYCLEID =
		cc.CASECYCLE_ID
		and
		rg.ENG_MEDIA_CHECK_ID=#recordId#
		order by rg.updated_on desc
		) a WHERE ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#

	</select>

	<!-- Include Exclude implementation -->
	<parameterMap id="getParameterMapIncExdReport" class="java.util.Map">

		<parameter property="includeExcludeIds" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="includeExcludeIdentifire" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="userCode" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="errorCode" jdbcType="INTEGER" javaType="java.lang.Integer"
			mode="OUT" />
	</parameterMap>


	<!--- Calling stored procedure -->
	<procedure id="callIncExdReport" parameterMap="getParameterMapIncExdReport">

		{ call
		RG_PROC_IND_EXD_REPORT( ?, ?,
		?,?,'EMC','N','ENG_MEDIA_CHECK_ID','Y','research_doc_id')} 
   </procedure>

	<select id="getMaxTime" parameterClass="java.util.HashMap"
		resultClass="java.util.Date">
		select nvl(max(GRID_UPDATED_ON),sysdate) from rg_eng_media_check rg where
		rg.case_id=#crn#
		and rg.IS_AUTO_SAVED = 'N'
		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>

	</select>

	<update id="updateRdNumber" parameterClass="java.util.HashMap">
		update rg_eng_media_check
		set
		research_doc_id=
		case eng_media_check_id
		<iterate property="recList">
			when #recList[].id# then
			#recList[].rdNumber#
		</iterate>
		END
		<isEqual prepend="," property="changeUpdateOn" compareValue="true">
			GRID_UPDATED_ON = sysdate
		</isEqual>
		where eng_media_check_id IN

		<iterate property="recList" open="(" close=")" conjunction=",">
			#recList[].id#
	    </iterate>

	</update>

	<update id="excludeDocuments" parameterClass="java.util.HashMap">
		update RG_ENG_MEDIA_CHECK set REPORT_INCLUDE_IND = 'N'
		where
		eng_media_check_id NOT IN
		<iterate property="recList" open="(" close=")" conjunction=",">
			#recList[].id#
	    </iterate>
	</update>

	<update id="includeDocuments" parameterClass="java.util.HashMap">
		update RG_ENG_MEDIA_CHECK set REPORT_INCLUDE_IND = 'Y'
		where
		eng_media_check_id IN
		<iterate property="recList" open="(" close=")" conjunction=",">
			#recList[].id#
	    </iterate>
	</update>


	<resultMap id="resultVO"
		class="com.worldcheck.juno.vo.component.EnglishMediaCheckVO">
		<result property="id" column="ENG_MEDIA_CHECK_ID" />

	</resultMap>

	<select id="getOrderedDocs" parameterClass="java.util.HashMap"
		resultMap="resultVO">
		SELECT eng_media_check_id
		FROM RG_ENG_MEDIA_CHECK rg
		WHERE
		rg.CASE_ID = #crn# 
		AND upper(rg.IS_AUTO_SAVED)=upper('N')
		AND
		upper(rg.REPORT_INCLUDE_IND)!='N'
		AND rg.SUBJECT_ID=#subjectId#
		AND rg.PROCESSCYCLEID=#processCycleId#
		order by same_name_ind asc, eng_media_check_id asc
	</select>

	<select id="getAddedOrderedDocs" parameterClass="java.util.HashMap"
		resultMap="resultVO">
		SELECT eng_media_check_id
		FROM RG_ENG_MEDIA_CHECK rg
		WHERE
		rg.CASE_ID = #crn# 
		AND upper(rg.IS_AUTO_SAVED)=upper('N')
		AND
		rg.SUBJECT_ID=#subjectId#
		AND upper(rg.REPORT_INCLUDE_IND)!='N'
		AND
		rg.PROCESSCYCLEID=#processCycleId#
		order by same_name_ind asc, research_doc_id asc
	</select>


	<insert id="insertHistory"
		parameterClass="com.worldcheck.juno.vo.component.EnglishMediaCheckVO">

		insert into RG_ENG_MEDIA_CHECK_HST (
		HISTORY_ID,
		CASE_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,
		UPDATED_ON,
		UPDATED_BY,
		TABLE_BOTTOM_NOTES,
		SAME_NAME_IND,
		SOURCE1,
		SOURCE2,
		SOURCE3,
		DATE1,
		DATE2,
		DATE3,
		LINK,
		RISK_SUMMARY,
		ARTICLE_TEXT,
		HEADLINE,
		ENG_MEDIA_CHECK_ID,TEAM_ID, local_media_check, headline_issues
		)
		 ( select
		RG_ENGLISH_MEDIA_CHECK_HST_SEQ.NEXTVAL,
		rg.CASE_ID,
		rg.SUBJECT_ID,
		rg.PROCESSCYCLEID,
		sysdate,
		rg.UPDATED_BY,
		rg.TABLE_BOTTOM_NOTES,
		rg.SAME_NAME_IND,
		rg.SOURCE1,
		rg.SOURCE2,
		rg.SOURCE3,
		rg.DATE1,
		rg.DATE2,
		rg.DATE3,
		rg.LINK,
		rg.RISK_SUMMARY,
		rg.ARTICLE_TEXT,
		rg.HEADLINE,
		rg.ENG_MEDIA_CHECK_ID,rg.TEAM_ID, local_media_check, headline_issues from RG_ENG_MEDIA_CHECK  rg where rg.ENG_MEDIA_CHECK_ID=#id#
		)
	</insert>


	<insert id="makeCopyRisk" parameterClass="java.util.HashMap">
		INSERT INTO
		RG_ENG_MEDIA_CHK_RISKS
		(ENG_MEDIA_CHECK_RISK_ID,
		RISK_CODE,
		ENG_MEDIA_CHECK_ID)


		SELECT RG_ENG_MEDIA_CHECK_RISKS_SEQ.NEXTVAL,
		RISK_CODE,#id# from RG_ENG_MEDIA_CHK_RISKS
		Where
		ENG_MEDIA_CHECK_ID=#recordId#
		
		</insert>

	<!-- this query needs to be changed to set rd number to Integer.MAX_VALUE -->
	<insert id="makeCopy" parameterClass="java.util.HashMap">
		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_ENG_MEDIA_CHECK_SEQ.NEXTVAL from dual
	    </selectKey>
		insert into RG_ENG_MEDIA_CHECK (
		ENG_MEDIA_CHECK_ID,
		CASE_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,
		RESEARCH_DOC_ID,
		UPDATED_ON,
		UPDATED_BY,
		TABLE_BOTTOM_NOTES,
		SAME_NAME_IND,
		SOURCE1,
		SOURCE2,
		SOURCE3,
		DATE1,
		DATE2,
		DATE3,
		RISK_SUMMARY,
		LINK,
		HEADLINE,
		ARTICLE_TEXT,
		REPORT_INCLUDE_IND,
		IS_AUTO_SAVED,TEAM_ID, local_media_check, headline_issues
		)

		select
		#id#,

		CASE_ID,
		SUBJECT_ID,
		#processCycleId#,
		2147483647,
		sysdate,
		#userName#,
		TABLE_BOTTOM_NOTES,
		SAME_NAME_IND,
		SOURCE1,
		SOURCE2,
		SOURCE3,
		DATE1,
		DATE2,
		DATE3,
		RISK_SUMMARY,
		LINK,
		HEADLINE,
		ARTICLE_TEXT,
		'Y',
		IS_AUTO_SAVED ,#teamId#, local_media_check, headline_issues
		from RG_ENG_MEDIA_CHECK
		where
		ENG_MEDIA_CHECK_ID=#recordId#

	</insert>

	<select id="getLinkDocArticle" resultClass="java.lang.String">
		select ARTICLE_TEXT from
		RG_ENG_MEDIA_CHECK where ENG_MEDIA_CHECK_ID=#recordId#
	</select>
	
	
	<delete id="unlinkExclude">
		delete FROM RG_ENG_RELATED_DOCS WHERE
		CHILD_DOC_ID IN
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
	    </iterate>
	</delete>
	
	
	
	<insert id="insertHistoryBeforeDeletion"
		parameterClass="java.util.HashMap">
		insert into RG_ENG_MEDIA_CHECK_HST (
		HISTORY_ID,
		CASE_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,
		UPDATED_ON,
		UPDATED_BY,ENG_MEDIA_CHECK_ID
		
		)
    
	    SELECT
		RG_ENGLISH_MEDIA_CHECK_HST_SEQ.NEXTVAL,inner_view.*
		FROM
		<iterate property="recList" conjunction="UNION ALL" open="("
			close=")">
			 (SELECT CASE_ID,SUBJECT_ID,PROCESSCYCLEID,sysdate,#userName# UPDATED_BY ,#recList[]# ENG_MEDIA_CHECK_ID
			  from RG_ENG_MEDIA_CHECK  
   			 where ENG_MEDIA_CHECK_ID=#recList[]#)
			
		</iterate>
		inner_view
    </insert>
    
    
    
    <insert id="insertLocalLanguagename" parameterClass="java.util.HashMap">
		INSERT INTO rg_local_subject_languages 
			(ID,SUBJECT_ID, PROCESSCYCLEID, COMPONENT_ID, CASE_ID, UPDATED_ON, UPDATED_BY, LOCAL_LANGUAGE_NAME)
		   SELECT RG_LOCAL_LANGUAGE_NAME_SEQ.NEXTVAL, inner_view.*
		  	FROM 
			<iterate property="recList" conjunction="UNION ALL" open="(" close=")">
				select #recList[].subjectId# SUBJECT_ID,
					   #recList[].processCycleId# PROCESSCYCLEID,
					   #recList[].componentId# COMPONENT_ID,
					   #recList[].crn# CASE_ID,
					   sysdate, 'USER', #recList[].localLanguageName# LOCAL_LANGUAGE_NAME FROM DUAL
			</iterate>
		inner_view
	</insert>
	
	
	<resultMap id="records"
		class="com.worldcheck.juno.vo.component.LocalLanguageNameVO" >
		<result property="id" column="ID" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="localLanguageName" column="LOCAL_LANGUAGE_NAME" />
	</resultMap>

	<select id="getLocalLnaguageName" resultMap="records">
		SELECT ID, SUBJECT_ID, PROCESSCYCLEID, LOCAL_LANGUAGE_NAME   
			FROM rg_local_subject_languages WHERE CASE_ID = #crn# 
			ORDER BY SUBJECT_ID, PROCESSCYCLEID ASC
	</select>
	
	<select id="getNextDocumentNumber" resultClass="java.lang.Long" parameterClass="java.util.HashMap">
		select nvl(max(research_doc_id),0)+1 from rg_eng_media_check 
		where subject_id = #subjectId# and processcycleid = #processCycleId#
		and IS_AUTO_SAVED='N'
		<isEqual property="sameName" compareValue="N" prepend="and">
			same_name_ind = 'N'
		</isEqual>
	</select>
	
	<delete id="deleteLocalLanguageName" parameterClass="java.util.HashMap">
		delete FROM rg_local_subject_languages WHERE
		CASE_ID = #crn# and subject_id in (select subject_id from rg_subject where crn = #crn# and entity_type_id = #componentLevel#)
	</delete>

	<delete id="deleteComponentData" parameterClass="java.util.HashMap">
		delete from rg_eng_media_check where case_id = #crn# and processcycleid in ($processCycleId$) and subject_id != #subjectId#
	</delete>
</sqlMap>