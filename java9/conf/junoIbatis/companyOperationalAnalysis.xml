<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="CompanyOperationalVO">

	<resultMap id="result"
		class="com.worldcheck.juno.vo.component.CompanyOperationalVO">
		<result property="companiOpIid" column="COMPANY_OP_ANA_ID" />
		<result property="articleText" column="ARTICLE_TEXT" />
	</resultMap>

	<resultMap id="resultHistory" class="com.worldcheck.juno.vo.component.CompanyOperationalVO">
		<result property="articleText" column="ARTICLE_TEXT" />		
		<result property="id" column="history_id" />
		<result property="crn" column="case_id" />
		<result property="displayDate" column="displayDate" />
		<result property="processCycleName" column="description" />
		<result property="updateBy" column="updated_by" />		
		<result property="articleText" column="ARTICLE_TEXT" />	
	</resultMap>
	
	<select id="getHistory" parameterClass="java.util.HashMap" resultMap="resultHistory">		
		SELECT * FROM (select rownum rn, temp.* from (select rch.article_text, rch.case_id, rch.company_op_ana_id, rch.history_id,
		rch.processcycle_id, rch.UPDATED_BY,
		to_char(rch.UPDATED_ON, 'DD-Mon-YY HH24:MI:SS') displayDate, cc.description
		from rg_company_op_analysis_hst rch
		left outer join CMS_CASECYCLE cc on cc.casecycle_id = rch.processcycle_id
		where rch.company_op_ana_id = #recordId#
		order by rch.updated_on desc) temp 
		WHERE
		ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#	
	</select>
	
   <select id="getHistoryCountForCRN" resultClass="java.lang.Long"
		parameterClass="java.lang.String">
		select count(*) from rg_company_op_analysis_hst where
		case_id=#crn#
   </select>
   
	<select id="getHistoryCount" resultClass="java.lang.Integer"
		parameterClass="java.lang.Long">
		SELECT count(*)
		FROM rg_company_op_analysis_hst rg
		WHERE
		rg.company_op_ana_id=#recordIdVal#
	</select>


	<insert id="insert" parameterClass="com.worldcheck.juno.vo.component.CompanyOperationalVO">
	<selectKey keyProperty="id" resultClass="long">
		SELECT RG_COMPANY_OP_ANALYSIS_SEQ.NEXTVAL from dual
	</selectKey>
		insert into RG_COMPANY_OP_ANALYSIS (
		CASE_ID, ARTICLE_TEXT,UPDATED_ON,UPDATED_BY,PROCESSCYCLEID,COMPANY_OP_ANA_ID,IS_AUTO_SAVED)
		values 
		( #crn#,#articleText#,sysdate,#updateBy#,#processCycleId#,#id#,#isAutoSave#	)        
	</insert>

	<insert id="insertHistory" parameterClass="com.worldcheck.juno.vo.component.CompanyOperationalVO">
	<selectKey keyProperty="companiOpIid" resultClass="long">
		SELECT RG_COMPANY_OP_ANALYSIS_HST_SEQ.NEXTVAL from dual
	</selectKey>
		insert into RG_COMPANY_OP_ANALYSIS_HST 
		( HISTORY_ID,CASE_ID, ARTICLE_TEXT,UPDATED_ON,UPDATED_BY,PROCESSCYCLE_ID,COMPANY_OP_ANA_ID)
		values 
		( #companiOpIid#,#crn#,#articleText#,sysdate,#updateBy#,#processCycleId#, #id# )		
	</insert>

		
	<resultMap id="resultListByCRN" class="com.worldcheck.juno.vo.component.CompanyOperationalVO">
		<result property="id" column="COMPANY_OP_ANA_ID" />
		<result property="crn" column="case_id" />
		<result property="displayDate" column="displayDate" />
		<result property="processCycleName" column="description" />
		<result property="updateBy" column="updated_by" />
	</resultMap>

	<select id="listByCRN" parameterClass="java.util.HashMap" resultMap="resultListByCRN">		
		SELECT * FROM (select rownum rn, temp.* from (select rcoa.company_op_ana_id, rcoa.case_id,
		rcoa.processcycleid, NVL(rcoa.UPDATED_BY,'System') UPDATED_BY,
		to_char(rcoa.UPDATED_ON, 'DD-Mon-YY HH24:MI:SS') displayDate, cc.description
		from rg_company_op_analysis rcoa
		left outer join CMS_CASECYCLE cc on cc.casecycle_id = rcoa.processcycleid 
		where upper(rcoa.case_id)=upper(#crn#) AND upper(IS_AUTO_SAVED)=upper('N') 
		order by cc.processcycle_order desc ) temp 
		WHERE
		ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#
	</select>
	
   <update id="insertDefaultEntries" parameterClass="java.util.HashMap">

		declare
		recordId number(10);
		hstId number(10);
		processList
		varray_varchar;
		processId number;
		crn VARCHAR2(200):=#crn#;

		userName
		VARCHAR2(200):=#userName#;


		begin
		processList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].id#
				 </iterate>
		;
		for elem in 1 .. processList.count
		loop
		processId:=processList(elem);

		select RG_COMPANY_OP_ANALYSIS_SEQ.NEXTVAL into recordId from dual;
		<!-- select RG_EXECUTIVE_SUMMARY_HST_SEQ.nextval into hstId from dual;-->
		insert into
		RG_COMPANY_OP_ANALYSIS (
		CASE_ID,UPDATED_ON,UPDATED_BY,PROCESSCYCLEID,COMPANY_OP_ANA_ID
		)

		values(crn ,sysdate,userName,processId,recordId );

		<!-- insert into
		RG_EXECUTIVE_SUMMARY_HST(HISTORY_ID ,EXE_SUM_ID,
		CASE_ID,PROCESSCYCLEID,UPDATED_ON,UPDATED_BY)

		values( hstId, recordId,
		crn, processId , sysdate,userName);-->


		end loop;

		commit;

		END;
	</update>
	
   <select id="getProcessCycleList" parameterClass="java.util.HashMap"
		resultMap="ProcessCycleVO.processCycleList">
		
		select res.processcycleid Process_Cycle_Id,cc.DESCRIPTION
		Process_Cycle
		from RG_COMPANY_OP_ANALYSIS res, cms_casecycle cc
		where
		 res.case_id=#crn#
		and cc.casecycle_id=res.processcycleid
		and upper(res.IS_AUTO_SAVED)=upper('N')
		
	</select>
	
	<select id="getProcessCycleListForId" parameterClass="java.util.HashMap"
		resultMap="ProcessCycleVO.processCycleList">

		select 'Interim 1' Process_Cycle , 2 Process_Cycle_Id from cms_clientcase cc
		where cc.CLIENT_INT_DUEDATE1 is not null
		AND
		NOT EXISTS
		(select
		summary.COMPANY_OP_ANA_ID from RG_COMPANY_OP_ANALYSIS summary
		where
		summary.COMPANY_OP_ANA_ID !=#recordId#
		and summary.processcycleid = 2 and
		upper(summary.IS_AUTO_SAVED)=upper('N'))
		and cc.crn = #crn#
		UNION ALL
		select 'Interim 2' Process_Cycle, 3 Process_Cycle_Id from
		cms_clientcase cc
		where cc.CLIENT_INT_DUEDATE2 is not null
		AND
		NOT EXISTS
		(select summary.COMPANY_OP_ANA_ID from RG_COMPANY_OP_ANALYSIS summary
		where
		summary.COMPANY_OP_ANA_ID != #recordId#
		and summary.processcycleid = 3 and
		upper(summary.IS_AUTO_SAVED)=upper('N'))
		and cc.crn = #crn#
		UNION ALL
		select 'Final' Process_Cycle, 1 Process_Cycle_Id from
		cms_clientcase
		cc
		where cc.FINAL_DUE_DATE is not null
		AND
		NOT EXISTS
		(select
		summary.COMPANY_OP_ANA_ID from RG_COMPANY_OP_ANALYSIS summary
		where
		summary.COMPANY_OP_ANA_ID != #recordId#
		and summary.processcycleid = 1 and
		upper(summary.IS_AUTO_SAVED)=upper('N'))
		and cc.crn = #crn#
		order by
		process_cycle_id
		
	</select>

	<select id="getSearchCount" resultClass="java.lang.Integer"
		parameterClass="java.util.HashMap">

		select count(*)
		from rg_company_op_analysis rcoa
		where upper(rcoa.case_id)=upper(#crn#) 

	</select>
	
	

	<update id="update" parameterClass="com.worldcheck.juno.vo.component.CompanyOperationalVO">
		update RG_COMPANY_OP_ANALYSIS set
		ARTICLE_TEXT = #articleText#,
		UPDATED_ON=sysdate,
		
		updated_by=#updateBy#
		where
		company_op_ana_id=#id# AND 
		upper(IS_AUTO_SAVED)=upper('N')
	  </update>

	
	<resultMap id="resultVO" class="com.worldcheck.juno.vo.component.CompanyOperationalVO" >
		<result property="id" column="company_op_ana_id" />
		<result property="crn" column="CASE_ID" />
		<result property="processCycleName" column="DESCRIPTION" />		
		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />		
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="articleText" column="ARTICLE_TEXT" />				
	</resultMap>
	
	<select id="getById" resultMap="resultVO" >
		select rcoa.company_op_ana_id, rcoa.case_id,
		rcoa.processcycleid, rcoa.updated_by, rcoa.UPDATED_ON, cc.description, rcoa.article_text
		from rg_company_op_analysis rcoa
		left outer join CMS_CASECYCLE cc on cc.casecycle_id = rcoa.processcycleid 
		where rcoa.company_op_ana_id=#id#
	</select>

	
	<update id="updateAutoSave" parameterClass="com.worldcheck.juno.vo.component.CompanyOperationalVO">
		update RG_COMPANY_OP_ANALYSIS set
		ARTICLE_TEXT = #articleText#,
		updated_on=sysdate,
		
		UPDATED_BY=#updateBy#
		where
		company_op_ana_id=#autoSaveId#
		AND upper(IS_AUTO_SAVED)=upper('Y')
	</update>

	<select id="findById" resultClass="int">
		select count(rg.company_op_ana_id)
		FROM RG_COMPANY_OP_ANALYSIS rg
		WHERE
		rg.company_op_ana_id = #id#
	</select>

	
	<!--generic query-->
	<select id="findAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.company_op_ana_id
		FROM RG_COMPANY_OP_ANALYSIS rg
		WHERE
		rg.CASE_ID=#crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		rg.PARENT_RECORD_ID = #parentId#
	</select>

	<!--generic query-->
	<select id="findNewAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.company_op_ana_id
		FROM RG_COMPANY_OP_ANALYSIS rg
		WHERE CASE_ID=#crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</select>

	<insert id="insertAutoSave" parameterClass="com.worldcheck.juno.vo.component.CompanyOperationalVO">
		<selectKey keyProperty="companiOpIid" resultClass="long">
			SELECT
			RG_COMPANY_OP_ANALYSIS_SEQ.NEXTVAL from dual
	  </selectKey>
		INSERT INTO RG_COMPANY_OP_ANALYSIS
		(company_op_ana_id,CASE_ID,PROCESSCYCLEID,UPDATED_ON,UPDATED_BY, ARTICLE_TEXT, IS_AUTO_SAVED, PARENT_RECORD_ID)
		VALUES
		(#companiOpIid#,#crn#,#processCycleId#,sysdate,#updateBy#, #articleText#, 'Y', #id#)
	</insert>

	<resultMap id="autoResultVO" class="com.worldcheck.juno.vo.component.CompanyOperationalVO">
		<result property="id" column="company_op_ana_id" />
		<result property="crn" column="CASE_ID" />
		<result property="processCycleName" column="DESCRIPTION" />		
		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />	
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="articleText" column="ARTICLE_TEXT" />	
	</resultMap>

	<select id="getAutoSaveById" resultMap="autoResultVO" >

		SELECT
		rbs.company_op_ana_id,rbs.PROCESSCYCLEID,rbs.CASE_ID,
		rbs.UPDATED_ON,rbs.UPDATED_BY,rbs.ARTICLE_TEXT,cmscase.DESCRIPTION		
		FROM RG_COMPANY_OP_ANALYSIS rbs,CMS_CASECYCLE cmscase
		WHERE 
		rbs.PROCESSCYCLEID=cmscase.CASECYCLE_ID
		AND rbs.company_op_ana_id=#id#
		AND upper(IS_AUTO_SAVED)=upper('Y')

	</select>
	<select id="getAutoSave" resultMap="autoResultVO" parameterClass="java.util.HashMap">

		SELECT
		rbs.company_op_ana_id,rbs.PROCESSCYCLEID,rbs.CASE_ID,
		rbs.UPDATED_ON,rbs.UPDATED_BY, rbs.TITLE,rbs.ARTICLE_TEXT,cmscase.DESCRIPTION
		FROM RG_COMPANY_OP_ANALYSIS rbs,CMS_CASECYCLE cmscase
		WHERE 
		rbs.PROCESSCYCLEID=cmscase.CASECYCLE_ID
		ANd rbs.CASE_ID=#crn#	
		ANd rbs.PROCESSCYCLEID=#processCycle#	
		AND upper(IS_AUTO_SAVED)=upper('Y')

	</select>

	
	<delete id="deleteNewAutoSave">
		delete FROM RG_COMPANY_OP_ANALYSIS WHERE
		CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</delete>

	<!--generic query-->
	<delete id="deleteAutoSave">
		delete FROM RG_COMPANY_OP_ANALYSIS
		where CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID = #parentId#
	</delete>		
	<delete id="delete">
		delete FROM RG_COMPANY_OP_ANALYSIS WHERE
		company_op_ana_id = #id#
	</delete>
	
	<resultMap id="miniRecord"
		class="com.worldcheck.juno.vo.component.CompanyOperationalVO"
		groupBy="id">
		<result property="id" column="COMPANY_OP_ANA_ID" />
		<result property="updateOn" column="UPDATED_ON" />
	</resultMap>

	<select id="getUpdationTimeById" resultMap="miniRecord">
		SELECT
		rg.COMPANY_OP_ANA_ID,
		rg.UPDATED_ON
		FROM RG_COMPANY_OP_ANALYSIS rg
		WHERE
		rg.COMPANY_OP_ANA_ID = #id#
	</select>
	
	
	
	<select id="getArticleText" resultClass="java.lang.String">
		select ARTICLE_TEXT from
		RG_COMPANY_OP_ANALYSIS_HST where history_id=#recordId#
	</select>
</sqlMap>
