<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="PersonalDetailsSummaryVO">


	<!-- Inserting into Personal Details Component  -->
	<insert id="insert"
		parameterClass="com.worldcheck.juno.vo.component.PersonalDetailsSummaryVO">
		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_PERSONAL_SUMMARY_SEQ.NEXTVAL from dual
		</selectKey>

		insert into RG_PERSONAL_SUMMARY (
		PERSONAL_SUMMARY_ID,
		CASE_ID,
		PROCESSCYCLEID,
		TABLE_BOTTOM_NOTES,
		TITLE,
		UPDATED_ON,UPDATED_BY,
		SUBJECT_ID,
		IS_AUTO_SAVED
		)values (
		#id#,
		#crn#,#processCycleId#,#tableBottomNotes#,
		#title#,
		sysdate,#updateBy#,
		#subjectId#,
		#isAutoSave#
		)
	</insert>
	<!--generic query-->
	<insert id="insertAutoSave">
		<selectKey keyProperty="autoSaveId" resultClass="long">
			SELECT
			RG_PERSONAL_SUMMARY_SEQ.NEXTVAL from dual
	  </selectKey>
		insert into RG_PERSONAL_SUMMARY (
		PERSONAL_SUMMARY_ID,
		CASE_ID,
		PROCESSCYCLEID,
		SUBJECT_ID,
		TITLE,
		UPDATED_ON,
		UPDATED_BY,
		TABLE_BOTTOM_NOTES,
		IS_AUTO_SAVED,
		PARENT_RECORD_ID
		)values (
		#autoSaveId#,
		#crn#,
		#processCycleId#,
		#subjectId#,
		#title#,
		sysdate,
		#updateBy#,
		#tableBottomNotes#,
		'Y',
		#id#
		)
	</insert>

	<insert id="inserthistory"
		parameterClass="com.worldcheck.juno.vo.component.PersonalDetailsSummaryVO">
		<selectKey keyProperty="historyId" resultClass="long">
			SELECT
			RG_PERSONAL_SUMMARY_HST_SEQ.NEXTVAL from dual
	 	</selectKey>
		insert into
		RG_PERSONAL_SUMMARY_HST (
		HISTORY_ID,
		PERSONAL_SUMMARY_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,
		TITLE,
		TABLE_BOTTOM_NOTES
		)
		values(
		#historyId#,#id#,#subjectId#,#processCycleId#,#crn#,sysdate,#updateBy#,#title#,#tableBottomNotes#
		)

	</insert>
	<insert id="insertTableHistory" parameterClass="map">
		insert into
		RG_PERSONAL_DETAILS_HST
		(HISTORY_ID,PERSONAL_DETAILS_ID,PERSONAL_SUMMARY_ID,SUMMARY_HISTORY_ID,ROW_NO,FIELD_NAME,FIELD_VALUE,COMMENTS)
		(select RG_PERSONAL_DETAILS_HST_SEQ.nextval,
		PERSONAL_DETAILS_ID,#pdId#,#historyId#,ROW_NO,
		FIELD_NAME,FIELD_VALUE,COMMENTS
		from RG_PERSONAL_DETAILS where
		PERSONAL_SUMMARY_ID =#pdId#)
	</insert>

	<resultMap id="personalDetailsTableRows"
		class="com.worldcheck.juno.vo.component.PersonalDetailsVO" groupBy="id">
		<result property="id" column="PERSONAL_DETAILS_ID" />
		<result property="fieldName" column="FIELD_NAME" />
		<result property="fieldValue" column="FIELD_VALUE" />
		<result property="comment" column="COMMENTS" />
		<result property="rowNo" column="ROW_NO" />
		<result property="parentId" column="PERSONAL_SUMMARY_ID" />
	</resultMap>
	<resultMap id="resultVO"
		class="com.worldcheck.juno.vo.component.PersonalDetailsSummaryVO"
		groupBy="id">
		<result property="id" column="PERSONAL_SUMMARY_ID" />
		<result property="crn" column="CASE_ID" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="SUBJECT_NAME" />

		<result property="tableBottomNotes" column="TABLE_BOTTOM_NOTES" />
		<result property="title" column="TITLE" />

		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />

		<result property="isAutoSave" column="IS_AUTO_SAVED" />
		<result property="personalDetailsTableRows"
			resultMap="PersonalDetailsSummaryVO.personalDetailsTableRows"
			notNullColumn="PERSONAL_DETAILS_ID" />
	</resultMap>

	<!--generic query-->
	<select id="getById" resultMap="resultVO">
		SELECT rg.PERSONAL_SUMMARY_ID,
		rg.CASE_ID,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.SUBJECT_ID,
		cs.REPORT_SUBJECT_NAME SUBJECT_NAME,
		rg.TABLE_BOTTOM_NOTES,
		rg.TITLE,
		rg.UPDATED_ON,rg.UPDATED_BY,
		rg.IS_AUTO_SAVED,
		pd.ROW_NO,
		pd.FIELD_NAME,pd.FIELD_VALUE,
		pd.PERSONAL_DETAILS_ID,pd.COMMENTS,
		pd.PERSONAL_SUMMARY_ID

		FROM RG_PERSONAL_SUMMARY rg
		LEFT
		OUTER JOIN
		RG_PERSONAL_DETAILS pd ON pd.PERSONAL_SUMMARY_ID =
		rg.PERSONAL_SUMMARY_ID
		JOIN CMS_CASECYCLE cc ON cc.CASECYCLE_ID =
		rg.PROCESSCYCLEID
		JOIN RG_SUBJECT cs ON cs.SUBJECT_ID = rg.SUBJECT_ID
		WHERE
		rg.PERSONAL_SUMMARY_ID =#id#
		ORDER
		BY pd.ROW_NO ASC
	</select>

	<!--generic query-->
	<update id="update"
		parameterClass="com.worldcheck.juno.vo.component.PersonalDetailsSummaryVO">
		update RG_PERSONAL_SUMMARY
		set TITLE = #title#,
		TABLE_BOTTOM_NOTES = #tableBottomNotes#,
		PROCESSCYCLEID=#processCycleId# ,
		UPDATED_ON=sysdate,
		UPDATED_BY=#updateBy#,
		IS_AUTO_SAVED = 'N',
		PARENT_RECORD_ID = null
		where PERSONAL_SUMMARY_ID = #id#
	</update>

	<!--generic query-->
	<update id="updateAutoSave"
		parameterClass="com.worldcheck.juno.vo.component.PersonalDetailsSummaryVO">
		update RG_PERSONAL_SUMMARY set
		TITLE=#title#,
		TABLE_BOTTOM_NOTES=#tableBottomNotes#,
		PROCESSCYCLEID=#processCycleId#
		,
		UPDATED_ON=sysdate,
		UPDATED_BY=#updateBy#,
		IS_AUTO_SAVED = 'Y',
		PARENT_RECORD_ID = #id#
		where
		PERSONAL_SUMMARY_ID = #autoSaveId#
	</update>

	<resultMap id="personlDtlList"
		class="com.worldcheck.juno.vo.component.PersonalDetailsSummaryVO"
		groupBy="id">
		<result property="id" column="PERSONAL_SUMMARY_ID" />
		<result property="crn" column="CASE_ID" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="SUBJECT_NAME" />
		<result property="displayDate" column="displayDate" />
		<result property="updateBy" column="UPDATED_BY" />

	</resultMap>
	<!--generic query-->

	<select id="listByCRN" resultMap="personlDtlList"
		parameterClass="java.util.HashMap">
		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (
		SELECT
		rg.PERSONAL_SUMMARY_ID,
		rg.CASE_ID,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.SUBJECT_ID,
		cs.REPORT_SUBJECT_NAME SUBJECT_NAME,
		to_char(rg.UPDATED_ON, 'DD-Mon-YY
		HH24:MI:SS') as displayDate,		
		NVL(rg.UPDATED_BY,'System') UPDATED_BY

		FROM RG_PERSONAL_SUMMARY
		rg
		,CMS_CASECYCLE cc, RG_SUBJECT cs
		WHERE
		CASE_ID=#crn# and
		rg.PROCESSCYCLEID = cc.CASECYCLE_ID and rg.SUBJECT_ID
		= cs.SUBJECT_ID
		and cs.ENTITY_TYPE_ID=#componentLevel#
		AND
		upper(rg.IS_AUTO_SAVED)=upper('N')
		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>

		order by rg.SUBJECT_ID
		ASC,cc.PROCESSCYCLE_ORDER desc
		) a WHERE ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#
	</select>

	<select id="getSearchCount" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">

		SELECT count(*)
		FROM RG_PERSONAL_SUMMARY rg
		,CMS_CASECYCLE cc,
		RG_SUBJECT cs
		WHERE
		CASE_ID=#crn# and
		rg.PROCESSCYCLEID =
		cc.CASECYCLE_ID and
		rg.SUBJECT_ID
		= cs.SUBJECT_ID
		and
		cs.ENTITY_TYPE_ID=#componentLevel#
		AND
		upper(rg.IS_AUTO_SAVED)=upper('N')

		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>

	</select>
	<!-- Procedure for Default Entries into Personal Details Component -->
	<select id="getHistoryCountForCRN" resultClass="java.lang.Long"
		parameterClass="java.lang.String">
		select count(*) from (
		select case_id from RG_PERSONAL_SUMMARY where
		case_id=#crn#
		union
		select case_id from RG_PERSONAL_SUMMARY_HST where
		case_id=#crn#
		)
  	</select>
	<!-- Update Summary table by entry of Default records.-->
	<update id="insertDefaultEntries" parameterClass="java.util.HashMap">
		declare
		recordId number(10);
		hstId number(10);
		detailId number(10);
		detailHistId number(10);

		subList varray_varchar;
		subId number;
		crn
		VARCHAR2(200):=#crn#;
		processCycle number:=#processCycleId#;
		userName
		VARCHAR2(200):=#userName#;

		begin
		subList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].subjectId#
				 </iterate>
		;

		for elem in 1
		.. subList.count

		loop
		subId:=subList(elem);
		select
		RG_PERSONAL_SUMMARY_SEQ.nextval into
		recordId from dual;

		INSERT INTO
		RG_PERSONAL_SUMMARY
		(PERSONAL_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,IS_AUTO_SAVED,TITLE)
		values(recordId, subId ,
		processCycle, crn
		,sysdate,userName
		,'N','Personal Details Summary');

		for
		rown in 1..15 Loop


		DBMS_OUTPUT.PUT_LINE('row is 1');


		select
		RG_PERSONAL_DETAILS_SEQ.nextval into
		detailId from dual;

		insert
		into
		RG_PERSONAL_DETAILS
		(PERSONAL_DETAILS_ID,PERSONAL_SUMMARY_ID,ROW_NO,FIELD_NAME,COMMENTS)
		SELECT detailId,recordId,ROW_NO,FIELD_NAME,COMMENTS FROM
		RG_PERSONAL_DETAILS_STATIC where ROW_NO=rown;

		END
		LOOP;
		END LOOP;
		END;

	</update>

	<!--generic query-->
	<select id="findAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.PERSONAL_SUMMARY_ID
		FROM RG_PERSONAL_SUMMARY rg
		WHERE
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		rg.PARENT_RECORD_ID =
		#parentId#
	</select>

	<!--generic query-->
	<select id="findNewAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.PERSONAL_SUMMARY_ID
		FROM RG_PERSONAL_SUMMARY rg
		WHERE CASE_ID=#crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</select>

	<!--generic query-->
	<select id="findById" resultClass="int">
		select
		count(rg.PERSONAL_SUMMARY_ID)
		FROM RG_PERSONAL_SUMMARY rg
		WHERE
		rg.PERSONAL_SUMMARY_ID = #id#
	</select>

	<!--generic query-->
	<delete id="deleteNewAutoSave">
		delete FROM RG_PERSONAL_SUMMARY WHERE
		CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</delete>

	<!--generic query-->
	<delete id="deleteAutoSave">
		delete FROM RG_PERSONAL_SUMMARY WHERE
		CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID = #parentId#
	</delete>




	<!--generic query-->
	<delete id="delete">
		delete FROM RG_PERSONAL_SUMMARY WHERE
		PERSONAL_SUMMARY_ID = #id#
	</delete>

	<!--generic query-->
	<delete id="deleteIds">
		delete FROM RG_PERSONAL_SUMMARY WHERE
		PERSONAL_SUMMARY_ID in
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
	    </iterate>
	</delete>
	<!-- Table Row Operations -->

	<update id="insertRow" parameterClass="java.util.HashMap">


		declare

		recordId number;
		rowNoList varray_varchar;
		fieldNameList varray_varchar;
		fieldValueList varray_varchar;
		commentList varray_varchar;
		detailIdList varray_varchar;
		

		rowNoId number(10);
		fieldName VARCHAR2(4000);
		fieldValue VARCHAR2(4000);
		comment VARCHAR2(4000);
		parentId number:=#parentId#;
		detailId number(10);


		begin
		rowNoList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].rowNo#
				 </iterate>
		;
		fieldNameList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].fieldName#
				 </iterate>
		;
		fieldValueList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].fieldValue#
				 </iterate>
		;
		commentList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].comment#
				 </iterate>
		;
		detailIdList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].id#
				 </iterate>
		;
		


		for elem in 1 .. rowNoList.count
		loop
				rowNoId:=rowNoList(elem);
				fieldName:=fieldNameList(elem);
				fieldValue:=fieldValueList(elem);
				comment:=commentList(elem);
				detailId := detailIdList(elem);
				
				IF detailId = 0 THEN
		
						select RG_PERSONAL_DETAILS_SEQ.NEXTVAL
						into recordId from dual;
				
						insert into
						RG_PERSONAL_DETAILS (
						PERSONAL_DETAILS_ID,
						ROW_NO,
						FIELD_NAME,
						FIELD_VALUE,
						COMMENTS,
						PERSONAL_SUMMARY_ID
						)
				
						values(recordId, rowNoId ,
						fieldName , fieldValue, comment, parentId);
				
				
				ELSE
				
					update
					RG_PERSONAL_DETAILS set
						ROW_NO=rowNoId,
						FIELD_NAME=fieldName,
						FIELD_VALUE=fieldValue,
						COMMENTS=comment
						where
						PERSONAL_DETAILS_ID = detailId;
			   END IF;

		end loop;

		commit;

		END;
	</update>


	<!--<insert id="insertRow" parameterClass="com.worldcheck.juno.vo.component.PersonalDetailsVO">
		insert into
		RG_PERSONAL_DETAILS (
		PERSONAL_DETAILS_ID,
		ROW_NO,
		FIELD_NAME,
		FIELD_VALUE,
		COMMENTS,
		PERSONAL_SUMMARY_ID
		)values (
		RG_PERSONAL_DETAILS_SEQ.NEXTVAL,
		#rowNo#,
		#fieldName#,
		#fieldValue#,
		#comment#,
		#parentId#
		)
	</insert>-->

	<update id="updateRow" parameterClass="com.worldcheck.juno.vo.component.PersonalDetailsVO">
		update
		RG_PERSONAL_DETAILS
		set
		ROW_NO=#rowNo#,
		FIELD_NAME =#fieldName#,
		FIELD_VALUE =#fieldValue#
		where
		PERSONAL_DETAILS_ID = #id#
	</update>

	<delete id="deleteRowsForParent">
		delete FROM RG_PERSONAL_DETAILS WHERE
		PERSONAL_SUMMARY_ID = #id#
	</delete>

	<delete id="deleteRows">
		delete FROM RG_PERSONAL_DETAILS WHERE
		PERSONAL_DETAILS_ID IN
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
	    </iterate>
	</delete>

	<!--generic query-->
	<select id="getSubProcCycleList" resultMap="ReportSubjectVO.subProcCycleList">
		select rem.subject_id
		subject_id,
		rem.processcycleid
		Process_Cycle_Id,cs.subject_name
		subject_name,
		ccl.DESCRIPTION
		Process_Cycle
		from RG_PERSONAL_SUMMARY rem,
		RG_SUBJECT cs
		,CMS_CASECYCLE ccl
		where cs.CRN = rem.case_id
		and
		ccl.CASECYCLE_ID=
		rem.processcycleid
		and cs.subject_id =rem.subject_id
		and rem.case_id = #crn#
		and upper(rem.IS_AUTO_SAVED)=upper('N')
		order by cs.subject_id, rem.processcycleid

	</select>
	<!--generic query-->
	<select id="getProcessCycleList" parameterClass="java.util.HashMap"
		resultMap="ProcessCycleVO.processCycleList">
		select rem.processcycleid Process_Cycle_Id,cc.DESCRIPTION
		Process_Cycle
		from RG_PERSONAL_SUMMARY rem, cms_casecycle cc
		where
		rem.subject_id=#subId# and rem.case_id=#crn#
		and cc.casecycle_id=
		rem.processcycleid
		and upper(rem.IS_AUTO_SAVED)=upper('N')
		and
		rem.PERSONAL_SUMMARY_ID != #recordId#
		
	</select>

	<select id="checkIfExist" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		select count(*) from RG_PERSONAL_SUMMARY where
		PROCESSCYCLEID=#processCycleId# and SUBJECT_ID = #subjectId# and
		case_id=#crn# and upper(IS_AUTO_SAVED)=upper('N')
	</select>
	<!-- makeCopyPersonal  Of Summary -->

	<insert id="makeCopy" parameterClass="java.util.HashMap">

		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_PERSONAL_SUMMARY_SEQ.nextval from dual
	  </selectKey>

		insert into RG_PERSONAL_SUMMARY (
		PERSONAL_SUMMARY_ID,
		CASE_ID,
		PROCESSCYCLEID,
		TABLE_BOTTOM_NOTES,
		TITLE,
		UPDATED_ON,UPDATED_BY,
		SUBJECT_ID,
		IS_AUTO_SAVED
		)
		select #id#,
		CASE_ID,
		#processCycleId#,
		TABLE_BOTTOM_NOTES,
		TITLE,
		sysdate,#userName#,
		SUBJECT_ID,
		IS_AUTO_SAVED
		from
		RG_PERSONAL_SUMMARY
		where
		PERSONAL_SUMMARY_ID =#recordId#
	</insert>

	<!-- makeCopyPersonal  Of Details -->
	<insert id="makeCopyDetails" parameterClass="java.util.HashMap">
		insert
		into
		RG_PERSONAL_DETAILS
		(PERSONAL_DETAILS_ID,PERSONAL_SUMMARY_ID,ROW_NO,FIELD_NAME,FIELD_VALUE,COMMENTS)
		SELECT
		RG_PERSONAL_DETAILS_SEQ.NEXTVAL,#genSumryId#,
		ROW_NO,
		FIELD_NAME,
		FIELD_VALUE,COMMENTS
		from RG_PERSONAL_DETAILS
		Where
		PERSONAL_SUMMARY_ID=#recordId#
	</insert>

	<!-- history of makeCopyPersonal  Summary -->
	<insert id="makeCopyHst" parameterClass="java.util.HashMap">
		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_PERSONAL_SUMMARY_HST_SEQ.nextval from dual
	  </selectKey>
		INSERT INTO RG_PERSONAL_SUMMARY_HST
		(HISTORY_ID,PERSONAL_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,TITLE,TABLE_BOTTOM_NOTES)

		select
		#id#,#genSumryId#, SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		sysdate,UPDATED_BY,TITLE,TABLE_BOTTOM_NOTES from RG_PERSONAL_SUMMARY
		where PERSONAL_SUMMARY_ID=#genSumryId#
	</insert>
	<!-- history of makeCopy Personal  details -->
	<insert id="makeCopyDetailsHistory" parameterClass="java.util.HashMap">
		insert into
		RG_PERSONAL_DETAILS_HST
		(HISTORY_ID,PERSONAL_DETAILS_ID,PERSONAL_SUMMARY_ID,SUMMARY_HISTORY_ID,ROW_NO,FIELD_NAME,COMMENTS,FIELD_VALUE)
		select
		RG_PERSONAL_DETAILS_HST_SEQ.nextval,PERSONAL_DETAILS_ID,PERSONAL_SUMMARY_ID,#genHistoryId#,ROW_NO,FIELD_NAME,COMMENTS,FIELD_VALUE
		from RG_PERSONAL_DETAILS where PERSONAL_SUMMARY_ID=#genSumryId#
	</insert>

	<resultMap id="defaultPersonalDetailsTableRows"
		class="com.worldcheck.juno.vo.component.PersonalDetailsVO" groupBy="id">

		<result property="fieldName" column="FIELD_NAME" />
		<result property="comment" column="COMMENTS" />
		<result property="rowNo" column="ROW_NO" />

	</resultMap>
	<select id="defaultTable" resultMap="defaultPersonalDetailsTableRows">
		SELECT
		ROW_NO,FIELD_NAME,COMMENTS FROM
		RG_PERSONAL_DETAILS_STATIC ORDER
		BY
		ROW_NO
	</select>

	<select id="getHistoryCount" resultClass="java.lang.Integer">
		SELECT count(*)
		FROM
		RG_PERSONAL_SUMMARY_HST
		rg where
		rg.PERSONAL_SUMMARY_ID=#recordId#
	</select>

	<resultMap id="resultHistory"
		class="com.worldcheck.juno.vo.component.PersonalDetailsSummaryVO">
		<result property="id" column="HISTORY_ID" />
		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="tableBottomNotes" column="TABLE_BOTTOM_NOTES" />

	</resultMap>

	<select id="getHistory" resultMap="resultHistory"
		parameterClass="java.util.HashMap">

		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (SELECT
		rg.HISTORY_ID,
		rg.UPDATED_ON,
		NVL(rg.UPDATED_BY,'System') UPDATED_BY,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.TABLE_BOTTOM_NOTES

		FROM RG_PERSONAL_SUMMARY_HST
		rg,CMS_CASECYCLE cc

		WHERE rg.PROCESSCYCLEID =
		cc.CASECYCLE_ID
		and
		rg.PERSONAL_SUMMARY_ID=#recordId#
		order by
		rg.UPDATED_ON desc
		) a WHERE
		ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#

	</select>
	<resultMap id="personalDetailsHistoryRows"
		class="com.worldcheck.juno.vo.component.PersonalDetailsVO">
		<result property="id" column="PERSONAL_DETAILS_ID" />
		<result property="fieldName" column="FIELD_NAME" />
		<result property="fieldValue" column="FIELD_VALUE" />
		<result property="comment" column="COMMENTS" />
		<result property="rowNo" column="ROW_NO" />
		<result property="parentId" column="PERSONAL_SUMMARY_ID" />
	</resultMap>
	<select id="getTableValues" resultMap="personalDetailsHistoryRows">

		select
		pd.PERSONAL_DETAILS_ID,
		pd.ROW_NO,
		pd.FIELD_NAME,pd.FIELD_VALUE,
		pd.COMMENTS,
		pd.PERSONAL_SUMMARY_ID

		from
		RG_PERSONAL_DETAILS_HST pd where
		pd.SUMMARY_HISTORY_ID=#recordId#
		ORDER BY ROW_NO ASC
	</select>

	<insert id="insertHistoryBeforeDeletion" parameterClass="map">
		insert into
		RG_PERSONAL_SUMMARY_HST(HISTORY_ID,PERSONAL_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,TITLE,TABLE_BOTTOM_NOTES)
		SELECT
		RG_PERSONAL_SUMMARY_HST_SEQ.nextval,inner_view.*
		FROM
		<iterate property="recList" conjunction="UNION ALL" open="("
			close=")">
			(SELECT #recList[]# PERSONAL_SUMMARY_ID ,SUBJECT_ID,
			PROCESSCYCLEID ,
			CASE_ID ,sysdate,#userName# UPDATED_BY ,TITLE
			,TABLE_BOTTOM_NOTES
			from RG_PERSONAL_SUMMARY
			where
			PERSONAL_SUMMARY_ID=#recList[]#)			
		</iterate>
		inner_view

	</insert>
	
	<resultMap id="miniRecord" class="com.worldcheck.juno.vo.component.PersonalDetailsSummaryVO"
		groupBy="id">
		<result property="id" column="PERSONAL_SUMMARY_ID" />
		<result property="updateOn" column="UPDATED_ON" />
	</resultMap>
	<!--generic query-->
	<select id="getUpdationTimeById" resultMap="miniRecord">
		SELECT
		rg.PERSONAL_SUMMARY_ID,
		rg.UPDATED_ON
		FROM RG_PERSONAL_SUMMARY rg
		WHERE
		rg.PERSONAL_SUMMARY_ID = #id#
	</select>
</sqlMap>