<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
        PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="CompanyBackgroundSummaryVO">

	<!-- Inserting into Company Background Details Component  -->
	<insert id="insert"
		parameterClass="com.worldcheck.juno.vo.component.CompanyBackgroundSummaryVO">
		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_COM_BACKGROUND_SUMMARY_SEQ.NEXTVAL from dual
        </selectKey>

		insert into RG_COM_BACKGROUND_SUMMARY (
		COM_BACKGROUND_SUMMARY_ID,
		CASE_ID,
		PROCESSCYCLEID,
		TABLE_BOTTOM_NOTES,
		TITLE,
		UPDATED_ON,UPDATED_BY,
		SUBJECT_ID,
		IS_AUTO_SAVED,
		COM_TYPE,
		STATUS,
		DESCRIPTION_OF_STATUS
		)values (
		#id#,
		#crn#,#processCycleId#,#tableBottomNotes#,
		#title#,
		sysdate,#updateBy#,
		#subjectId#,
		#isAutoSave#,
		#compType#,
		#status#,
		#descriptionOfStatus#
		)
	</insert>
	<!--generic query-->
	<insert id="insertAutoSave">
		<selectKey keyProperty="autoSaveId" resultClass="long">
			SELECT
			RG_COM_BACKGROUND_SUMMARY_SEQ.NEXTVAL from dual
        </selectKey>
		insert into RG_COM_BACKGROUND_SUMMARY (
		COM_BACKGROUND_SUMMARY_ID,
		CASE_ID,
		PROCESSCYCLEID,
		SUBJECT_ID,
		TITLE,
		UPDATED_ON,
		UPDATED_BY,
		TABLE_BOTTOM_NOTES,
		IS_AUTO_SAVED,
		PARENT_RECORD_ID,
		COM_TYPE,
		STATUS,
		DESCRIPTION_OF_STATUS
		)values (
		#autoSaveId#,
		#crn#,
		#processCycleId#,
		#subjectId#,
		#title#,
		sysdate,
		#updateBy#,
		#tableBottomNotes#,
		'Y',
		#id#,
		#compType#,
		#status#,
		#descriptionOfStatus#
		)
	</insert>



	<insert id="inserthistory"
		parameterClass="com.worldcheck.juno.vo.component.CompanyBackgroundSummaryVO">
		<selectKey keyProperty="historyId" resultClass="long">
			SELECT
			RG_COM_BG_SUMMARY_HST_SEQ.NEXTVAL from dual
        </selectKey>
		insert into
		RG_COM_BACKGROUND_SUMMARY_HST (
		HISTORY_ID,
		COM_BACKGROUND_SUMMARY_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,
		TITLE,
		TABLE_BOTTOM_NOTES,
		STATUS,
		DESCRIPTION_OF_STATUS
		)
		values(
		#historyId#,#id#,#subjectId#,#processCycleId#,#crn#,sysdate,#updateBy#,#title#,#tableBottomNotes#,#status#,
		#descriptionOfStatus#
		)

	</insert>
	<insert id="insertTableHistory" parameterClass="map">
		insert into
		RG_COM_BACKGROUND_DETAILS_HST
		(HISTORY_ID,COM_BACKGROUND_DETAILS_ID,COM_BACKGROUND_SUMMARY_ID,SUMMARY_HISTORY_ID,ROW_NO,FIELD_NAME,FIELD_VALUE,COMMENTS)
		(select RG_COM_BG_DETAILS_HST_SEQ.nextval,
		COM_BACKGROUND_DETAILS_ID,#pdId#,#historyId#,ROW_NO,
		FIELD_NAME,FIELD_VALUE,COMMENTS
		from RG_COM_BACKGROUND_DETAILS where
		COM_BACKGROUND_SUMMARY_ID =#pdId#)
	</insert>

	<resultMap id="companyDetailsTableRows"
		class="com.worldcheck.juno.vo.component.CompanyBackgroundDetailsVO"
		groupBy="id">
		<result property="id" column="COM_BACKGROUND_DETAILS_ID" />
		<result property="fieldName" column="FIELD_NAME" />
		<result property="fieldValue" column="FIELD_VALUE" />
		<result property="comment" column="COMMENTS" />
		<result property="rowNo" column="ROW_NO" />
		<result property="parentId" column="COM_BACKGROUND_SUMMARY_ID" />
	</resultMap>
	<resultMap id="resultVO"
		class="com.worldcheck.juno.vo.component.CompanyBackgroundSummaryVO"
		groupBy="id">
		<result property="id" column="COM_BACKGROUND_SUMMARY_ID" />
		<result property="crn" column="CASE_ID" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="REPORT_SUBJECT_NAME" />

		<result property="tableBottomNotes" column="TABLE_BOTTOM_NOTES" />
		<result property="title" column="TITLE" />
		<result property="status" column="STATUS" />
		<result property="descriptionOfStatus" column="DESCRIPTION_OF_STATUS" />

		<result property="updateOn" column="UPDATED_ON" />
		<result property="compType" column="COM_TYPE" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="isAutoSave" column="IS_AUTO_SAVED" />
		<result property="companyDetailsTableRows"
			resultMap="CompanyBackgroundSummaryVO.companyDetailsTableRows"
			notNullColumn="COM_BACKGROUND_DETAILS_ID" />
	</resultMap>

	<!--generic query-->
	<select id="getById" resultMap="resultVO">
		SELECT
		rg.COM_BACKGROUND_SUMMARY_ID,
		rg.CASE_ID,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.SUBJECT_ID,
		cs.REPORT_SUBJECT_NAME,
		rg.TABLE_BOTTOM_NOTES,
		rg.TITLE,
		rg.UPDATED_ON,rg.UPDATED_BY,
		rg.IS_AUTO_SAVED,
		rg.COM_TYPE,
		rg.STATUS,
		rg.DESCRIPTION_OF_STATUS,
		pd.ROW_NO,
		pd.FIELD_NAME,pd.FIELD_VALUE,
		pd.COM_BACKGROUND_DETAILS_ID,pd.COMMENTS,
		pd.COM_BACKGROUND_SUMMARY_ID

		FROM RG_COM_BACKGROUND_SUMMARY rg
		LEFT
		OUTER JOIN
		RG_COM_BACKGROUND_DETAILS pd ON pd.COM_BACKGROUND_SUMMARY_ID =
		rg.COM_BACKGROUND_SUMMARY_ID
		JOIN CMS_CASECYCLE cc ON cc.CASECYCLE_ID =
		rg.PROCESSCYCLEID
		JOIN RG_SUBJECT cs ON cs.SUBJECT_ID = rg.SUBJECT_ID
		WHERE
		rg.COM_BACKGROUND_SUMMARY_ID =#id#
		ORDER
		BY pd.ROW_NO ASC
	</select>

	<!--generic query-->
	<update id="update"
		parameterClass="com.worldcheck.juno.vo.component.CompanyBackgroundSummaryVO">
		update RG_COM_BACKGROUND_SUMMARY
		set TITLE = #title#,
		TABLE_BOTTOM_NOTES = #tableBottomNotes#,
		PROCESSCYCLEID=#processCycleId# ,
		UPDATED_ON=sysdate,
		UPDATED_BY=#updateBy#,
		IS_AUTO_SAVED = 'N',
		PARENT_RECORD_ID = null,
		STATUS=#status# ,
		DESCRIPTION_OF_STATUS=#descriptionOfStatus#
		where
		COM_BACKGROUND_SUMMARY_ID = #id#
	</update>

	<!--generic query-->
	<update id="updateAutoSave"
		parameterClass="com.worldcheck.juno.vo.component.CompanyBackgroundSummaryVO">
		update RG_COM_BACKGROUND_SUMMARY set
		TITLE=#title#,
		TABLE_BOTTOM_NOTES=#tableBottomNotes#,
		PROCESSCYCLEID=#processCycleId#,
		UPDATED_ON=sysdate,
		UPDATED_BY=#updateBy#,
		IS_AUTO_SAVED = 'Y',
		PARENT_RECORD_ID = #id#,
		STATUS=#status# ,
		DESCRIPTION_OF_STATUS=#descriptionOfStatus#
		where
		COM_BACKGROUND_SUMMARY_ID = #autoSaveId#
	</update>

	<resultMap id="companyDtlList"
		class="com.worldcheck.juno.vo.component.CompanyBackgroundSummaryVO"
		groupBy="id">
		<result property="id" column="COM_BACKGROUND_SUMMARY_ID" />
		<result property="crn" column="CASE_ID" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="REPORT_SUBJECT_NAME" />
		<result property="displayDate" column="displayDate" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="compType" column="COM_TYPE" />
	</resultMap>
	<!--generic query-->

	<select id="listByCRN" resultMap="companyDtlList"
		parameterClass="java.util.HashMap">
		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (
		SELECT
		rg.COM_BACKGROUND_SUMMARY_ID,
		rg.CASE_ID,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.SUBJECT_ID,
		cs.REPORT_SUBJECT_NAME,
		to_char(rg.UPDATED_ON,
		'DD-Mon-YY
		HH24:MI:SS') as displayDate,
		NVL(rg.UPDATED_BY,'System') UPDATED_BY,
		COM_TYPE
		FROM
		RG_COM_BACKGROUND_SUMMARY rg
		,CMS_CASECYCLE cc, RG_SUBJECT cs,
		rg_report_subcomponents sbcmp
		WHERE
		CASE_ID=#crn# and
		rg.PROCESSCYCLEID = cc.CASECYCLE_ID and rg.SUBJECT_ID
		= cs.SUBJECT_ID
		AND
		upper(rg.IS_AUTO_SAVED)=upper('N')
		AND rg.com_type = sbcmp.subcomponent_name
		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId#
            </isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId#
            </isNotEqual>
		</isNotNull>

		order by cs.REPORT_ORDER
		ASC,cc.PROCESSCYCLE_ORDER desc,
		sbcmp.subcomponent_order
		) a
		<isNotNull property="limit">
			<isNotEqual property="limit" compareValue="0">

				WHERE ROWNUM <![CDATA[ <= ]]>
				#limit#
			</isNotEqual>
		</isNotNull>
		)
		<isNotNull property="limit">
			<isNotEqual property="limit" compareValue="0">

				WHERE rn <![CDATA[ >= ]]>
				#start#
			</isNotEqual>
		</isNotNull>

	</select>

	<select id="getSearchCount" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">

		SELECT count(*) from
		(
		select distinct
		rg.subject_id,
		rg.processcycleid, rg.case_id,
		sub.report_order,cc.processcycle_order,rg.IS_AUTO_SAVED
		from RG_COM_BACKGROUND_SUMMARY
		rg
		join RG_SUBJECT sub on sub.subject_id
		= rg.subject_id
		join
		cms_casecycle cc on cc.casecycle_id =
		rg.processcycleid
		group by
		rg.subject_id, rg.processcycleid, rg.case_id,
		sub.REPORT_ORDER,
		cc.processcycle_order,rg.IS_AUTO_SAVED
		having rg.case_id =
		#crn# and upper(rg.IS_AUTO_SAVED)=upper('N')
		) cdata
		
	</select>
	<!-- Procedure for Default Entries into company Component -->
	<select id="getHistoryCountForCRN" resultClass="java.lang.Long"
		parameterClass="java.lang.String">
		select count(*) from RG_COM_BACKGROUND_SUMMARY_HST
		where
		case_id=#crn#
  
  	</select>
	<!-- Update Summary table by entry of Default records.-->
	<update id="insertDefaultEntries" parameterClass="java.util.HashMap">
		declare
		recordId number(10);
		hstId number(10);
		detailHistId number(10);
		subList varray_varchar;
		compTypeArray varray_varchar;
		compTypeTitleArray varray_varchar;
		subId number;
		crn
		VARCHAR2(200):=#crn#;
		processCycle number:=#processCycleId#;
		userName
		VARCHAR2(200):=#userName#;
		compType VARCHAR2(200);
		compTypeTitle
		VARCHAR2(2000);
		fieldArray
		varray_varchar;
		fieldVal
		varchar2(200);
		detailId number(10);

		begin
		subList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].subjectId#
        </iterate>
		;
		compTypeArray
		:=varray_varchar('companyRegistryBGDetailsForm','assoIndividualBGDetailsForm','otherAssoIndividualBGDetailsForm','otherCompanyBGInfoForm','shareholdersBGForm');
		compTypeTitleArray
		:=varray_varchar('COMPANY REGISTRY DETAILS','ASSOCIATED INDIVIDUALS / ENTITIES','OTHER ASSOCIATED INDIVIDUALS / ENTITIES','OTHER COMPANY INFORMATION','SHARERHOLDERS (AS ON)');
		fieldArray :=varray_varchar(<![CDATA['<p>Name</p>']]>,<![CDATA['<p>Identifiers (if any)</p>']]>,<![CDATA['<p>No. of Shares / Investment (Currency)</p>']]>,<![CDATA['<p>Percentage (%)</p>']]>,<![CDATA['<p>Total</p>']]>);
		
		
		for elem in 1 .. subList.count
		loop

		subId:=subList(elem);
		for elem2 in 1 .. compTypeArray.count loop
		compType :=compTypeArray(elem2);
		compTypeTitle
		:=compTypeTitleArray(elem2);
		select
		RG_COM_BACKGROUND_SUMMARY_SEQ.NEXTVAL into
		recordId from dual;
		if compType ='companyRegistryBGDetailsForm' then
			INSERT
			INTO
			RG_COM_BACKGROUND_SUMMARY
			(COM_BACKGROUND_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
			UPDATED_ON,UPDATED_BY,IS_AUTO_SAVED,TITLE,COM_TYPE,STATUS,DESCRIPTION_OF_STATUS)
			values(recordId,
			subId ,
			processCycle, crn
			,sysdate,userName
			,'N',compTypeTitle,compType,'Available',(select DEFAULT_TEXT from rg_component_default_text where component_id=13));
		else
			INSERT
			INTO
			RG_COM_BACKGROUND_SUMMARY
			(COM_BACKGROUND_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
			UPDATED_ON,UPDATED_BY,IS_AUTO_SAVED,TITLE,COM_TYPE)
			values(recordId,
			subId ,
			processCycle, crn
			,sysdate,userName
			,'N',compTypeTitle,compType);
		end if;
		if compType ='shareholdersBGForm' then
			for rown in 1..4 Loop
	
				if rown = 1 then		
		
					for
					coln in 1..4 Loop
					select
					RG_SHAREHOLDER_DETAILS_SEQ.nextval into
					detailId from dual;
					
					insert into RG_SHAREHOLDER_DETAILS 
					(SHAREHOLDER_DETAILS_ID,COM_BACKGROUND_SUMMARY_ID,ROW_NO,COLUMN_NO,FIELD_VALUE)
					values(detailId,recordId,1,coln-1,fieldArray(coln));
					
					END LOOP;
		
				else
					if rown = 4 then
						for
						coln in 1..4 Loop
						if coln = 1 then
							select RG_SHAREHOLDER_DETAILS_SEQ.nextval into
							detailId from
							dual;
							insert into RG_SHAREHOLDER_DETAILS
							(SHAREHOLDER_DETAILS_ID,COM_BACKGROUND_SUMMARY_ID,ROW_NO,COLUMN_NO,FIELD_VALUE)
							values(detailId,recordId,rown,coln-1,fieldArray(5));
						else
							select RG_SHAREHOLDER_DETAILS_SEQ.nextval into
							detailId from
							dual;
							insert into RG_SHAREHOLDER_DETAILS
							(SHAREHOLDER_DETAILS_ID,COM_BACKGROUND_SUMMARY_ID,ROW_NO,COLUMN_NO)
							values(detailId,recordId,rown,coln-1);
						end if;
						END LOOP;
					else
						for
						coln in 1..4 Loop
						DBMS_OUTPUT.PUT_LINE('row is
						:'||rown);
						select RG_SHAREHOLDER_DETAILS_SEQ.nextval into
						detailId from
						dual;
						
				
						insert into RG_SHAREHOLDER_DETAILS
						(SHAREHOLDER_DETAILS_ID,COM_BACKGROUND_SUMMARY_ID,ROW_NO,COLUMN_NO)
						values(detailId,recordId,rown,coln-1);
						
						END LOOP;
					end if;
				end if;
			END	LOOP;
				
		else 
		
			insert
				into
				RG_COM_BACKGROUND_DETAILS
				(COM_BACKGROUND_DETAILS_ID,COM_BACKGROUND_SUMMARY_ID,ROW_NO,FIELD_NAME,COMMENTS)
				SELECT
				RG_COM_BACKGROUND_DETAILS_SEQ.nextval,recordId,ROW_NO,FIELD_NAME,COMMENTS
				FROM
				RG_COM_BG_DETAILS_STATIC where SUB_COMPONENT_TYPE=compType;		
		
		end if;

		END
		LOOP;
		END LOOP;
		END;

	</update>

	<!--generic query-->
	<select id="findAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.COM_BACKGROUND_SUMMARY_ID
		FROM
		RG_COM_BACKGROUND_SUMMARY
		rg
		WHERE
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		rg.PARENT_RECORD_ID =
		#parentId#
	</select>

	<!--generic query-->
	<select id="findNewAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.COM_BACKGROUND_SUMMARY_ID
		FROM
		RG_COM_BACKGROUND_SUMMARY
		rg
		WHERE CASE_ID=#crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
		and
		COM_TYPE =#componentType#
	</select>

	<!--generic query-->
	<select id="findById" resultClass="int">
		select
		count(rg.COM_BACKGROUND_SUMMARY_ID)
		FROM RG_COM_BACKGROUND_SUMMARY rg
		WHERE
		rg.COM_BACKGROUND_SUMMARY_ID = #id#
	</select>

	<!--generic query-->
	<delete id="deleteNewAutoSave">
		delete FROM RG_COM_BACKGROUND_SUMMARY WHERE
		CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS
		NULL 
		<!-- and COM_TYPE =#componentType#-->
	</delete>

	<!--generic query-->
	<delete id="deleteAutoSave">
		delete FROM RG_COM_BACKGROUND_SUMMARY WHERE
		CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID =
		#parentId#
	</delete>


	<!--generic query-->
	<delete id="delete">
		delete FROM RG_COM_BACKGROUND_SUMMARY WHERE
		COM_BACKGROUND_SUMMARY_ID = #id#
	</delete>

	<!--generic query-->
	<delete id="deleteIds">
		delete FROM RG_COM_BACKGROUND_SUMMARY WHERE
		COM_BACKGROUND_SUMMARY_ID
		in
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
        </iterate>
	</delete>
	<!-- Table Row Operations -->
	<insert id="insertRow"
		parameterClass="com.worldcheck.juno.vo.component.CompanyBackgroundDetailsVO">
		insert into
		RG_COM_BACKGROUND_DETAILS (
		COM_BACKGROUND_DETAILS_ID,
		ROW_NO,
		FIELD_NAME,
		FIELD_VALUE,
		COMMENTS,
		COM_BACKGROUND_SUMMARY_ID
		)values (
		RG_COM_BACKGROUND_DETAILS_SEQ.NEXTVAL,
		#rowNo#,
		#fieldName#,
		#fieldValue#,
		#comment#,
		#parentId#
		)
	</insert>

	<update id="updateRow"
		parameterClass="com.worldcheck.juno.vo.component.CompanyBackgroundDetailsVO">
		update
		RG_COM_BACKGROUND_DETAILS set
		ROW_NO=#rowNo#,
		FIELD_NAME =#fieldName#,
		FIELD_VALUE =#fieldValue#
		where
		COM_BACKGROUND_DETAILS_ID = #id#
	</update>

	<delete id="deleteRowsForParent">
		delete FROM RG_COM_BACKGROUND_DETAILS WHERE
		COM_BACKGROUND_SUMMARY_ID = #id#
	</delete>

	<delete id="deleteRows">
		delete FROM RG_COM_BACKGROUND_DETAILS WHERE
		COM_BACKGROUND_DETAILS_ID
		IN
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
        </iterate>
	</delete>

	<!--generic query-->
	<select id="getSubProcCycleList" resultMap="ReportSubjectVO.subProcCycleList">
		select rem.subject_id
		subject_id,
		rem.processcycleid
		Process_Cycle_Id,cs.subject_name
		subject_name,
		ccl.DESCRIPTION
		Process_Cycle
		from
		RG_COM_BACKGROUND_SUMMARY
		rem,
		RG_SUBJECT cs
		,CMS_CASECYCLE ccl
		where
		cs.CRN = rem.case_id
		and
		ccl.CASECYCLE_ID=
		rem.processcycleid
		and
		cs.subject_id =rem.subject_id
		and rem.case_id =
		#crn# and rem.COM_TYPE =
		#compType# and upper(rem.IS_AUTO_SAVED)=upper('N')
		order by cs.subject_id, rem.processcycleid

	</select>
	<!--generic query-->
	<select id="getProcessCycleList" parameterClass="java.util.HashMap"
		resultMap="ProcessCycleVO.processCycleList">
		select rem.processcycleid Process_Cycle_Id,cc.DESCRIPTION
		Process_Cycle
		from RG_COM_BACKGROUND_SUMMARY rem, cms_casecycle cc
		where
		rem.subject_id=#subId# and rem.case_id=#crn#
		and cc.casecycle_id=
		rem.processcycleid
		and upper(rem.IS_AUTO_SAVED)=upper('N')
		and rem.COM_TYPE =
		#compType# and 
		rem.COM_BACKGROUND_SUMMARY_ID != #recordId#
	
	</select>

	<select id="checkIfExist" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		select count(*) from RG_COM_BACKGROUND_SUMMARY where
		PROCESSCYCLEID=#processCycleId# and SUBJECT_ID = #subjectId# and
		case_id=#crn# and upper(COM_TYPE)=upper(#compType#) and upper(IS_AUTO_SAVED)=upper('N')
	</select>
	<!-- makeCopycompany  Of Summary -->

	<insert id="makeCopy" parameterClass="java.util.HashMap">

		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_COM_BACKGROUND_SUMMARY_SEQ.nextval from dual
        </selectKey>

		insert into RG_COM_BACKGROUND_SUMMARY (
		COM_BACKGROUND_SUMMARY_ID,
		CASE_ID,
		PROCESSCYCLEID,
		TABLE_BOTTOM_NOTES,
		TITLE,
		UPDATED_ON,UPDATED_BY,
		SUBJECT_ID,
		IS_AUTO_SAVED,
		STATUS,
		DESCRIPTION_OF_STATUS,
		COM_TYPE
		)
		select #id#,
		CASE_ID,
		#processCycleId#,
		TABLE_BOTTOM_NOTES,
		TITLE,
		sysdate,#userName#,
		SUBJECT_ID,
		IS_AUTO_SAVED,
		STATUS,
		DESCRIPTION_OF_STATUS,
		COM_TYPE
		from
		RG_COM_BACKGROUND_SUMMARY
		where
		COM_BACKGROUND_SUMMARY_ID =#recordId#
	</insert>

	<!-- makeCopycompany  Of Details -->
	<insert id="makeCopyDetails" parameterClass="java.util.HashMap">
		insert
		into
		RG_COM_BACKGROUND_DETAILS
		(COM_BACKGROUND_DETAILS_ID,COM_BACKGROUND_SUMMARY_ID,ROW_NO,FIELD_NAME,FIELD_VALUE,COMMENTS)
		SELECT
		RG_COM_BACKGROUND_DETAILS_SEQ.NEXTVAL,#genSumryId#,
		ROW_NO,
		FIELD_NAME,
		FIELD_VALUE,COMMENTS
		from RG_COM_BACKGROUND_DETAILS
		Where
		COM_BACKGROUND_SUMMARY_ID=#recordId#
	</insert>

	<!-- history of makeCopycompany  Summary -->
	<insert id="makeCopyHst" parameterClass="java.util.HashMap">
		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_COM_BG_SUMMARY_HST_SEQ.nextval from dual
        </selectKey>
		INSERT INTO RG_COM_BACKGROUND_SUMMARY_HST
		(HISTORY_ID,COM_BACKGROUND_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,TITLE,TABLE_BOTTOM_NOTES,STATUS)

		select
		#id#,#genSumryId#, SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		sysdate,#userName#,TITLE,TABLE_BOTTOM_NOTES,STATUS from
		RG_COM_BACKGROUND_SUMMARY
		where COM_BACKGROUND_SUMMARY_ID=#genSumryId#
	</insert>
	<!-- history of makeCopy company  details -->
	<insert id="makeCopyDetailsHistory" parameterClass="java.util.HashMap">
		insert into
		RG_COM_BACKGROUND_DETAILS_HST
		(HISTORY_ID,COM_BACKGROUND_DETAILS_ID,COM_BACKGROUND_SUMMARY_ID,SUMMARY_HISTORY_ID,ROW_NO,FIELD_NAME,COMMENTS,FIELD_VALUE)
		select
		RG_COM_BG_DETAILS_HST_SEQ.nextval,COM_BACKGROUND_DETAILS_ID,COM_BACKGROUND_SUMMARY_ID,#genHistoryId#,ROW_NO,FIELD_NAME,COMMENTS,FIELD_VALUE
		from RG_COM_BACKGROUND_DETAILS where
		COM_BACKGROUND_SUMMARY_ID=#genSumryId#
	</insert>

	<resultMap id="defaultcompanyDetailsTableRows"
		class="com.worldcheck.juno.vo.component.CompanyBackgroundDetailsVO"
		groupBy="id">

		<result property="fieldName" column="FIELD_NAME" />
		<result property="comment" column="COMMENTS" />
		<result property="rowNo" column="ROW_NO" />

	</resultMap>
	<select id="defaultTable" resultMap="defaultcompanyDetailsTableRows">
		SELECT
		ROW_NO,FIELD_NAME,COMMENTS FROM
		RG_COM_BG_DETAILS_STATIC where
		sub_component_type=#compType# ORDER
		BY
		ROW_NO
	</select>

	<select id="getHistoryCount" resultClass="java.lang.Integer">
		SELECT count(*)
		FROM
		RG_COM_BACKGROUND_SUMMARY_HST
		rg where
		rg.COM_BACKGROUND_SUMMARY_ID=#recordId#
	</select>

	<resultMap id="resultHistory"
		class="com.worldcheck.juno.vo.component.CompanyBackgroundSummaryVO">
		<result property="id" column="HISTORY_ID" />
		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="tableBottomNotes" column="TABLE_BOTTOM_NOTES" />
		<result property="status" column="STATUS" />

	</resultMap>

	<select id="getHistory" resultMap="resultHistory"
		parameterClass="java.util.HashMap">

		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (SELECT
		rg.HISTORY_ID,
		rg.UPDATED_ON, rg.UPDATED_BY,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.TABLE_BOTTOM_NOTES,rg.STATUS

		FROM RG_COM_BACKGROUND_SUMMARY_HST
		rg,CMS_CASECYCLE cc

		WHERE rg.PROCESSCYCLEID =
		cc.CASECYCLE_ID
		and
		rg.COM_BACKGROUND_SUMMARY_ID=#recordId#
		order by
		rg.UPDATED_ON desc
		) a
		WHERE
		ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#

	</select>
	<resultMap id="companyDetailsHistoryRows"
		class="com.worldcheck.juno.vo.component.CompanyBackgroundDetailsVO">
		<result property="id" column="COM_BACKGROUND_DETAILS_ID" />
		<result property="fieldName" column="FIELD_NAME" />
		<result property="fieldValue" column="FIELD_VALUE" />
		<result property="comment" column="COMMENTS" />
		<result property="rowNo" column="ROW_NO" />
		<result property="parentId" column="COM_BACKGROUND_SUMMARY_ID" />
	</resultMap>
	<select id="getTableValues" resultMap="companyDetailsHistoryRows">

		select
		pd.COM_BACKGROUND_DETAILS_ID,
		pd.ROW_NO,
		pd.FIELD_NAME,pd.FIELD_VALUE,
		pd.COMMENTS,
		pd.COM_BACKGROUND_SUMMARY_ID

		from
		RG_COM_BACKGROUND_DETAILS_HST pd
		where pd.SUMMARY_HISTORY_ID=#recordId#
		ORDER BY ROW_NO ASC
	</select>

	<insert id="insertHistoryBeforeDeletion" parameterClass="map">
		insert into
		RG_COM_BACKGROUND_SUMMARY_HST(HISTORY_ID,COM_BACKGROUND_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,TITLE,TABLE_BOTTOM_NOTES,STATUS,
		DESCRIPTION_OF_STATUS)
		SELECT
		RG_COM_BG_SUMMARY_HST_SEQ.nextval,inner_view.*
		FROM
		<iterate property="recList" conjunction="UNION ALL" open="("
			close=")">
			(SELECT #recList[]# COM_BACKGROUND_SUMMARY_ID ,SUBJECT_ID,
			PROCESSCYCLEID ,
			CASE_ID ,sysdate,#userName# UPDATED_BY ,TITLE
			,TABLE_BOTTOM_NOTES,STATUS,
			DESCRIPTION_OF_STATUS
			from
			RG_COM_BACKGROUND_SUMMARY
			where
			COM_BACKGROUND_SUMMARY_ID=#recList[]#)
		</iterate>
		inner_view

	</insert>
	<resultMap id="subjProcList"
		class="com.worldcheck.juno.vo.component.CompanyBackgroundSummaryVO">
		<result property="crn" column="CASE_ID" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="subjectId" column="SUBJECT_ID" />
	</resultMap>

	<select id="getSubjectProcessList" parameterClass="java.util.HashMap"
		resultMap="subjProcList">
		SELECT * FROM (select subpc.*, ROWNUM rn from (
		select distinct
		rg.subject_id, rg.processcycleid, rg.case_id,
		sub.report_order,cc.processcycle_order,rg.IS_AUTO_SAVED
		from RG_COM_BACKGROUND_SUMMARY
		rg
		join RG_SUBJECT sub on sub.subject_id = rg.subject_id
		join
		cms_casecycle cc on cc.casecycle_id = rg.processcycleid
		group by
		rg.subject_id, rg.processcycleid, rg.case_id, sub.REPORT_ORDER,
		cc.processcycle_order,rg.IS_AUTO_SAVED
		having rg.case_id = #crn# and upper(rg.IS_AUTO_SAVED)=upper('N')
		order by
		sub.REPORT_ORDER, cc.processcycle_order desc
		) subpc WHERE ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#
	</select>


	<select id="listByCompType" resultMap="companyDtlList"
		parameterClass="java.util.HashMap">
		SELECT
		rg.COM_BACKGROUND_SUMMARY_ID,
		rg.CASE_ID,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.SUBJECT_ID,
		cs.REPORT_SUBJECT_NAME,
		to_char(rg.UPDATED_ON,
		'DD-Mon-YY
		HH24:MI:SS') as displayDate,
		NVL(rg.UPDATED_BY,'System') UPDATED_BY,
		COM_TYPE
		FROM
		RG_COM_BACKGROUND_SUMMARY
		rg
		,CMS_CASECYCLE cc, RG_SUBJECT cs,
		rg_report_subcomponents sbcmp
		WHERE
		rg.PROCESSCYCLEID = cc.CASECYCLE_ID and rg.SUBJECT_ID
		= cs.SUBJECT_ID
		<iterate prepend="AND" property="subProcList" open="(" close=")"
			conjunction="or">
			( rg.SUBJECT_ID = #subProcList[].subjectId# and
			rg.PROCESSCYCLEID=#subProcList[].processCycleId#
			and rg.CASE_ID
			=#subProcList[].crn# )
		</iterate>
		AND
		upper(rg.IS_AUTO_SAVED)=upper('N')
		and rg.com_type = sbcmp.subcomponent_name
		order by cs.is_primary_sub desc,cs.REPORT_ORDER
		ASC,upper(cs.REPORT_SUBJECT_NAME) asc,cc.PROCESSCYCLE_ORDER desc, sbcmp.subcomponent_order
	</select>
	<resultMap id="miniShareholdersRecord" 
				 class="com.worldcheck.juno.vo.component.CompanyBackgroundSummaryVO" groupBy="id">
		<result property="id" column="COM_BACKGROUND_SUMMARY_ID" />
		<result property="updateOn" column="UPDATED_ON" />
	</resultMap>
	<!--generic query-->
	<select id="getUpdationTimeById" resultMap="miniShareholdersRecord">
		SELECT rg.COM_BACKGROUND_SUMMARY_ID,
		rg.UPDATED_ON
		FROM RG_COM_BACKGROUND_SUMMARY rg
		WHERE
		rg.COM_BACKGROUND_SUMMARY_ID = #id#
	</select>
	
	<select id="getByType" resultMap="resultVO">
		SELECT
		rg.COM_BACKGROUND_SUMMARY_ID,
		rg.CASE_ID,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.SUBJECT_ID,
		cs.REPORT_SUBJECT_NAME,
		rg.TABLE_BOTTOM_NOTES,
		rg.TITLE,
		rg.UPDATED_ON,rg.UPDATED_BY,
		rg.IS_AUTO_SAVED,
		rg.COM_TYPE,
		rg.STATUS,
		rg.DESCRIPTION_OF_STATUS,
		pd.ROW_NO,
		pd.FIELD_NAME,pd.FIELD_VALUE,
		pd.COM_BACKGROUND_DETAILS_ID,pd.COMMENTS,
		pd.COM_BACKGROUND_SUMMARY_ID

		FROM RG_COM_BACKGROUND_SUMMARY rg
		LEFT
		OUTER JOIN
		RG_COM_BACKGROUND_DETAILS pd ON pd.COM_BACKGROUND_SUMMARY_ID =
		rg.COM_BACKGROUND_SUMMARY_ID
		JOIN CMS_CASECYCLE cc ON cc.CASECYCLE_ID =
		rg.PROCESSCYCLEID
		JOIN RG_SUBJECT cs ON cs.SUBJECT_ID = rg.SUBJECT_ID
		WHERE
		rg.SUBJECT_ID =#subjectId# and 
		rg.PROCESSCYCLEID=#processCycleId# and 
		rg.CASE_ID=#crn# and rg.COM_TYPE =#otherCompanyBGInfoForm#
		AND
		upper(rg.IS_AUTO_SAVED)=upper('N')
		ORDER
		BY pd.ROW_NO ASC
	</select>
	<insert id="updateDefaultTable" parameterClass="map">
		insert
				into
				RG_COM_BACKGROUND_DETAILS
				(COM_BACKGROUND_DETAILS_ID,COM_BACKGROUND_SUMMARY_ID,ROW_NO,FIELD_NAME,COMMENTS)
				SELECT
				RG_COM_BACKGROUND_DETAILS_SEQ.nextval,#id#,ROW_NO,FIELD_NAME,COMMENTS
				FROM
				RG_COM_BG_DETAILS_STATIC where SUB_COMPONENT_TYPE=#compType#
	</insert>
</sqlMap>