<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="LMCheckVO">

	<insert id="insert" parameterClass="com.worldcheck.juno.vo.component.LMCheckVO">
		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_LOCAL_MEDIA_CHECK_SEQ.NEXTVAL from dual
	  	</selectKey>
		insert into RG_LOCAL_MEDIA_CHECK (
		LOCAL_MEDIA_CHECK_ID,
		CASE_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,
		RESEARCH_DOC_ID,
		UPDATED_ON,
		UPDATED_BY,
		TABLE_BOTTOM_NOTES,
		SAME_NAME_IND,
		SOURCE1,
		SOURCE2,
		SOURCE3,
		DATE1,
		DATE2,
		DATE3,
		RISK_SUMMARY,
		LINK,
		HEADLINE,
		ARTICLE_TEXT,
		REPORT_INCLUDE_IND,
		IS_AUTO_SAVED,LOCAL_MEDIA_CHK_IND,LOCAL_LAGUAGE,TEAM_ID,LINKED_SUB_PARENT_DOC,
		GRID_UPDATED_ON
		) values (
		#id#,
		#crn#,
		#subjectId#,
		#processCycleId#,
		#rdNumber#,
		sysdate,
		#updateBy#,
		#tableBottomNotes#,
		#sameNameSubject#,
		#source1#,
		#source2#,
		#source3#,
		#date1#,
		#date2#,
		#date3#,
		#summaryOfRisk#,
		#link#,
		#headline#,
		#article#,
		#includeExcludeIdentifire#,
		'N',#canPerformLMC#,#localLanguage#,#teamTypeId#,#linkSubParentDocId#,
		sysdate
		)
	</insert>

	<insert id="insertAutoSave" parameterClass="com.worldcheck.juno.vo.component.LMCheckVO">
		<selectKey keyProperty="autoSaveId" resultClass="long">
			SELECT
			RG_LOCAL_MEDIA_CHECK_SEQ.NEXTVAL from dual
	  </selectKey>
		insert into RG_LOCAL_MEDIA_CHECK (
		LOCAL_MEDIA_CHECK_ID,
		CASE_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,
		UPDATED_ON,
		UPDATED_BY,
		TABLE_BOTTOM_NOTES,
		SAME_NAME_IND,
		SOURCE1,
		SOURCE2,
		SOURCE3,
		DATE1,
		DATE2,
		DATE3,
		RISK_SUMMARY,
		LINK,
		HEADLINE,
		ARTICLE_TEXT,
		IS_AUTO_SAVED,
		PARENT_RECORD_ID,LOCAL_MEDIA_CHK_IND,LOCAL_LAGUAGE,TEAM_ID
		)values (
		#autoSaveId#,
		#crn#,
		#subjectId#,
		#processCycleId#,
		sysdate,
		#updateBy#,
		#tableBottomNotes#,
		#sameNameSubject#,
		#source1#,
		#source2#,
		#source3#,
		#date1#,
		#date2#,
		#date3#,
		#summaryOfRisk#,
		#link#,
		#headline#,
		#article#,
		'Y',
		#id#,#canPerformLMC#,#localLanguage#,#teamTypeId#
		)
	</insert>

	<insert id="insertRisksForRecord" parameterClass="java.util.HashMap">
		INSERT INTO RG_LOCAL_MEDIA_RISKS (RG_LOCAL_MEDIA_RISKS_ID,
		RISK_CODE,LOCAL_MEDIA_CHECK_ID)
		select RG_LOCAL_MEDIA_RISKS_SEQ.NEXTVAL, inner_view.*
		FROM
		<iterate property="recList" conjunction="UNION ALL" open="("
			close=")">
			SELECT #recList[].riskVO.code# RISK_CODE, #recList[].lmCheckVO.id#
			LOCAL_MEDIA_CHECK_ID FROM DUAL
			WHERE NOT EXISTS (SELECT
			RG_LOCAL_MEDIA_RISKS_ID
			FROM RG_LOCAL_MEDIA_RISKS
			WHERE
			LOCAL_MEDIA_CHECK_ID = #recList[].lmCheckVO.id#
			AND RISK_CODE = #recList[].riskVO.code#
			)
			</iterate>
		inner_view

	</insert>

	<insert id="insertRIdsForRecord" parameterClass="com.worldcheck.juno.vo.component.LMCheckRelDocVO">
		INSERT INTO
		RG_LOCAL_RELATED_DOCS (LOCAL_RELATED_DOCS_ID, PARENT_DOC_ID,
		CHILD_DOC_ID)

		SELECT RG_LOCAL_RELATED_DOCS_SEQ.NEXTVAL,
		#parentDocId#,#childDocId#
		FROM
		dual
		WHERE NOT EXISTS (SELECT
		LOCAL_RELATED_DOCS_ID
		FROM RG_LOCAL_RELATED_DOCS
		WHERE PARENT_DOC_ID =
		#parentDocId#
		AND CHILD_DOC_ID = #childDocId#
		)
		
	</insert>

	<insert id="insertRSForRecord" parameterClass="com.worldcheck.juno.vo.component.LMCheckRelSubVO">
		INSERT INTO
		RG_LOCAL_RELATED_SUBJECT (LOCAL_RELATED_SUBJECT_ID, PARENT_DOC_ID,
		CHILD_DOC_ID, SUBJECT_ID)

		SELECT RG_LOCAL_RELATED_SUBJECT_SEQ.NEXTVAL,
		#parentDocId#,#childDocId#,#subjectConfigVO.subjectId#
		FROM dual
		WHERE
		NOT EXISTS (SELECT LOCAL_RELATED_SUBJECT_ID
		FROM
		RG_LOCAL_RELATED_SUBJECT
		WHERE PARENT_DOC_ID = #parentDocId#
		AND
		SUBJECT_ID = #subjectConfigVO.subjectId#
		)
        
	</insert>

	<delete id="removeRisksForRecord">
		DELETE FROM RG_LOCAL_MEDIA_RISKS WHERE
		LOCAL_MEDIA_CHECK_ID = #lmcId#
	</delete>

	<delete id="removeRIdsForRecord">
		DELETE FROM RG_LOCAL_RELATED_DOCS WHERE PARENT_DOC_ID
		= #lmcId#
	</delete>

	<delete id="removeRSForRecord">
		delete from RG_LOCAL_MEDIA_CHECK where linked_sub_parent_doc in ($lmcId$)
	</delete>

	<delete id="removeRisksWithIds">
		DELETE FROM RG_LOCAL_MEDIA_RISKS WHERE
		RG_LOCAL_MEDIA_RISKS_ID IN ($emcRiskIds$)
	</delete>

	<delete id="removeRIdsWithIds">
		DELETE FROM RG_LOCAL_MEDIA_RISKS WHERE
		RG_LOCAL_MEDIA_RISKS_ID IN ($lmcRIds$)
	</delete>

	<delete id="removeRSWithIds">
		DELETE FROM RG_LOCAL_RELATED_SUBJECT WHERE
		LOCAL_RELATED_SUBJECT_ID IN ($lmcRSIds$)
	</delete>

	<update id="update" parameterClass="com.worldcheck.juno.vo.component.LMCheckVO">
		UPDATE RG_LOCAL_MEDIA_CHECK
		SET
		PROCESSCYCLEID = #processCycleId#,
		UPDATED_ON = sysdate,
		UPDATED_BY =
		#updateBy#,
		TABLE_BOTTOM_NOTES = #tableBottomNotes#,
		SAME_NAME_IND =
		#sameNameSubject#,
		SOURCE1 = #source1#,
		SOURCE2 = #source2#,
		SOURCE3 =
		#source3#,
		DATE1 = #date1#,
		DATE2 = #date2#,
		DATE3 = #date3#,
		RISK_SUMMARY = #summaryOfRisk#,
		LINK = #link#,
		HEADLINE = #headline#,
		ARTICLE_TEXT = #article#,
		IS_AUTO_SAVED = 'N',
		LOCAL_LAGUAGE=#localLanguage#,
		RESEARCH_DOC_ID = #rdNumber#,
		TEAM_ID=#teamTypeId#
		WHERE LOCAL_MEDIA_CHECK_ID
		= #id#
	</update>

	<update id="updateAutoSave" parameterClass="com.worldcheck.juno.vo.component.LMCheckVO">
		UPDATE
		RG_LOCAL_MEDIA_CHECK
		SET
		PROCESSCYCLEID = #processCycleId#,
		UPDATED_ON =
		sysdate,
		UPDATED_BY =
		#updateBy#,
		TABLE_BOTTOM_NOTES =
		#tableBottomNotes#,
		SAME_NAME_IND =
		#sameNameSubject#,
		SOURCE1 =
		#source1#,
		SOURCE2 = #source2#,
		SOURCE3 =
		#source3#,
		DATE1 = #date1#,
		DATE2 = #date2#,
		DATE3 = #date3#,
		RISK_SUMMARY = #summaryOfRisk#,
		LINK =
		#link#,
		HEADLINE = #headline#,
		ARTICLE_TEXT = #article#,
		IS_AUTO_SAVED =
		'Y',
		LOCAL_MEDIA_CHK_IND=#canPerformLMC#,
		LOCAL_LAGUAGE=#localLanguage#
		WHERE LOCAL_MEDIA_CHECK_ID
		= #autoSaveId#
	</update>

	<resultMap id="unrelatedDocs" class="com.worldcheck.juno.vo.component.LMCheckVO">
		<result property="id" column="LOCAL_MEDIA_CHECK_ID" />
	</resultMap>

	<select id="listUnrelatedDocOnId" parameterClass="java.util.HashMap"
		resultMap="unrelatedDocs">

		SELECT rg.LOCAL_MEDIA_CHECK_ID
		FROM
		RG_LOCAL_MEDIA_CHECK rg
		WHERE
		rg.SUBJECT_ID = #subId#
		AND
		rg.PROCESSCYCLEID
		=#processCycleId#
		and rg.local_media_chk_ind =1
		AND upper(rg.IS_AUTO_SAVED)=upper('N')
		<isNotEqual prepend="AND" property="emcId" compareValue="0">
			rg.LOCAL_MEDIA_CHECK_ID != #emcId#
		</isNotEqual>
		and rg.REPORT_INCLUDE_IND = 'Y'
		<isNotEqual prepend="AND" property="emcId" compareValue="0">
		rg.LOCAL_MEDIA_CHECK_ID not in 
		(select PARENT_DOC_ID from RG_LOCAL_RELATED_DOCS rel 
		join RG_LOCAL_MEDIA_CHECK lmc on rel.PARENT_DOC_ID = lmc.LOCAL_MEDIA_CHECK_ID and lmc.SUBJECT_ID = #subId#  and rel.CHILD_DOC_ID = #emcId#)
		</isNotEqual>
		order by rg.LOCAL_MEDIA_CHECK_ID
		
	</select>

	<resultMap id="unrelatedSubjects" class="com.worldcheck.juno.vo.common.ReportSubjectVO">
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="reportSubjectName" column="SUBJECT_NAME" />
	</resultMap>

	<select id="listUnrelatedSubjectsOnId" parameterClass="java.util.HashMap"
		resultMap="unrelatedSubjects">
		SELECT sub.SUBJECT_ID, sub.REPORT_SUBJECT_NAME SUBJECT_NAME
		FROM RG_SUBJECT sub
		WHERE sub.SUBJECT_ID != #subId#
		and sub.CRN=#crn#
	</select>
	
	<select id="listUnlinkableSubjects" parameterClass="java.util.HashMap" resultClass="java.lang.Long">
		select lmc.subject_id from rg_local_media_check lmc where lmc.processcycleid = #processCycleId# 
	    	and lmc.CASE_ID = #crn# and lmc.local_media_chk_ind = 2 and lmc.is_auto_saved != 'Y'
	</select>
	<!-- SELECT sub.SUBJECT_ID, sub.REPORT_SUBJECT_NAME SUBJECT_NAME
		FROM RG_SUBJECT sub
		WHERE sub.CRN=#crn#
		and sub.SUBJECT_ID != #subjectId#
	    and sub.SUBJECT_ID not in 
	    (select lmc.subject_id from rg_local_media_check lmc where lmc.processcycleid = #processCycleId# 
	    	and lmc.CASE_ID = #crn# and lmc.local_media_chk_ind = 2 and lmc.is_auto_saved != 'Y') -->

	<resultMap id="riskCat" class="com.worldcheck.juno.vo.component.RiskVO">
		<result property="code" column="RISK_CODE" />
		<result property="name" column="RISK" />
	</resultMap>

	<resultMap id="lmCheckRiskSet"
		class="com.worldcheck.juno.vo.component.LMCheckRiskVO" groupBy="id">
		<result property="id" column="RG_LOCAL_MEDIA_RISKS_ID" />
		<result property="parentId" column="LOCAL_MEDIA_CHECK_ID" />
		<result property="riskVO" resultMap="LMCheckVO.riskCat" />
	</resultMap>

	<resultMap id="subject" class="com.worldcheck.juno.vo.common.ReportSubjectVO">
		<result property="subjectId" column="REL_SUB_ID" />
		<result property="reportSubjectName" column="REL_SUB_NAME" />
	</resultMap>

	<resultMap id="lmCheckRelSubSet"
		class="com.worldcheck.juno.vo.component.LMCheckRelSubVO" groupBy="id">
		<result property="id" column="LOCAL_RELATED_SUBJECT_ID" />
		<result property="parentDocId" column="LOCAL_MEDIA_CHECK_ID" />
		<result property="childDocId" column="REL_SUB_CHILD_ID" />
		<result property="subjectConfigVO" resultMap="LMCheckVO.subject" />
	</resultMap>

	<resultMap id="lmCheckRelDocSet"
		class="com.worldcheck.juno.vo.component.LMCheckRelDocVO" groupBy="id">
		<result property="id" column="LOCAL_RELATED_DOCS_ID" />
		<result property="parentDocId" column="LOCAL_MEDIA_CHECK_ID" />
		<result property="childDocId" column="REL_DOC_ID" />
	</resultMap>

	<resultMap id="lmcList" class="com.worldcheck.juno.vo.component.LMCheckVO"
		groupBy="id">
		<result property="id" column="LOCAL_MEDIA_CHECK_ID" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="SUBJECT_NAME" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="crn" column="CASE_ID" />
		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="isAutoSave" column="IS_AUTO_SAVED" />
		<result property="date1" column="DATE1" />
		<result property="date2" column="DATE2" />
		<result property="date3" column="DATE3" />
		<result property="summaryOfRisk" column="RISK_SUMMARY" />
		<result property="link" column="LINK" />
		<result property="rdNumber" column="RESEARCH_DOC_ID" />
		<result property="sameNameSubject" column="SAME_NAME_IND" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="team" column="TEAM" />
		<result property="canPerformLMC" column="LOCAL_MEDIA_CHK_IND" />
		<result property="includeExcludeIdentifire" column="REPORT_INCLUDE_IND" />
		<result property="lmCheckRiskSet" resultMap="LMCheckVO.lmCheckRiskSet"
			notNullColumn="RG_LOCAL_MEDIA_RISKS_ID" />
		<result property="lmCheckRelSubSet" resultMap="LMCheckVO.lmCheckRelSubSet"
			notNullColumn="LOCAL_RELATED_SUBJECT_ID" />
		<result property="lmCheckRelDocSet" resultMap="LMCheckVO.lmCheckRelDocSet"
			notNullColumn="LOCAL_RELATED_DOCS_ID" />
		<result property="teamTypeId" column="TEAM_ID"/>
		<result property="linkSubParentDocId" column="LINKED_SUB_PARENT_DOC" />
	</resultMap>

	<resultMap id="extendedLmcList" class="com.worldcheck.juno.vo.component.LMCheckVO"
		extends="lmcList">
		<result property="tableBottomNotes" column="TABLE_BOTTOM_NOTES" />
		<result property="source1" column="source1" />
		<result property="source2" column="source2" />
		<result property="source3" column="source3" />
		<result property="readOnly" column="READ_ONLY" />
		<result property="headline" column="HEADLINE" />
		<result property="article" column="ARTICLE_TEXT" />
		<result property="localLanguage" column="LOCAL_LAGUAGE" />
		<result property="linkSubParentSubjectName" column="LINK_PARENT_SUB_NAME" />
	</resultMap>

	<resultMap id="lmcMediaList" class="com.worldcheck.juno.vo.component.LMCheckVO">
		<result property="id" column="LOCAL_MEDIA_CHECK_ID" />
		<result property="rdNumber" column="RESEARCH_DOC_ID" />
		<result property="article" column="ARTICLE_TEXT" />
		<result property="subjectName" column="report_subject_name" />
		<result property="processCycleName" column="DESCRIPTION" />
	</resultMap>

	<resultMap id="makeCopyMap" class="com.worldcheck.juno.vo.component.LMCheckVO">
		<result property="readOnly" column="READ_ONLY" />
		<result property="canPerformLMC" column="LOCAL_MEDIA_CHK_IND" />
	</resultMap>

	<select id="makeCopyDetails" parameterClass="java.util.HashMap" resultMap="makeCopyMap">
		select CASE WHEN LINKED_SUB_PARENT_DOC IS NULL THEN 'false'
				ELSE 'true' END READ_ONLY,
				LOCAL_MEDIA_CHK_IND
		from RG_LOCAL_MEDIA_CHECK
		where LOCAL_MEDIA_CHECK_ID = #emcId#
	</select>
	
	<select id="listByCRN" resultMap="lmcList" parameterClass="java.util.HashMap">
		select rgData.*,
		rers.CHILD_DOC_ID AS REL_SUB_CHILD_ID,
		rers.LOCAL_RELATED_SUBJECT_ID,
		sub.SUBJECT_ID as REL_SUB_ID,
		sub.REPORT_SUBJECT_NAME as REL_SUB_NAME,
		rerd.LOCAL_RELATED_DOCS_ID,
		rerd.CHILD_DOC_ID AS REL_DOC_ID,
		remcr.RG_LOCAL_MEDIA_RISKS_ID,
		remcr.RISK_CODE,
		risk.RISK,RLMC.RESEARCH_DOC_ID AS RDNUMBER,
		'Primary'
		TEAM,
		sub.REPORT_ORDER
		from (
		SELECT rg.LOCAL_MEDIA_CHECK_ID, rownum rn,
		rg.SUBJECT_ID,
		cs.REPORT_SUBJECT_NAME SUBJECT_NAME,
		cc.DESCRIPTION,cc.PROCESSCYCLE_ORDER,
		rg.PROCESSCYCLEID,
		rg.CASE_ID,
		rg.UPDATED_ON,
		rg.UPDATED_BY,
		rg.RISK_SUMMARY,
		rg.LINK,
		rg.SAME_NAME_IND,
		rg.RESEARCH_DOC_ID,
		rg.DATE1,
		rg.DATE2,
		rg.DATE3,
		rg.IS_AUTO_SAVED,
		rg.REPORT_INCLUDE_IND,rg.LOCAL_MEDIA_CHK_IND,
		rg.LINKED_SUB_PARENT_DOC,
		rg.TEAM_ID,
		CASE WHEN rg.LINKED_SUB_PARENT_DOC IS NULL THEN 'false'
		ELSE 'true' END READ_ONLY,
		cs.IS_PRIMARY_SUB,
		cs.REPORT_ORDER
		FROM
		RG_LOCAL_MEDIA_CHECK rg
		JOIN CMS_CASECYCLE cc ON cc.CASECYCLE_ID =
		rg.PROCESSCYCLEID
		JOIN RG_SUBJECT cs ON (cs.SUBJECT_ID
		= rg.SUBJECT_ID and cs.ENTITY_TYPE_ID=#componentLevel#)
		
		WHERE
		rg.CASE_ID =#crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('N')

		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>


		order by rg.report_include_ind desc,cs.IS_PRIMARY_SUB desc, cs.REPORT_ORDER asc, upper(cs.REPORT_SUBJECT_NAME) asc,cs.SUBJECT_ID,
		rg.SAME_NAME_IND asc,cc.PROCESSCYCLE_ORDER desc
		,rg.RESEARCH_DOC_ID asc
		) rgData

		LEFT OUTER JOIN
		RG_LOCAL_RELATED_SUBJECT rers ON
		rers.PARENT_DOC_ID =
		rgData.LOCAL_MEDIA_CHECK_ID
		LEFT OUTER JOIN
		RG_SUBJECT sub ON
		sub.SUBJECT_ID
		= rers.SUBJECT_ID
		LEFT OUTER JOIN
		RG_LOCAL_RELATED_DOCS
		rerd ON
		rerd.PARENT_DOC_ID =
		rgData.LOCAL_MEDIA_CHECK_ID
		LEFT OUTER JOIN
		RG_LOCAL_MEDIA_CHECK RLMC
		ON
		RERD.CHILD_DOC_ID=RLMC.LOCAL_MEDIA_CHECK_ID
		LEFT OUTER JOIN
		RG_LOCAL_MEDIA_RISKS remcr ON remcr.LOCAL_MEDIA_CHECK_ID =
		rgData.LOCAL_MEDIA_CHECK_ID
		LEFT OUTER JOIN CMS_RISK_MASTER risk ON
		risk.RISK_CODE = remcr.RISK_CODE

		<isNotNull property="limit">
			<isNotEqual property="limit" compareValue="0">

				WHERE rgData.rn
				BETWEEN
				#start# AND #limit#
		   		</isNotEqual>
		</isNotNull>

		order by rgData.REPORT_INCLUDE_IND DESC,rgData.IS_PRIMARY_SUB desc, rgData.REPORT_ORDER asc, upper(rgData.SUBJECT_NAME) asc,rgData.SUBJECT_ID, 
		rgData.SAME_NAME_IND asc,rgData.PROCESSCYCLE_ORDER desc,
		rgData.RESEARCH_DOC_ID asc,risk.RISK asc,
		RLMC.RESEARCH_DOC_ID asc,sub.REPORT_ORDER asc
	</select>
	
	<resultMap id="listResetRDNumberRes"
		class="com.worldcheck.juno.vo.component.LMCheckVO">
		<result property="id" column="lmc_reset_id" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="subjectId" column="SUBJECT_ID" />
	</resultMap>
	
	<select id="listResetRDNumber" resultMap="listResetRDNumberRes" parameterClass="java.util.HashMap">
		SELECT lmc_reset_id, subject_id, processcycleid FROM rg_reset_lmc_rd_number where case_id = #crn#
	</select>
	<delete id="removeRDNumberData" parameterClass="java.util.HashMap">
		delete from rg_reset_lmc_rd_number where lmc_reset_id in($idList$)
	</delete>
	<select id="getById" resultMap="extendedLmcList">
		SELECT rg.LOCAL_MEDIA_CHECK_ID,
		rg.SUBJECT_ID,rg.CASE_ID,
		cs.REPORT_SUBJECT_NAME SUBJECT_NAME,
		rg.PROCESSCYCLEID,
		rg.CASE_ID,
		cc.DESCRIPTION,
		rg.UPDATED_ON,
		rg.UPDATED_BY,
		rg.RESEARCH_DOC_ID,
		rg.RISK_SUMMARY,
		rg.LINK,
		rg.SAME_NAME_IND,
		rg.DATE1,
		rg.DATE2,
		rg.DATE3,
		rg.IS_AUTO_SAVED,
		rg.REPORT_INCLUDE_IND,
		rg.TABLE_BOTTOM_NOTES,
		rg.source1,
		rg.source2,
		rg.source3,
		rg.HEADLINE,
		rg.ARTICLE_TEXT,
		rg.LOCAL_MEDIA_CHK_IND,
		rg.LOCAL_LAGUAGE,rg.TEAM_ID,
		rers.CHILD_DOC_ID AS
		REL_SUB_CHILD_ID,
		rers.LOCAL_RELATED_SUBJECT_ID,
		sub.SUBJECT_ID as
		REL_SUB_ID,
		sub.REPORT_SUBJECT_NAME as REL_SUB_NAME,
		rerd.LOCAL_RELATED_DOCS_ID,
		rerd.CHILD_DOC_ID AS REL_DOC_ID,
		remcr.RG_LOCAL_MEDIA_RISKS_ID,
		remcr.RISK_CODE,
		CASE WHEN
		resub.PARENT_DOC_ID IS NULL THEN 'false' ELSE 'true' END READ_ONLY,
		rg.LINKED_SUB_PARENT_DOC,
		psub.REPORT_SUBJECT_NAME AS LINK_PARENT_SUB_NAME,
		risk.RISK,'Primary' TEAM
		FROM RG_LOCAL_MEDIA_CHECK rg
		JOIN CMS_CASECYCLE
		cc ON
		cc.CASECYCLE_ID = rg.PROCESSCYCLEID
		JOIN RG_SUBJECT cs ON
		cs.SUBJECT_ID = rg.SUBJECT_ID
		LEFT OUTER JOIN RG_LOCAL_RELATED_SUBJECT
		rers ON rers.PARENT_DOC_ID = rg.LOCAL_MEDIA_CHECK_ID
		LEFT OUTER JOIN RG_LOCAL_MEDIA_CHECK rercs ON rercs.LOCAL_MEDIA_CHECK_ID = rg.LINKED_SUB_PARENT_DOC
		LEFT OUTER JOIN RG_SUBJECT psub ON psub.SUBJECT_ID = rercs.SUBJECT_ID
		LEFT OUTER JOIN
		RG_SUBJECT sub ON sub.SUBJECT_ID = rers.SUBJECT_ID
		LEFT OUTER JOIN
		RG_LOCAL_RELATED_DOCS rerd ON rerd.PARENT_DOC_ID =
		rg.LOCAL_MEDIA_CHECK_ID
		LEFT OUTER JOIN RG_LOCAL_MEDIA_RISKS remcr ON
		remcr.LOCAL_MEDIA_CHECK_ID = rg.LOCAL_MEDIA_CHECK_ID
		LEFT OUTER JOIN
		CMS_RISK_MASTER risk ON risk.RISK_CODE = remcr.RISK_CODE
		LEFT OUTER
		JOIN RG_LOCAL_RELATED_SUBJECT resub ON resub.CHILD_DOC_ID = rg.LOCAL_MEDIA_CHECK_ID
		WHERE
		rg.LOCAL_MEDIA_CHECK_ID = #id#
		order by rerd.child_doc_id ASC
	</select>

	<select id="listForGenerateMedia" resultMap="lmcMediaList"
		parameterClass="java.util.HashMap">
		SELECT
		rg.LOCAL_MEDIA_CHECK_ID,
		rg.ARTICLE_TEXT,
		rg.RESEARCH_DOC_ID,
		cc.description,cs.report_subject_name
		FROM
		RG_LOCAL_MEDIA_CHECK rg,
		cms_casecycle cc, RG_SUBJECT cs
		WHERE
		cc.casecycle_id=rg.processcycleid
		and cs.subject_id= rg.subject_id
		and cs.ENTITY_TYPE_ID=#componentLevel#
		and rg.CASE_ID =
		#crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('N')
		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.processcycleid=#processCycleId#
			</isNotEqual>
		</isNotNull>
		order by rg.report_include_ind desc,cs.IS_PRIMARY_SUB desc,
		cs.REPORT_ORDER ASC,upper(cs.REPORT_SUBJECT_NAME),cs.SUBJECT_ID,rg.SAME_NAME_IND,
		cc.PROCESSCYCLE_ORDER desc,rg.RESEARCH_DOC_ID ASC
	</select>

	<!--useless right now-->
	<select id="maxRDNumber" resultClass="int">
		select MAX(RESEARCH_DOC_ID)
		FROM RG_LOCAL_MEDIA_CHECK
		WHERE SUBJECT_ID = #subjectId#
		AND CASE_ID =
		#crn#
		AND PROCESSCYCLEID = #processCycleId#
	</select>

	<resultMap id="miniEmcRecord" class="com.worldcheck.juno.vo.component.LMCheckVO"
		groupBy="id">
		<result property="id" column="LOCAL_MEDIA_CHECK_ID" />
		<result property="updateOn" column="UPDATED_ON" />
	</resultMap>

	<!--generic query-->
	<select id="getUpdationTimeById" resultMap="miniEmcRecord">
		SELECT
		rg.LOCAL_MEDIA_CHECK_ID,
		rg.UPDATED_ON
		FROM RG_LOCAL_MEDIA_CHECK rg
		WHERE
		rg.LOCAL_MEDIA_CHECK_ID = #id#
	</select>

	<!--generic query-->
	<select id="findById" resultClass="int">
		select
		count(rg.LOCAL_MEDIA_CHECK_ID)
		FROM RG_LOCAL_MEDIA_CHECK rg
		WHERE
		rg.LOCAL_MEDIA_CHECK_ID = #id#
	</select>

	<!--generic query-->
	<delete id="delete">
		delete FROM RG_LOCAL_MEDIA_CHECK WHERE
		LOCAL_MEDIA_CHECK_ID = #id#
	</delete>

	<!--generic query-->
	<delete id="deleteIds" parameterClass="java.util.HashMap">
		delete FROM RG_LOCAL_MEDIA_CHECK WHERE
		LOCAL_MEDIA_CHECK_ID IN

		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
	    </iterate>
	</delete>

	<!--generic query-->
	<delete id="deleteNewAutoSave">
		delete FROM RG_LOCAL_MEDIA_CHECK WHERE
		CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</delete>

	<!--generic query-->
	<delete id="deleteAutoSave">
		delete FROM RG_LOCAL_MEDIA_CHECK WHERE
		CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID = #parentId#
	</delete>

	<!--generic query-->
	<select id="findAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.LOCAL_MEDIA_CHECK_ID
		FROM RG_LOCAL_MEDIA_CHECK rg, RG_LOCAL_MEDIA_CHECK prnt
		WHERE
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		rg.PARENT_RECORD_ID = #parentId#
		AND prnt.LOCAL_MEDIA_CHECK_ID = rg.PARENT_RECORD_ID
		and prnt.PROCESSCYCLEID in ($processCycleId$)
	</select>

	<!--generic query-->
	<select id="findNewAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.LOCAL_MEDIA_CHECK_ID
		FROM RG_LOCAL_MEDIA_CHECK rg
		WHERE CASE_ID=#crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</select>

	<delete id="removeRisksExceptIds">
		DELETE FROM RG_LOCAL_MEDIA_RISKS
		WHERE
		LOCAL_MEDIA_CHECK_ID = #emcId#
		AND RISK_CODE NOT IN ($idList$)
	</delete>

	<delete id="removeRIdsExceptIds">
		DELETE FROM RG_LOCAL_RELATED_DOCS
		WHERE PARENT_DOC_ID
		=
		#emcId#
		AND CHILD_DOC_ID NOT IN ($idList$)
	</delete>

	<delete id="removeRSExceptIds">
		DELETE FROM RG_LOCAL_RELATED_SUBJECT
		WHERE
		PARENT_DOC_ID
		= #emcId#
		AND SUBJECT_ID NOT IN ($idList$)
	</delete>

	<resultMap id="subjectLst" class="com.worldcheck.juno.vo.common.ReportSubjectVO">
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="reportSubjectName" column="SUBJECT_NAME" />
		<result property="subjectType" column="ENTITY_TYPE_ID" />
	</resultMap>

	<select id="getSubProcCycleList" resultMap="ReportSubjectVO.subProcCycleList">
		select lmc.subject_id subject_id,
		lmc.processcycleid Process_Cycle_Id,cs.subject_name subject_name,
		ccl.DESCRIPTION Process_Cycle
		from RG_LOCAL_MEDIA_CHECK lmc,
		RG_SUBJECT cs ,CMS_CASECYCLE ccl
		where cs.CRN = lmc.case_id
		and ccl.CASECYCLE_ID= lmc.processcycleid
		and cs.subject_id  =lmc.subject_id
		and lmc.case_id = #crn#
 		and upper(lmc.IS_AUTO_SAVED)=upper('N') 
 		and  lmc.local_media_chk_ind =2
		order by cs.subject_id, lmc.processcycleid
	</select>
	<select id="checkCanPerform" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		select count(*) from RG_LOCAL_MEDIA_CHECK where
		CASE_ID=#crn# and
		SUBJECT_ID=#subId# and PROCESSCYCLEID
		=#processCycleId#
		and local_media_chk_ind =1 and
		upper(IS_AUTO_SAVED)=upper('N') 
	</select>
	<select id="getProcessCycleList" parameterClass="java.util.HashMap"
		resultMap="ProcessCycleVO.processCycleList">
		SELECT LMC.processcycleid Process_Cycle_Id,cc.DESCRIPTION Process_Cycle
		FROM RG_LOCAL_MEDIA_CHECK LMC,cms_casecycle cc
		WHERE LMC.subject_id=#subId# AND LMC.case_id=#crn#
		AND cc.casecycle_id= LMC.processcycleid
		AND upper(LMC.IS_AUTO_SAVED)=upper('N')
		AND LMC.LOCAL_MEDIA_CHECK_ID != #recordId#
		AND LMC.local_media_chk_ind =2
	</select>

	<select id="getSearchCount" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">

		SELECT count(*)	FROM
		RG_LOCAL_MEDIA_CHECK rg,RG_SUBJECT	cs

		WHERE
		rg.CASE_ID = #crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('N')
		AND cs.SUBJECT_ID = rg.SUBJECT_ID
		AND cs.ENTITY_TYPE_ID=#componentLevel#

		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>

	</select>

	<insert id="makeCopy" parameterClass="java.util.HashMap">

		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_LOCAL_MEDIA_CHECK_SEQ.NEXTVAL from dual
	    </selectKey>

		insert into RG_LOCAL_MEDIA_CHECK (
		LOCAL_MEDIA_CHECK_ID,
		CASE_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,
		RESEARCH_DOC_ID,
		UPDATED_ON,
		UPDATED_BY,
		TABLE_BOTTOM_NOTES,
		SAME_NAME_IND,
		SOURCE1,
		SOURCE2,
		SOURCE3,
		DATE1,
		DATE2,
		DATE3,
		RISK_SUMMARY,
		LINK,
		HEADLINE,
		ARTICLE_TEXT,
		REPORT_INCLUDE_IND,
		IS_AUTO_SAVED,LOCAL_MEDIA_CHK_IND,LOCAL_LAGUAGE,TEAM_ID
		)


		select #id#, CASE_ID,
		SUBJECT_ID,
		#processCycleId#,
		2147483647,
		sysdate,
		#userName#,
		TABLE_BOTTOM_NOTES,
		SAME_NAME_IND,
		SOURCE1,
		SOURCE2,
		SOURCE3,
		DATE1,
		DATE2,
		DATE3,
		RISK_SUMMARY,
		LINK,
		HEADLINE,
		ARTICLE_TEXT,
		'Y',
		IS_AUTO_SAVED,LOCAL_MEDIA_CHK_IND,LOCAL_LAGUAGE,TEAM_ID
		from
		RG_LOCAL_MEDIA_CHECK
		where LOCAL_MEDIA_CHECK_ID =#recordId#

	</insert>

	<insert id="makeCopyRisk" parameterClass="java.util.HashMap">
		INSERT INTO
		RG_LOCAL_MEDIA_RISKS
		(RG_LOCAL_MEDIA_RISKS_ID, RISK_CODE,
		LOCAL_MEDIA_CHECK_ID)


		SELECT RG_LOCAL_MEDIA_RISKS_SEQ.NEXTVAL,
		RISK_CODE,#id# from RG_LOCAL_MEDIA_RISKS
		Where
		LOCAL_MEDIA_CHECK_ID=#recordId#
		
		</insert>

	<select id="listOnSubjectAndPC" resultMap="lmcList"
		parameterClass="java.util.HashMap">


		SELECT rg.LOCAL_MEDIA_CHECK_ID,
		rg.SUBJECT_ID,
		cs.SUBJECT_NAME,
		rg.PROCESSCYCLEID,
		rg.CASE_ID,
		cc.DESCRIPTION,
		rg.UPDATED_ON,
		rg.UPDATED_BY,
		rg.RISK_SUMMARY,
		rg.LINK,
		rg.SAME_NAME_IND,
		rg.RESEARCH_DOC_ID,
		rg.DATE1,
		rg.DATE2,
		rg.DATE3,
		rg.IS_AUTO_SAVED,
		rg.REPORT_INCLUDE_IND,
		rg.TEAM_ID,
		rg.LOCAL_MEDIA_CHK_IND,
		rg.LINKED_SUB_PARENT_DOC,
		rers.CHILD_DOC_ID AS
		REL_SUB_CHILD_ID,
		rers.LOCAL_RELATED_SUBJECT_ID,
		sub.SUBJECT_ID as
		REL_SUB_ID,
		sub.SUBJECT_NAME as REL_SUB_NAME,
		rerd.LOCAL_RELATED_DOCS_ID,
		rerd.CHILD_DOC_ID AS REL_DOC_ID,
		remcr.RG_LOCAL_MEDIA_RISKS_ID,
		remcr.RISK_CODE,
		risk.RISK,'Primary' TEAM
		FROM
		RG_LOCAL_MEDIA_CHECK rg
		JOIN CMS_CASECYCLE cc ON cc.CASECYCLE_ID =
		rg.PROCESSCYCLEID
		JOIN RG_SUBJECT cs ON cs.SUBJECT_ID = rg.SUBJECT_ID
		LEFT OUTER JOIN RG_LOCAL_RELATED_SUBJECT rers ON rers.PARENT_DOC_ID =
		rg.LOCAL_MEDIA_CHECK_ID
		LEFT OUTER JOIN RG_SUBJECT sub ON
		sub.SUBJECT_ID
		= rers.SUBJECT_ID
		LEFT OUTER JOIN RG_LOCAL_RELATED_DOCS
		rerd ON
		rerd.PARENT_DOC_ID = rg.LOCAL_MEDIA_CHECK_ID
		LEFT OUTER JOIN
		RG_LOCAL_MEDIA_RISKS remcr ON remcr.LOCAL_MEDIA_CHECK_ID =
		rg.LOCAL_MEDIA_CHECK_ID
		LEFT OUTER JOIN CMS_RISK_MASTER risk ON
		risk.RISK_CODE = remcr.RISK_CODE
		WHERE
		rg.CASE_ID = #crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('N')

		<isNotNull property="subId">
			<isNotEqual prepend="AND" property="subId" compareValue="0">
				rg.SUBJECT_ID=#subId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>

		order by
		rg.SUBJECT_ID ASC,rg.RESEARCH_DOC_ID ASC,rg.SAME_NAME_IND ASC

	</select>

	<parameterMap id="getParameterMapIncExdReport" class="java.util.Map">

		<parameter property="includeExcludeIds" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="includeExcludeIdentifire" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="userCode" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="errorCode" jdbcType="INTEGER" javaType="java.lang.Integer"
			mode="OUT" />
	</parameterMap>
	<!--- Calling stored procedure -->
	<procedure id="callIncExdReport" parameterMap="getParameterMapIncExdReport">

		{ call
		RG_PROC_IND_EXD_REPORT( ?, ?,
		?,?,'LMC','N','LOCAL_MEDIA_CHECK_ID','Y','RESEARCH_DOC_ID')}
	</procedure>


	<update id="updateRdNumber" parameterClass="java.util.HashMap">
		update RG_LOCAL_MEDIA_CHECK
		set
		RESEARCH_DOC_ID=
		case LOCAL_MEDIA_CHECK_ID
		<iterate property="recList">
			when #recList[].id# then
			#recList[].rdNumber#
		</iterate>
		END
		<isEqual prepend="," property="changeUpdateOn" compareValue="true">
			GRID_UPDATED_ON = sysdate
		</isEqual>
		where LOCAL_MEDIA_CHECK_ID IN
		<iterate property="recList" open="(" close=")" conjunction=",">
			#recList[].id#
	    </iterate>
	</update>

	<resultMap id="resultVO" class="com.worldcheck.juno.vo.component.LMCheckVO">
		<result property="id" column="LOCAL_MEDIA_CHECK_ID" />

	</resultMap>

	<select id="getOrderedDocs" parameterClass="java.util.HashMap"
		resultMap="resultVO">
		SELECT LOCAL_MEDIA_CHECK_ID
		FROM RG_LOCAL_MEDIA_CHECK rg
		WHERE
		rg.CASE_ID = #crn#
		AND upper(rg.IS_AUTO_SAVED)=upper('N')
		AND
		upper(rg.REPORT_INCLUDE_IND)!='N'
		AND rg.SUBJECT_ID=#subjectId#
		AND
		rg.PROCESSCYCLEID=#processCycleId#
		order by SAME_NAME_IND asc,
		LOCAL_MEDIA_CHECK_ID asc
	</select>

	<select id="getAddedOrderedDocs" parameterClass="java.util.HashMap"
		resultMap="resultVO">
		SELECT LOCAL_MEDIA_CHECK_ID
		FROM RG_LOCAL_MEDIA_CHECK rg
		WHERE
		rg.CASE_ID = #crn#
		AND upper(rg.IS_AUTO_SAVED)=upper('N')
		AND
		rg.SUBJECT_ID=#subjectId#
		AND upper(rg.REPORT_INCLUDE_IND)!='N'
		AND
		rg.PROCESSCYCLEID=#processCycleId#
		order by SAME_NAME_IND asc, RESEARCH_DOC_ID asc
	</select>

	<select id="getMaxTime" parameterClass="java.util.HashMap"
		resultClass="java.util.Date">
		select nvl(max(GRID_UPDATED_ON),sysdate) from RG_LOCAL_MEDIA_CHECK rg where
		rg.case_id=#crn#
		AND rg.SUBJECT_ID=#subjectId#
		AND
		rg.PROCESSCYCLEID=#processCycleId#
	</select>

	<resultMap id="resultHistory" class="com.worldcheck.juno.vo.component.LMCheckVO">

		<result property="displayDate" column="displayDate" />
		<result property="updateBy" column="UPDATED_BY" />

		<result property="processCycleName" column="DESCRIPTION" />
		<result property="id" column="HISTORY_ID" />
		<result property="summaryOfRisk" column="RISK_SUMMARY" />
		<result property="link" column="LINK" />
		<result property="tableBottomNotes" column="TABLE_BOTTOM_NOTES" />

		<result property="source1" column="source1" />
		<result property="source2" column="source2" />
		<result property="source3" column="source3" />
		<result property="date1" column="DATE1" />
		<result property="date2" column="DATE2" />
		<result property="date3" column="DATE3" />
		<result property="headline" column="HEADLINE" />

	</resultMap>

	<select id="getHistory" parameterClass="java.util.HashMap"
		resultMap="resultHistory">
		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (SELECT rg.HISTORY_ID,
		cc.DESCRIPTION,
		to_char(rg.UPDATED_ON, 'DD-Mon-YY HH24:MI:SS') as
		displayDate,
		rg.UPDATED_BY,
		rg.TABLE_BOTTOM_NOTES,
		rg.source1,rg.source2,rg.source3,
		rg.DATE1,
		rg.DATE2,
		rg.DATE3,
		rg.LINK,
		rg.RISK_SUMMARY,
		rg.HEADLINE,
		rg.CASE_ID
		from CMS_CASECYCLE cc,
		rg_local_media_check_hst rg
		WHERE rg.PROCESSCYCLEID = cc.CASECYCLE_ID
		and rg.LOCAL_MEDIA_CHECK_ID=#recordId#
		order by rg.UPDATED_ON desc
		) a
		WHERE ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#
	</select>

	<select id="getHistoryCount" resultClass="java.lang.Integer">
		SELECT count(*)
		FROM
		rg_local_media_check_hst rg
		where rg.LOCAL_MEDIA_CHECK_ID=#recordId#
	</select>

	<select id="getArticleText" resultClass="java.lang.String">
		select ARTICLE_TEXT from
		RG_LOCAL_MEDIA_CHECK_HST where history_id=#recordId#
	</select>



	<resultMap id="lmcListForDirectRisk" class="com.worldcheck.juno.vo.component.LMCheckVO"
		groupBy="id">
		<result property="id" column="LOCAL_MEDIA_CHECK_ID" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="SUBJECT_NAME" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<!-- <result property="processCycleName" column="DESCRIPTION" />-->
		<result property="crn" column="CASE_ID" />
		<result property="rdNumber" column="RESEARCH_DOC_ID" />
		<result property="identifiedSubject" column="SAME_NAME_IND" />
		<result property="lmCheckRiskSet" resultMap="LMCheckVO.lmCheckRiskSet"
			notNullColumn="RG_LOCAL_MEDIA_RISKS_ID" />
	</resultMap>

	<!-- this query is used in direct risk factors component -->
	<select id="getLMCList" resultMap="lmcListForDirectRisk">
		SELECT rg.LOCAL_MEDIA_CHECK_ID,
		rg.SUBJECT_ID,
		cs.SUBJECT_NAME,
		rg.PROCESSCYCLEID,
		rg.CASE_ID,
		remcr.RISK_CODE,
		rg.RESEARCH_DOC_ID,
		risk.RISK, rg.SAME_NAME_IND,
		remcr.RG_LOCAL_MEDIA_RISKS_ID
		FROM
		RG_LOCAL_MEDIA_CHECK rg
		JOIN
		CMS_CASECYCLE cc ON cc.CASECYCLE_ID =
		rg.PROCESSCYCLEID
		JOIN RG_SUBJECT
		cs ON cs.SUBJECT_ID = rg.SUBJECT_ID


		LEFT OUTER JOIN
		RG_LOCAL_MEDIA_RISKS remcr ON
		remcr.LOCAL_MEDIA_CHECK_ID =
		rg.LOCAL_MEDIA_CHECK_ID
		LEFT OUTER JOIN
		CMS_RISK_MASTER risk ON
		risk.RISK_CODE = remcr.RISK_CODE
		WHERE
		rg.CASE_ID =#crn# AND
		rg.PROCESSCYCLEID=#processCycleId# AND
		upper(rg.IS_AUTO_SAVED)=upper('N')
		AND
		upper(rg.REPORT_INCLUDE_IND)=upper('Y')
		AND rg.LOCAL_MEDIA_CHK_IND=1
		order by rg.RESEARCH_DOC_ID
		ASC,
		rg.SUBJECT_ID ASC

	</select>
	
	<select id="getRisksForSubject" resultMap="ReportSubjectVO.getSubjectRisks">
		select distinct risk.risk_code, lmc.subject_id from rg_local_media_risks risk
		join rg_local_media_check lmc on lmc.local_media_check_id = risk.local_media_check_id
		where lmc.case_id = #crn# and lmc.processcycleid = #processCycleId#
	</select>

	<insert id="insertHistory" parameterClass="com.worldcheck.juno.vo.component.LMCheckVO">

		insert into RG_LOCAL_MEDIA_CHECK_HST (
		HISTORY_ID,
		CASE_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,
		UPDATED_ON,
		UPDATED_BY,
		TABLE_BOTTOM_NOTES,
		SAME_NAME_IND,
		SOURCE1,
		SOURCE2,
		SOURCE3,
		DATE1,
		DATE2,
		DATE3,
		LINK,
		RISK_SUMMARY,
		ARTICLE_TEXT,
		HEADLINE,
		REPORT_INCLUDE_IND,
		TEAM_ID,
		LOCAL_MEDIA_CHECK_ID
		)
		
		( select
		RG_LOCAL_MEDIA_CHECK_HST_SEQ.NEXTVAL,
		rg.CASE_ID,
		rg.SUBJECT_ID,
		rg.PROCESSCYCLEID,
		sysdate,
		rg.UPDATED_BY,
		rg.TABLE_BOTTOM_NOTES,
		rg.SAME_NAME_IND,
		rg.SOURCE1,
		rg.SOURCE2,
		rg.SOURCE3,
		rg.DATE1,
		rg.DATE2,
		rg.DATE3,
		rg.LINK,
		rg.RISK_SUMMARY,
		rg.ARTICLE_TEXT,
		rg.HEADLINE,
		'Y',
		rg.TEAM_ID,
		rg.LOCAL_MEDIA_CHECK_ID
		 from RG_LOCAL_MEDIA_CHECK  rg where rg.LOCAL_MEDIA_CHECK_ID=#id#
		)
	
	</insert>

	<select id="getLinkDocArticle" resultClass="java.lang.String">
		select ARTICLE_TEXT
		from
		RG_LOCAL_MEDIA_CHECK where LOCAL_MEDIA_CHECK_ID=#recordId#
	</select>
	
	
	<delete id="unlinkExclude">
		delete FROM RG_LOCAL_RELATED_DOCS WHERE
		CHILD_DOC_ID IN
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
	    </iterate>
	</delete>
	
	
	<insert id="insertHistoryBeforeDeletion"
		parameterClass="java.util.HashMap">
		insert into RG_LOCAL_MEDIA_CHECK_HST (
		HISTORY_ID,
		CASE_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,
		UPDATED_ON,
		UPDATED_BY,LOCAL_MEDIA_CHECK_ID
		
		)
    
	    SELECT
		RG_LOCAL_MEDIA_CHECK_HST_SEQ.NEXTVAL,inner_view.*
		FROM
		<iterate property="recList" conjunction="UNION ALL" open="("
			close=")">
			 (SELECT CASE_ID,SUBJECT_ID,PROCESSCYCLEID,sysdate,#userName# UPDATED_BY ,#recList[]# LOCAL_MEDIA_CHECK_ID
			  from RG_LOCAL_MEDIA_CHECK  
   			 where LOCAL_MEDIA_CHECK_ID=#recList[]#)
			
		</iterate>
		inner_view
    </insert>
    
    <select id="getNextDocumentNumber" resultClass="java.lang.Long" parameterClass="java.util.HashMap">
		select nvl(max(research_doc_id),0)+1 from RG_LOCAL_MEDIA_CHECK 
		where subject_id = #subjectId# and processcycleid = #processCycleId#
		and IS_AUTO_SAVED='N'
		<isEqual property="sameName" compareValue="N" prepend="and">
			same_name_ind = 'N'
		</isEqual>
	</select>
	
	<select id="getRecordCount" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
		select count(*) from rg_local_media_check
		where subject_id = #subjectId# and processcycleid = #processCycleId#
	</select>
	
	<select id="checkForCanPerformNo" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
		select count(*) from rg_local_media_check
		where subject_id = #subjectId# and processcycleid = #processCycleId#
		and local_media_chk_ind = 2
	</select>
</sqlMap>