<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ReportSubjectVO">

	<resultMap id="result" class="com.worldcheck.juno.vo.common.ReportSubjectVO">
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="reportSubjectName" column="SUBJECT_NAME" />
	</resultMap>
	
	<resultMap id="subjectRisks" class="com.worldcheck.juno.vo.component.RiskVO">
		<result property="code" column="RISK_CODE" />
	</resultMap>

	<resultMap id="getSubjectRisks" class="com.worldcheck.juno.vo.common.ReportSubjectVO" groupBy="subjectId">
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="risks" resultMap="ReportSubjectVO.subjectRisks" />
	</resultMap>

	<!-- Insert example, using the Account parameter class -->

	<select id="getByCRN" resultMap="result" parameterClass="java.lang.String">
		SELECT
		SUBJECT_ID,SUBJECT_NAME FROM CMS_SUBJECT WHERE CRN=#crn#
		order by
		SUBJECT_ID
	</select>

	<select id="getRemarksSubjectsByCRN" resultMap="result"
		parameterClass="java.lang.String">
		SELECT SUBJECT_ID,SUBJECT_NAME
		FROM CMS_SUBJECT
		WHERE
		CRN=#crn# AND
		SUBJECT_ID not in (SELECT rg.SUBJECT_ID from RG_REMARKS
		rg )
		order by SUBJECT_ID
	</select>
	
	
	<resultMap id="procCycle" class="com.worldcheck.juno.vo.common.ProcessCycleVO">
		<result property="description" column="Process_Cycle" />
		<result property="id" column="Process_Cycle_Id" />
	</resultMap>
	
	<resultMap id="subProcCycleList" class="com.worldcheck.juno.vo.common.ReportSubjectVO" groupBy="subjectId">
		<result property="subjectId" column="subject_id" />
		<result property="reportSubjectName" column="subject_name" />
		<result property="processCycles" resultMap="ReportSubjectVO.procCycle" />
	</resultMap>


	<select id="getPersonalDetailsSubjectsByCRN" resultMap="result"
		parameterClass="java.lang.String">
		SELECT SUBJECT_ID,SUBJECT_NAME
		FROM CMS_SUBJECT
		,CMS_ENTITYTYPE_MASTER
		WHERE CRN=#test# AND
		upper(ENTITY_NAME) like
		upper('individual') and
		SUBJECT_ID not in (select subject_id from (
		select subject_id,count(distinct PROCESSCYCLEID) as pidCount from
		RG_PERSONAL_SUMMARY where upper(IS_AUTO_SAVED) = upper('n')
		group by
		subject_id )
		where pidCount = 3)
		order by
		SUBJECT_ID
	</select>
	
	<select id="getManagementSubjectsByCRN" resultMap="result"
		parameterClass="java.lang.String">
		SELECT SUBJECT_ID,SUBJECT_NAME
		FROM CMS_SUBJECT
		,CMS_ENTITYTYPE_MASTER
		WHERE CRN=#test# AND
		upper(ENTITY_NAME) like
		upper('company') and
		SUBJECT_ID not in (select subject_id from (
		select subject_id,count(distinct PROCESSCYCLEID) as pidCount from
		RG_MANAGEMENT_SUMMARY where upper(IS_AUTO_SAVED) = upper('n')
		group by
		subject_id )
		where pidCount = 3)
		order by
		SUBJECT_ID
	</select>
	
	<resultMap id="subjectList" class="com.worldcheck.juno.vo.common.ReportSubjectVO">
		<result property="subjectId" column="subject_id" />
		<result property="reportSubjectName" column="report_subject_name" />
		<result property="cmsSubjectName" column="report_subject_name" />
		<result property="junoOrder" column="report_order" />
		<result property="subjectTypeId" column="entity_type_id" />
		<result property="crnId" column="CRN" />
		<result property="countryId" column="country_id" />
		<result property="primary" column="IS_PRIMARY_SUB" />
		<result property="subjectReList" column="re_ids" />
	</resultMap>
	
	<select id="getByCmsSubjectId" resultMap="subjectList" parameterClass="java.util.HashMap">
		select
		rg.subject_id, 
		rg.report_subject_name, 
		rg.subject_name, 
		rg.report_order, 
		rg.CRN, 
		rg.entity_type_id, 
		case when rg.IS_PRIMARY_SUB = 1 then 'true' else 'false' end IS_PRIMARY_SUB,
		cms.re_ids,
    	cms.country_id,
		'false' deleted
		from rg_subject rg 
		join cms_subject cms on cms.subject_id = rg.cms_subject_id
		where rg.CRN = #crn# and rg.CMS_SUBJECT_ID = #subjectId#
		order by rg.is_primary_sub desc, rg.report_order, upper(rg.report_subject_name)
	</select>
	
	<select id="listByCRN" resultMap="subjectList" parameterClass="java.util.HashMap">
		select
		rg.subject_id, 
		rg.report_subject_name, 
		rg.subject_name, 
		rg.report_order, 
		rg.CRN, 
		rg.entity_type_id, 
		case when rg.IS_PRIMARY_SUB = 1 then 'true' else 'false' end IS_PRIMARY_SUB,
		cms.re_ids,
    	cms.country_id,
		'false' deleted
		from rg_subject rg 
		join cms_subject cms on cms.subject_id = rg.cms_subject_id
		where rg.CRN = #crn#
		order by rg.is_primary_sub desc, rg.report_order, upper(rg.report_subject_name)
	</select>
	
	<select id="listAllByCRN" resultMap="subjectList" parameterClass="java.util.HashMap">
		select 
		rg.subject_id,
		rg.report_subject_name, 
		rg.subject_name, 
		rg.report_order, 
		rg.CRN, 
		rg.entity_type_id,
    	cms.country_id,
		case when rg.IS_PRIMARY_SUB = 1 then 'true' else 'false' end IS_PRIMARY_SUB,
		cms.re_ids,
		case when rg.cms_subject_id is null then 'true' else 'false' end deleted
		from rg_subject rg 
		left outer join cms_subject cms on cms.subject_id = rg.cms_subject_id
		where rg.CRN = #crn#
		order by rg.is_primary_sub desc, rg.report_order, upper(rg.report_subject_name)
	</select>
	
	<select id="subjectListForCycle" resultMap="subjectList" parameterClass="java.util.HashMap">
		select * from rg_subject_cycle
		where crn = #crn# and processcycleid = #processCycleId#
	</select>
	
	<resultMap id="primarysubjectList" class="com.worldcheck.juno.vo.common.ReportSubjectVO">
		<result property="subjectId" column="subject_id" />
		<result property="reportSubjectName" column="report_subject_name" />
		<result property="cmsSubjectName" column="report_subject_name" />
		
	</resultMap>
	<select id="primarySubjectDetail"  resultMap="primarysubjectList" parameterClass="java.lang.String">

		SELECT SUB.SUBJECT_NAME,sub.report_subject_name, SUB.SUBJECT_ID FROM rg_SUBJECT SUB WHERE IS_PRIMARY_SUB=1 AND CRN=#CRN# 

	</select> 
	
	<select id="getPrimarySubjectForCycle"  resultMap="primarysubjectList" parameterClass="java.util.HashMap">
		SELECT SUB.SUBJECT_NAME,sub.report_subject_name, SUB.SUBJECT_ID FROM RG_SUBJECT_CYCLE SUB WHERE IS_PRIMARY_SUB=1 AND CRN=#crn# and processcycleid = #processCycleId# 
	</select>
	
	<select id="pastCycleDataExists" parameterClass="java.util.HashMap" resultClass="java.lang.Boolean">
		SELECT CASE WHEN count(*) > 0 THEN 'true' ELSE 'false' END FROM RG_SUBJECT_CYCLE WHERE CRN = #crn# AND PROCESSCYCLEID = #processCycleId#
	</select> 
	
	<select id="subjectDetails" parameterClass="java.util.HashMap" resultMap="subjectList">
		select
		rg.subject_id, 
		rg.report_subject_name, 
		rg.subject_name, 
		rg.report_order, 
		rg.CRN, 
		rg.entity_type_id, 
		case when rg.IS_PRIMARY_SUB = 1 then 'true' else 'false' end IS_PRIMARY_SUB,
		cms.re_ids,
    	cms.country_id,
		'false' deleted
		from rg_subject rg 
		join cms_subject cms on cms.subject_id = rg.cms_subject_id
		where rg.SUBJECT_ID = #subjectId# and rg.CMS_SUBJECT_ID is not null
	</select>
	
	<parameterMap id="deleteSubjectDataParams" class="java.util.Map">

		<parameter property="crn" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="processCycleId" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="subjectId" jdbcType="LONG" javaType="java.lang.Long"
			mode="IN" />
		<parameter property="errorCode" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
	</parameterMap>
	
	<update id="deleteSubjectData" parameterMap="deleteSubjectDataParams">
		{ call RG_PROC_DELETE_COMPONENT_DATA( ?, ?, ?) }
	</update>
	
	<insert id="insertSubjectCycleData" parameterClass="java.util.HashMap">
		insert into rg_subject_cycle 
		(SUBJECT_CYCLE_ID,CRN,PROCESSCYCLEID,SUBJECT_ID,SUBJECT_NAME,REPORT_SUBJECT_NAME,REPORT_ORDER,IS_PRIMARY_SUB,ENTITY_TYPE_ID,COUNTRY_ID,RE_IDS)
		select RG_SUBJECT_CYCLE_SEQ.nextval, rg.crn, #processCycleId#, rg.subject_id, rg.subject_name, rg.report_subject_name, rg.report_order, 
		rg.is_primary_sub, rg.entity_type_id, cms.country_id,cms.re_ids
		from rg_subject rg join cms_subject cms on cms.subject_id = rg.cms_subject_id
		where rg.crn = #crn#
	</insert>
</sqlMap>
