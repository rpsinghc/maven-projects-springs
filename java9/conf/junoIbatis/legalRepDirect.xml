<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="LegalRepDirectSummaryVO">


	<!-- Inserting into Personal Details Component  -->
	<insert id="insert"
		parameterClass="com.worldcheck.juno.vo.component.LegalRepDirectSummaryVO">
		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_LEGAL_CHECK_SMRY_SEQ.NEXTVAL from dual
		</selectKey>

		insert into RG_LEGAL_CHECK_SMRY (
		LEGAL_SUMMARY_ID,
		CASE_ID,
		PROCESSCYCLEID,
		TABLE_BOTTOM_NOTES,
		TITLE,
		UPDATED_ON,UPDATED_BY,
		TYPE_OF_CHECK,
		TOP_DESCRIPTION,
		SUBJECT_ID,
		SHOW_TABLE_FLAG,
		IS_AUTO_SAVED
		)values (
		#id#,
		#crn#,#processCycleId#,#tableBottomNotes#,		
		#title#,
		sysdate,#updateBy#,
		#typeOfCheck#,
		#topDescription#,		
		#subjectId#,
		#showTable#,
		#isAutoSave#
		)
	</insert>
	<!--generic query-->
	<insert id="insertAutoSave">
		<selectKey keyProperty="autoSaveId" resultClass="long">
			SELECT
			RG_LEGAL_CHECK_SMRY_SEQ.NEXTVAL from dual
	  </selectKey>
		insert into RG_LEGAL_CHECK_SMRY (
		LEGAL_SUMMARY_ID,
		CASE_ID,
		PROCESSCYCLEID,
		SUBJECT_ID,
		TITLE,
		UPDATED_ON,
		UPDATED_BY,
		TABLE_BOTTOM_NOTES,
		TOP_DESCRIPTION,
		TYPE_OF_CHECK,
		IS_AUTO_SAVED,
		SHOW_TABLE_FLAG,
		PARENT_RECORD_ID
		)values (
		#autoSaveId#,
		#crn#,
		#processCycleId#,
		#subjectId#,
		#title#,
		sysdate,
		#updateBy#,
		#tableBottomNotes#,
		#topDescription#,
		#typeOfCheck#,
		'Y',
		#showTable#,
		#id#
		)
	</insert>

	<insert id="inserthistory"
		parameterClass="com.worldcheck.juno.vo.component.LegalRepDirectSummaryVO">
		<selectKey keyProperty="historyId" resultClass="long">
			SELECT
			RG_LEGAL_CHECK_SMRY_HST_SEQ.NEXTVAL from dual
	 	</selectKey>
		insert into
		RG_LEGAL_CHECK_SMRY_HST (
		HISTORY_ID,
		LEGAL_SUMMARY_ID,
		SUBJECT_ID,
		PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,
		TITLE,
		TYPE_OF_CHECK,
		TOP_DESCRIPTION,
		TABLE_BOTTOM_NOTES,
		SHOW_TABLE_FLAG
		)
		values(
		#historyId#,#id#,#subjectId#,#processCycleId#,#crn#,sysdate,#updateBy#,#title#,#typeOfCheck#,#topDescription#,#tableBottomNotes#,#showTable#
		)

	</insert>
	<insert id="insertTableHistory" parameterClass="map">
		insert into
		RG_LEGAL_CHECK_DTL_HST
		(HISTORY_ID,LEGAL_CHECK_DETAILS_ID,LEGAL_SUMMARY_ID,SUMMARY_HISTORY_ID,ROW_NO,COLUMN_NO,FIELD_VALUE)
		(select RG_LEGAL_CHECK_DTL_HST_SEQ.nextval,
		LEGAL_CHECK_DETAILS_ID,#pdId#,#historyId#,ROW_NO,
		COLUMN_NO,FIELD_VALUE
		from RG_LEGAL_CHECK_DTL where
		LEGAL_SUMMARY_ID =#pdId#)
	</insert>

	<resultMap id="matrixCells" class="com.worldcheck.juno.vo.component.MatrixCellVO"
		groupBy="id">
		<result property="id" column="LEGAL_CHECK_DETAILS_ID" />
		<result property="rowNo" column="ROW_NO" />
		<result property="columnNo" column="COLUMN_NO" />
		<result property="fieldValue" column="FIELD_VALUE" />
		<result property="parentId" column="LEGAL_SUMMARY_ID" />
	</resultMap>

	<resultMap id="resultVO"
		class="com.worldcheck.juno.vo.component.LegalRepDirectSummaryVO"
		groupBy="id">
		<result property="id" column="LEGAL_SUMMARY_ID" />
		<result property="crn" column="CASE_ID" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="SUBJECT_NAME" />		
		<result property="tableBottomNotes" column="TABLE_BOTTOM_NOTES" />
		<result property="title" column="TITLE" />
		<result property="topDescription" column="TOP_DESCRIPTION" />
		<result property="showTable" column="SHOW_TABLE_FLAG" />
		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="typeOfCheck" column="TYPE_OF_CHECK" />
		<result property="isAutoSave" column="IS_AUTO_SAVED" />
		<result property="tableCells"
			resultMap="LegalRepDirectSummaryVO.matrixCells"
			notNullColumn="LEGAL_CHECK_DETAILS_ID" />
	</resultMap>

	<!--generic query-->
	<select id="getById" resultMap="resultVO">
		SELECT rg.LEGAL_SUMMARY_ID,
		rg.CASE_ID,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.SUBJECT_ID,
		cs.REPORT_SUBJECT_NAME SUBJECT_NAME,
		rg.TABLE_BOTTOM_NOTES,
		rg.TOP_DESCRIPTION,
		rg.TITLE,
		rg.UPDATED_ON,rg.UPDATED_BY,
		rg.IS_AUTO_SAVED,
		NVL(rg.SHOW_TABLE_FLAG,'N') as SHOW_TABLE_FLAG,
		rg.TYPE_OF_CHECK,
		pd.LEGAL_CHECK_DETAILS_ID,
		pd.ROW_NO,
		pd.COLUMN_NO,
		pd.FIELD_VALUE,
		pd.LEGAL_SUMMARY_ID
		FROM
		RG_LEGAL_CHECK_SMRY rg
		LEFT
		OUTER JOIN
		RG_LEGAL_CHECK_DTL pd ON
		pd.LEGAL_SUMMARY_ID =
		rg.LEGAL_SUMMARY_ID
		JOIN CMS_CASECYCLE
		cc ON cc.CASECYCLE_ID =
		rg.PROCESSCYCLEID
		JOIN RG_SUBJECT cs ON cs.SUBJECT_ID = rg.SUBJECT_ID
		WHERE
		rg.LEGAL_SUMMARY_ID =#id#
		ORDER
		BY pd.ROW_NO ASC, pd.COLUMN_NO
		ASC
	</select>

	<!--generic query-->
	<update id="update"
		parameterClass="com.worldcheck.juno.vo.component.LegalRepDirectSummaryVO">
		update RG_LEGAL_CHECK_SMRY
		set TITLE = #title#,
		TABLE_BOTTOM_NOTES = #tableBottomNotes#,
		TOP_DESCRIPTION = #topDescription#,
		PROCESSCYCLEID=#processCycleId# ,
		TYPE_OF_CHECK = #typeOfCheck#,
		SHOW_TABLE_FLAG = #showTable#,
		UPDATED_ON=sysdate,
		UPDATED_BY=#updateBy#,
		IS_AUTO_SAVED = 'N',
		PARENT_RECORD_ID = null
		where LEGAL_SUMMARY_ID = #id#
	</update>

	<!--generic query-->
	<update id="updateAutoSave"
		parameterClass="com.worldcheck.juno.vo.component.LegalRepDirectSummaryVO">
		update RG_LEGAL_CHECK_SMRY set
		TITLE=#title#,
		TABLE_BOTTOM_NOTES=#tableBottomNotes#,
		PROCESSCYCLEID=#processCycleId#,
		TOP_DESCRIPTION = #topDescription#,
		TYPE_OF_CHECK = #typeOfCheck#,
		SHOW_TABLE_FLAG = #showTable#,
		UPDATED_ON=sysdate,
		UPDATED_BY=#updateBy#,
		IS_AUTO_SAVED = 'Y',
		PARENT_RECORD_ID = #id#
		where
		LEGAL_SUMMARY_ID = #autoSaveId#
	</update>

	<resultMap id="legalDtlList"
		class="com.worldcheck.juno.vo.component.LegalRepDirectSummaryVO"
		groupBy="id">
		<result property="id" column="LEGAL_SUMMARY_ID" />
		<result property="crn" column="CASE_ID" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="SUBJECT_NAME" />
		<result property="displayDate" column="displayDate" />
		<result property="updateBy" column="UPDATED_BY" />

	</resultMap>
	<!--generic query-->

	<select id="listByCRN" resultMap="legalDtlList"
		parameterClass="java.util.HashMap">
		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (
		SELECT
		rg.LEGAL_SUMMARY_ID,
		rg.CASE_ID,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.SUBJECT_ID,
		cs.REPORT_SUBJECT_NAME SUBJECT_NAME,
		to_char(rg.UPDATED_ON, 'DD-Mon-YY
		HH24:MI:SS') as displayDate,
		NVL(rg.UPDATED_BY,'System') UPDATED_BY

		FROM RG_LEGAL_CHECK_SMRY
		rg
		,CMS_CASECYCLE cc, RG_SUBJECT cs
		WHERE
		CASE_ID=#crn# and
		rg.PROCESSCYCLEID = cc.CASECYCLE_ID and rg.SUBJECT_ID
		= cs.SUBJECT_ID
		and cs.ENTITY_TYPE_ID=#componentLevel#
		AND
		upper(rg.IS_AUTO_SAVED)=upper('N')
		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>

		
		order by cs.is_primary_sub desc,cs.REPORT_ORDER
		ASC,upper(cs.REPORT_SUBJECT_NAME) asc,cc.PROCESSCYCLE_ORDER desc
		) a WHERE ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#
	</select>

	<select id="getSearchCount" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">

		SELECT count(*)
		FROM RG_LEGAL_CHECK_SMRY rg
		,CMS_CASECYCLE cc,
		RG_SUBJECT cs
		WHERE
		CASE_ID=#crn# and
		rg.PROCESSCYCLEID =
		cc.CASECYCLE_ID and
		rg.SUBJECT_ID
		= cs.SUBJECT_ID
		and
		cs.ENTITY_TYPE_ID=#componentLevel#
		AND
		upper(rg.IS_AUTO_SAVED)=upper('N')

		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>

	</select>
	<!-- Procedure for Default Entries into Personal Details Component -->
	<select id="getHistoryCountForCRN" resultClass="java.lang.Long"
		parameterClass="java.lang.String">
		select count(*) from  (
		select case_id from RG_LEGAL_CHECK_SMRY where case_id=#crn#
		union
		select case_id from RG_LEGAL_CHECK_SMRY_HST where case_id=#crn#
		)
  	</select>
	<!-- Update Summary table by entry of Default records.-->
	<update id="insertDefaultEntries" parameterClass="java.util.HashMap">
		declare
		recordId number(10);
		hstId number(10);
		detailId number(10);
		detailHistId number(10);

		subList varray_varchar;
		subId number;
		crn
		VARCHAR2(200):=#crn#;
		processCycle
		number:=#processCycleId#;		
		userName
		VARCHAR2(200):=#userName#;
		fieldArray
		varray_varchar;
		fieldVal
		varchar2(200);

		begin
		subList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].subjectId#
				 </iterate>
		;
		fieldArray :=varray_varchar('Name of Companies');
		for elem in 1
		.. subList.count

		loop
		subId:=subList(elem);
		select
		RG_LEGAL_CHECK_SMRY_SEQ.nextval into
		recordId from dual;
		

		INSERT INTO
		RG_LEGAL_CHECK_SMRY
		(LEGAL_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,IS_AUTO_SAVED,TITLE, TYPE_OF_CHECK, TOP_DESCRIPTION, SHOW_TABLE_FLAG)
		values(recordId,
		subId , processCycle, crn
		,sysdate,userName
		,'N','Legal Representative Check / Directorship Check', 'Legal Representative Check', 'A Legal Representative check was conducted on DD Month YYYY for XX at the XX Administration of Industry and Commerce, where name of company is registered. <![CDATA[<br/>]]> Name of individual was found to be the Legal Representative of the following company / companies:', 'Y');
		for rown in 1..3 Loop

		if rown = 1 then

		DBMS_OUTPUT.PUT_LINE('row is 1');
		
		select
		RG_LEGAL_CHECK_DTL_SEQ.nextval into
		detailId from dual;
		insert into
		RG_LEGAL_CHECK_DTL
		(LEGAL_CHECK_DETAILS_ID,LEGAL_SUMMARY_ID,ROW_NO,COLUMN_NO,FIELD_VALUE)
		values(detailId,recordId,1,0,fieldArray(1));

		else
		
		DBMS_OUTPUT.PUT_LINE('row is
		:'||rown);
		select
		RG_LEGAL_CHECK_DTL_SEQ.nextval into
		detailId from
		dual;

		insert into
		RG_LEGAL_CHECK_DTL
		(LEGAL_CHECK_DETAILS_ID,LEGAL_SUMMARY_ID,ROW_NO,COLUMN_NO)
		values(detailId,recordId,rown,0);
	
		end if;
		END
		LOOP;
		END
		LOOP;
		END;

	</update>

	<!--generic query-->
	<select id="findAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.LEGAL_SUMMARY_ID
		FROM RG_LEGAL_CHECK_SMRY rg
		WHERE
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		rg.PARENT_RECORD_ID =
		#parentId#
	</select>

	<!--generic query-->
	<select id="findNewAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.LEGAL_SUMMARY_ID
		FROM RG_LEGAL_CHECK_SMRY rg
		WHERE CASE_ID=#crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</select>

	<!--generic query-->
	<select id="findById" resultClass="int">
		select
		count(rg.LEGAL_SUMMARY_ID)
		FROM RG_LEGAL_CHECK_SMRY rg
		WHERE
		rg.LEGAL_SUMMARY_ID = #id#
	</select>

	<!--generic query-->
	<delete id="deleteNewAutoSave">
		delete FROM RG_LEGAL_CHECK_SMRY WHERE
		CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</delete>

	<!--generic query-->
	<delete id="deleteAutoSave">
		delete FROM RG_LEGAL_CHECK_SMRY WHERE
		CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID = #parentId#
	</delete>




	<!--generic query-->
	<delete id="delete">
		delete FROM RG_LEGAL_CHECK_SMRY WHERE
		LEGAL_SUMMARY_ID = #id#
	</delete>

	<!--generic query-->
	<delete id="deleteIds">
		delete FROM RG_LEGAL_CHECK_SMRY WHERE
		LEGAL_SUMMARY_ID in
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
	    </iterate>
	</delete>
	<!-- Table Row Operations -->

	<update id="insertRow" parameterClass="java.util.HashMap">


		declare

		recordId number;
		rowNoList varray_varchar;
		columnNoList
		varray_varchar;
		fieldValueList varray_varchar;
		detailIdList
		varray_varchar;


		rowNoId number(10);
		columnNoId number(10);
		fieldValue VARCHAR2(4000);
		parentId
		number:=#parentId#;
		detailId number(10);


		begin
		rowNoList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].rowNo#
				 </iterate>
		;
		columnNoList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].columnNo#
				 </iterate>
		;
		fieldValueList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].fieldValue#
				 </iterate>
		;

		detailIdList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].id#
				 </iterate>
		;



		for elem in 1 .. rowNoList.count
		loop
		rowNoId:=rowNoList(elem);
		columnNoId:=columnNoList(elem);
		fieldValue:=fieldValueList(elem);
		detailId := detailIdList(elem);

		IF detailId = 0 THEN

		select RG_LEGAL_CHECK_DTL_SEQ.NEXTVAL
		into recordId from dual;

		insert into
		RG_LEGAL_CHECK_DTL (
		LEGAL_CHECK_DETAILS_ID,
		ROW_NO,
		COLUMN_NO,
		FIELD_VALUE,
		LEGAL_SUMMARY_ID
		)

		values(recordId, rowNoId ,
		columnNoId , fieldValue, parentId);


		ELSE

		update
		RG_LEGAL_CHECK_DTL set
		ROW_NO=rowNoId,
		COLUMN_NO=columnNoId,
		FIELD_VALUE=fieldValue
		where
		LEGAL_CHECK_DETAILS_ID = detailId;
		END IF;

		end loop;

		commit;

		END;
	</update>


	<!--<insert id="insertRow" parameterClass="com.worldcheck.juno.vo.component.LegalRepDirectVO">
		insert into
		RG_PERSONAL_DETAILS (
		PERSONAL_DETAILS_ID,
		ROW_NO,
		FIELD_NAME,
		FIELD_VALUE,
		COMMENTS,
		PERSONAL_SUMMARY_ID
		)values (
		RG_PERSONAL_DETAILS_SEQ.NEXTVAL,
		#rowNo#,
		#fieldName#,
		#fieldValue#,
		#comment#,
		#parentId#
		)
	</insert>-->

	<update id="updateRow" parameterClass="com.worldcheck.juno.vo.component.MatrixCellVO">
		update
		RG_LEGAL_CHECK_DTL
		set
		ROW_NO=#rowNo#,
		COLUMN_NO=#columnNo#,
		FIELD_VALUE=#fieldValue#
		where
		LEGAL_CHECK_DETAILS_ID = #id#
	</update>

	<delete id="deleteRowsForParent">
		delete FROM RG_LEGAL_CHECK_DTL WHERE
		LEGAL_SUMMARY_ID = #id#
	</delete>

	<delete id="deleteRows">
		delete FROM RG_LEGAL_CHECK_DTL WHERE
		LEGAL_CHECK_DETAILS_ID IN
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
	    </iterate>
	</delete>

	<!--generic query-->
	<select id="getSubProcCycleList" resultMap="ReportSubjectVO.subProcCycleList">
		select rem.subject_id
		subject_id,
		rem.processcycleid
		Process_Cycle_Id,cs.subject_name
		subject_name,
		ccl.DESCRIPTION
		Process_Cycle
		from RG_LEGAL_CHECK_SMRY rem,
		RG_SUBJECT cs
		,CMS_CASECYCLE ccl
		where cs.CRN = rem.case_id
		and
		ccl.CASECYCLE_ID=
		rem.processcycleid
		and cs.subject_id =rem.subject_id
		and rem.case_id = #crn#
		and upper(rem.IS_AUTO_SAVED)=upper('N')
		order by cs.subject_id, rem.processcycleid

	</select>
	<!--generic query-->
	<select id="getProcessCycleList" parameterClass="java.util.HashMap"
		resultMap="ProcessCycleVO.processCycleList">
		select rem.processcycleid Process_Cycle_Id,cc.DESCRIPTION
		Process_Cycle
		from RG_LEGAL_CHECK_SMRY rem, cms_casecycle cc
		where
		rem.subject_id=#subId# and rem.case_id=#crn#
		and cc.casecycle_id=
		rem.processcycleid
		and upper(rem.IS_AUTO_SAVED)=upper('N')
		and
		rem.LEGAL_SUMMARY_ID != #recordId#
		
	</select>

	<select id="checkIfExist" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		select count(*) from RG_LEGAL_CHECK_SMRY where
		PROCESSCYCLEID=#processCycleId# and SUBJECT_ID = #subjectId# and
		case_id=#crn# and upper(IS_AUTO_SAVED)=upper('N')
	</select>
	<!-- makeCopyPersonal  Of Summary -->

	<insert id="makeCopy" parameterClass="java.util.HashMap">

		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_LEGAL_CHECK_SMRY_SEQ.nextval from dual
	  </selectKey>

		insert into RG_LEGAL_CHECK_SMRY (
		LEGAL_SUMMARY_ID,
		CASE_ID,
		PROCESSCYCLEID,
		TABLE_BOTTOM_NOTES,
		TOP_DESCRIPTION,
		TITLE,
		UPDATED_ON,UPDATED_BY,
		SUBJECT_ID,
		TYPE_OF_CHECK,
		SHOW_TABLE_FLAG,
		IS_AUTO_SAVED
		)
		select #id#,
		CASE_ID,
		#processCycleId#,
		TABLE_BOTTOM_NOTES,
		TOP_DESCRIPTION,
		TITLE,
		sysdate,#userName#,
		SUBJECT_ID,
		TYPE_OF_CHECK,
		SHOW_TABLE_FLAG,
		IS_AUTO_SAVED
		from
		RG_LEGAL_CHECK_SMRY
		where
		LEGAL_SUMMARY_ID =#recordId#
	</insert>

	<!-- makeCopyPersonal  Of Details -->
	<insert id="makeCopyDetails" parameterClass="java.util.HashMap">
		insert
		into
		RG_LEGAL_CHECK_DTL
		(LEGAL_CHECK_DETAILS_ID,LEGAL_SUMMARY_ID,ROW_NO,COLUMN_NO,FIELD_VALUE)
		SELECT
		RG_LEGAL_CHECK_DTL_SEQ.NEXTVAL,#genSumryId#,
		ROW_NO,
		COLUMN_NO,
		FIELD_VALUE
		from RG_LEGAL_CHECK_DTL
		Where
		LEGAL_SUMMARY_ID=#recordId#
	</insert>

	<!-- history of makeCopyPersonal  Summary -->
	<insert id="makeCopyHst" parameterClass="java.util.HashMap">
		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_LEGAL_CHECK_SMRY_HST_SEQ.nextval from dual
	  </selectKey>
		INSERT INTO RG_LEGAL_CHECK_SMRY_HST
		(HISTORY_ID,LEGAL_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,TITLE,TABLE_BOTTOM_NOTES,TOP_DESCRIPTION,TYPE_OF_CHECK)

		select
		#id#,#genSumryId#, SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		sysdate,UPDATED_BY,TITLE,TABLE_BOTTOM_NOTES,TOP_DESCRIPTION,TYPE_OF_CHECK from RG_LEGAL_CHECK_SMRY
		where LEGAL_SUMMARY_ID=#genSumryId#
	</insert>
	<!-- history of makeCopy Personal  details -->
	<insert id="makeCopyDetailsHistory" parameterClass="java.util.HashMap">
		insert into
		RG_LEGAL_CHECK_DTL_HST
		(HISTORY_ID,LEGAL_CHECK_DETAILS_ID,LEGAL_SUMMARY_ID,SUMMARY_HISTORY_ID,ROW_NO,COLUMN_NO,FIELD_VALUE)
		select
		RG_LEGAL_CHECK_DTL_HST_SEQ.nextval,LEGAL_CHECK_DETAILS_ID,LEGAL_SUMMARY_ID,#genHistoryId#,ROW_NO,COLUMN_NO,FIELD_VALUE
		from RG_LEGAL_CHECK_DTL where LEGAL_SUMMARY_ID=#genSumryId#
	</insert>

	<resultMap id="defaultLegalRepDirectTableRows"
		class="com.worldcheck.juno.vo.component.LegalRepDirectVO" groupBy="id">

		<result property="fieldName" column="FIELD_NAME" />
		<result property="comment" column="COMMENTS" />
		<result property="rowNo" column="ROW_NO" />

	</resultMap>
	<select id="defaultTable" resultMap="defaultLegalRepDirectTableRows">
		SELECT
		ROW_NO,FIELD_NAME,COMMENTS FROM
		RG_PERSONAL_DETAILS_STATIC ORDER
		BY
		ROW_NO
	</select>

	<select id="getHistoryCount" resultClass="java.lang.Integer">
		SELECT count(*)
		FROM
		RG_LEGAL_CHECK_SMRY_HST
		rg where
		rg.LEGAL_SUMMARY_ID=#recordId#
	</select>

	<resultMap id="resultHistory"
		class="com.worldcheck.juno.vo.component.LegalRepDirectSummaryVO">
		<result property="id" column="HISTORY_ID" />
		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="tableBottomNotes" column="TABLE_BOTTOM_NOTES" />
		<result property="topDescription" column="TOP_DESCRIPTION" />
		<result property="typeOfCheck" column="TYPE_OF_CHECK" />

	</resultMap>

	<select id="getHistory" resultMap="resultHistory"
		parameterClass="java.util.HashMap">

		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (SELECT
		rg.HISTORY_ID,
		rg.UPDATED_ON, rg.UPDATED_BY,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.TABLE_BOTTOM_NOTES,rg.TYPE_OF_CHECK,rg.TOP_DESCRIPTION

		FROM RG_LEGAL_CHECK_SMRY_HST
		rg,CMS_CASECYCLE cc

		WHERE rg.PROCESSCYCLEID =
		cc.CASECYCLE_ID
		and
		rg.LEGAL_SUMMARY_ID=#recordId#
		order by
		rg.UPDATED_ON desc
		) a WHERE
		ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#

	</select>
	<resultMap id="matrixHistoryCells" class="com.worldcheck.juno.vo.component.MatrixCellVO" groupBy="id">
		<result property="id" column="HISTORY_ID" />
		<result property="rowNo" column="ROW_NO" />
		<result property="columnNo" column="COLUMN_NO" />
		<result property="fieldValue" column="FIELD_VALUE" />
		<result property="parentId" column="LEGAL_SUMMARY_ID" />
	</resultMap>
	<select id="getTableValues" resultMap="matrixHistoryCells">

		select
		HISTORY_ID,ROW_NO,COLUMN_NO,FIELD_VALUE,LEGAL_SUMMARY_ID
		from
		RG_LEGAL_CHECK_DTL_HST where SUMMARY_HISTORY_ID=#recordId#
		ORDER BY
		ROW_NO ASC, COLUMN_NO ASC
	</select>

	<insert id="insertHistoryBeforeDeletion" parameterClass="map">
		insert into
		RG_LEGAL_CHECK_SMRY_HST(HISTORY_ID,LEGAL_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,TITLE,TABLE_BOTTOM_NOTES,TYPE_OF_CHECK,TOP_DESCRIPTION, SHOW_TABLE_FLAG)
		SELECT
		RG_LEGAL_CHECK_SMRY_HST_SEQ.nextval,inner_view.*
		FROM
		<iterate property="recList" conjunction="UNION ALL" open="("
			close=")">
			(SELECT #recList[]# LEGAL_SUMMARY_ID ,SUBJECT_ID,
			PROCESSCYCLEID ,
			CASE_ID ,sysdate,#userName# UPDATED_BY ,TITLE
			,TABLE_BOTTOM_NOTES, '123',TOP_DESCRIPTION, SHOW_TABLE_FLAG
			from RG_LEGAL_CHECK_SMRY
			where
			LEGAL_SUMMARY_ID=#recList[]#)			
		</iterate>
		inner_view

	</insert>
	
	<resultMap id="miniRecord" class="com.worldcheck.juno.vo.component.LegalRepDirectSummaryVO"
		groupBy="id">
		<result property="id" column="LEGAL_SUMMARY_ID" />
		<result property="updateOn" column="UPDATED_ON" />
	</resultMap>
	<!--generic query-->
	<select id="getUpdationTimeById" resultMap="miniRecord">
		SELECT
		rg.LEGAL_SUMMARY_ID,
		rg.UPDATED_ON
		FROM RG_LEGAL_CHECK_SMRY rg
		WHERE
		rg.LEGAL_SUMMARY_ID = #id#
	</select>
</sqlMap>