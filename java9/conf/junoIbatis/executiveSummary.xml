<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ExecutiveSummaryVO">

	<resultMap id="result"
		class="com.worldcheck.juno.vo.component.ExecutiveSummaryVO">
		<result property="id" column="EXE_SUM_ID" />

		<result property="updateBy" column="UPDATED_BY" />
		<result property="updateOn" column="UPDATED_ON" />
		<result property="crn" column="case_id" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="processCycleId" column="PROCESSCYCLEID" />


	</resultMap>

	<resultMap id="resultHistory"
		class="com.worldcheck.juno.vo.component.ExecutiveSummaryVO">

		<result property="exeSumNotes" column="EXEC_SUMM_NOTES" />
		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="id" column="HISTORY_ID" />

	</resultMap>


	<resultMap id="formResult"
		class="com.worldcheck.juno.vo.component.ExecutiveSummaryVO">
		<result property="id" column="EXE_SUM_ID" />
		<result property="crn" column="CASE_ID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="exeSumNotes" column="EXEC_SUMM_NOTES" />

	</resultMap>

	<!-- Insert example, using the Account parameter class -->
	<insert id="insert" parameterClass="com.worldcheck.juno.vo.component.ExecutiveSummaryVO">

		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_EXECUTIVE_SUMMARY_SEQ.NEXTVAL from dual
		</selectKey>
		insert into
		RG_EXECUTIVE_SUMMARY (
		EXE_SUM_ID,CASE_ID,PROCESSCYCLEID,EXEC_SUMM_NOTES,UPDATED_ON,UPDATED_BY
		)values (
		#id#,#crn#,#processCycleId#,#exeSumNotes#,sysdate,#updateBy#
		)
	</insert>

	<select id="listByCRN" resultMap="result" parameterClass="java.util.HashMap">
		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (SELECT
		res.EXE_SUM_ID,res.PROCESSCYCLEID,res.CASE_ID,
		res.UPDATED_ON,
		NVL(res.UPDATED_BY,'System') UPDATED_BY,
		cmscase.DESCRIPTION
		FROM
		RG_EXECUTIVE_SUMMARY res,CMS_CASECYCLE cmscase
		WHERE
		res.PROCESSCYCLEID=cmscase.CASECYCLE_ID
		ANd res.CASE_ID=#crn# AND
		upper(res.IS_AUTO_SAVED)=upper('N')
		order by cmscase.processcycle_order
		desc
		) a WHERE ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#

	</select>

	<update id="update" parameterClass="com.worldcheck.juno.vo.component.ExecutiveSummaryVO">
		update RG_EXECUTIVE_SUMMARY
		set
		EXEC_SUMM_NOTES = #exeSumNotes#,
		UPDATED_ON=sysdate,
		UPDATED_BY=#updateBy#
		where
		EXE_SUM_ID =
		#id# AND
		upper(IS_AUTO_SAVED)=upper('N')
	  </update>


	<insert id="insertHistory" parameterClass="com.worldcheck.juno.vo.component.ExecutiveSummaryVO">


		insert into
		RG_EXECUTIVE_SUMMARY_HST(HISTORY_ID ,
		CASE_ID,PROCESSCYCLEID,EXEC_SUMM_NOTES,UPDATED_ON,UPDATED_BY,EXE_SUM_ID)
		values (
		RG_EXECUTIVE_SUMMARY_HST_SEQ.NEXTVAL,#crn#,#processCycleId#,#exeSumNotes#,sysdate,#updateBy#,#id#
		)  
		
		
	  </insert>

	<select id="getHistory" resultMap="resultHistory"
		parameterClass="java.util.HashMap">
		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (SELECT UPDATED_ON,
		rghst.UPDATED_BY,
		EXEC_SUMM_NOTES ,HISTORY_ID
		FROM
		RG_EXECUTIVE_SUMMARY_HST rghst
		WHERE EXE_SUM_ID =#recordId#
		order by UPDATED_ON desc

		) a WHERE ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#

	</select>

	<select id="getById" resultMap="formResult">

		SELECT
		rbs.EXE_SUM_ID,rbs.PROCESSCYCLEID,rbs.CASE_ID,
		rbs.UPDATED_ON,rbs.UPDATED_BY, rbs.EXEC_SUMM_NOTES,
		cmscase.DESCRIPTION

		FROM RG_EXECUTIVE_SUMMARY
		rbs,CMS_CASECYCLE cmscase
		WHERE

		rbs.PROCESSCYCLEID=cmscase.CASECYCLE_ID
		AND rbs.EXE_SUM_ID
		=#id#

	</select>



	<select id="getExecutiveSummary" resultMap="result"
		parameterClass="java.util.HashMap">

		select rg.case_id,cm.CASECYCLE_ID as CASECYCLE_ID,cm.DESCRIPTION as
		DESCRIPTION
		,EXEC_SUMM_NOTES as EXEC_SUMM_NOTES,rg.UPDATED_BY
		as
		UPDATED_BY,rg.UPDATED_ON,rg.EXE_SUM_ID as EXE_SUM_ID
		from
		RG_EXECUTIVE_SUMMARY rg
		right join
		(SELECT *
		FROM CMS_CASECYCLE cm where
		cm.CASECYCLE_ID in
		<iterate property="processId" open="(" close=")" conjunction=",">
			#processId[]#
	
	      			</iterate>
		) cm
		on rg.PROCESSCYCLEID=cm.CASECYCLE_ID
		and rg.CASE_ID=#crn# --AND
		rg.IS_AUTO_SAVED =('N')
	</select>



	<select id="getHistoryCountForCRN" resultClass="java.lang.Long"
		parameterClass="java.lang.String">
		    
    select count(*) from (
		select case_id from RG_EXECUTIVE_SUMMARY where
		case_id=#crn#
		union
		select case_id from RG_EXECUTIVE_SUMMARY_HST where
		case_id=#crn#
		)
  
  </select>

	<update id="insertDefaultEntries" parameterClass="java.util.HashMap">

		declare
		recordId number(10);
		hstId number(10);
		processList
		varray_varchar;
		processId number;
		crn VARCHAR2(200):=#crn#;

		userName
		VARCHAR2(200):=#userName#;


		begin
		processList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].id#
				 </iterate>
		;
		for elem in 1 .. processList.count
		loop
		processId:=processList(elem);

		select RG_EXECUTIVE_SUMMARY_SEQ.NEXTVAL into recordId from dual;
		<!-- select RG_EXECUTIVE_SUMMARY_HST_SEQ.nextval into hstId from dual;-->
		insert into
		RG_EXECUTIVE_SUMMARY (
		EXE_SUM_ID,CASE_ID,PROCESSCYCLEID,UPDATED_ON,UPDATED_BY
		)

		values(recordId,crn ,processId,sysdate,userName );

		<!-- insert into
		RG_EXECUTIVE_SUMMARY_HST(HISTORY_ID ,EXE_SUM_ID,
		CASE_ID,PROCESSCYCLEID,UPDATED_ON,UPDATED_BY)

		values( hstId, recordId,
		crn, processId , sysdate,userName);-->


		end loop;

		commit;

		END;
	</update>



	<select id="getSearchCount" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">

		SELECT
		count(*)
		FROM
		RG_EXECUTIVE_SUMMARY res,CMS_CASECYCLE
		cmscase
		WHERE
		res.PROCESSCYCLEID=cmscase.CASECYCLE_ID
		ANd
		res.CASE_ID=#crn# AND
		upper(res.IS_AUTO_SAVED)=upper('N')
		
		</select>

	<select id="getHistoryCount" resultClass="java.lang.Integer">
		SELECT count(*)
		FROM
		RG_EXECUTIVE_SUMMARY_HST
		rg where
		rg.EXE_SUM_ID=#recordId#
		</select>



	<!--generic query-->
	<delete id="deleteNewAutoSave">
		delete FROM RG_EXECUTIVE_SUMMARY WHERE
		CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</delete>

	<!--generic query-->
	<delete id="deleteAutoSave">
		delete FROM RG_EXECUTIVE_SUMMARY
		where CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID = #parentId#
	</delete>

	<!--generic query-->
	<select id="findAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.EXE_SUM_ID
		FROM RG_EXECUTIVE_SUMMARY rg
		WHERE
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		rg.PARENT_RECORD_ID =
		#parentId#
	</select>

	<!--generic query-->
	<select id="findNewAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.EXE_SUM_ID
		FROM RG_EXECUTIVE_SUMMARY rg
		WHERE
		CASE_ID=#crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</select>


	<!--generic query-->
	<select id="findById" resultClass="int">
		select
		count(rg.EXE_SUM_ID)
		FROM RG_EXECUTIVE_SUMMARY rg
		WHERE
		rg.BUSINESS_SUMMARY_ID = #id#
	</select>

	<!--generic query-->
	<delete id="delete">
		delete FROM RG_EXECUTIVE_SUMMARY WHERE
		EXE_SUM_ID =
		#id#
	</delete>


	<insert id="insertAutoSave" parameterClass="com.worldcheck.juno.vo.component.ExecutiveSummaryVO">
		<selectKey keyProperty="autoSaveId" resultClass="long">
			SELECT
			RG_EXECUTIVE_SUMMARY_SEQ.NEXTVAL from dual
		</selectKey>

		insert into
		RG_EXECUTIVE_SUMMARY (
		EXE_SUM_ID,CASE_ID,PROCESSCYCLEID,EXEC_SUMM_NOTES,UPDATED_ON,UPDATED_BY,IS_AUTO_SAVED,PARENT_RECORD_ID
		)values (
		#autoSaveId#,#crn#,#processCycleId#,#exeSumNotes#,sysdate,#updateBy#,'Y',#id#
		)
	</insert>

	<update id="updateAutoSave" parameterClass="com.worldcheck.juno.vo.component.ExecutiveSummaryVO">
		update
		RG_EXECUTIVE_SUMMARY
		set
		EXEC_SUMM_NOTES = #exeSumNotes#,
		UPDATED_ON=sysdate,
		UPDATED_BY=#updateBy#
		where
		EXE_SUM_ID =
		#autoSaveId#

		AND upper(IS_AUTO_SAVED)=upper('Y')
	  </update>

	<insert id="makeCopy" parameterClass="java.util.HashMap">

		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_EXECUTIVE_SUMMARY_SEQ.NEXTVAL from dual
		</selectKey>

		INSERT INTO RG_EXECUTIVE_SUMMARY
		(EXE_SUM_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,EXEC_SUMM_NOTES)

		select
		#id#,
		#processCycleId#,CASE_ID,
		sysdate,#userName#,EXEC_SUMM_NOTES from
		RG_EXECUTIVE_SUMMARY
		where
		EXE_SUM_ID=#recordId#
	</insert>

	<select id="checkIfExist" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		select count(*) from RG_EXECUTIVE_SUMMARY where
		PROCESSCYCLEID=#processCycleId# and
		case_id=#crn#
	</select>


	<insert id="makeCopyHst" parameterClass="java.util.HashMap">

		insert into
		RG_EXECUTIVE_SUMMARY_HST(HISTORY_ID ,
		EXE_SUM_ID ,
		PROCESSCYCLEID ,
		CASE_ID ,

		UPDATED_ON ,
		UPDATED_BY ,
		EXEC_SUMM_NOTES
		)

		select
		RG_EXECUTIVE_SUMMARY_HST_SEQ.nextval,#recordId#,
		PROCESSCYCLEID,CASE_ID,TITLE,
		sysdate,#userName#,EXEC_SUMM_NOTES from
		RG_EXECUTIVE_SUMMARY
		where
		EXE_SUM_ID=#recordId#
	</insert>

	<select id="getProcessCycleList" parameterClass="java.util.HashMap"
		resultMap="ProcessCycleVO.processCycleList">
		<!-- select 'Interim 1'
		Process_Cycle , 2 Process_Cycle_Id from
		cms_clientcase cc

		where cc.CLIENT_INT_DUEDATE1 is not
		null
		AND
		NOT EXISTS
		(select summarry.processcycleid from RG_EXECUTIVE_SUMMARY
		summarry
		where
		summarry.processcycleid = 2
		and
		upper(summarry.IS_AUTO_SAVED)=upper('N'))
		and cc.crn =
		#crn#
		UNION
		ALL
		select
		'Interim 2' Process_Cycle, 3 Process_Cycle_Id from
		cms_clientcase cc

		where cc.CLIENT_INT_DUEDATE2 is
		not null
		AND
		NOT EXISTS
		(select
		summarry.processcycleid from RG_EXECUTIVE_SUMMARY summarry
		where
		summarry.processcycleid = 3
		and
		upper(summarry.IS_AUTO_SAVED)=upper('N'))
		and cc.crn = #crn#
		UNION
		ALL
		select
		'Final' Process_Cycle, 1 Process_Cycle_Id from cms_clientcase cc

		where cc.FINAL_DUE_DATE is not null
		AND
		NOT EXISTS
		(select
		summarry.processcycleid from RG_EXECUTIVE_SUMMARY
		summarry where
		summarry.processcycleid = 1
		and
		upper(summarry.IS_AUTO_SAVED)=upper('N'))
		and cc.crn =
		#crn#
		order
		by process_cycle_id-->
		
		select res.processcycleid Process_Cycle_Id,cc.DESCRIPTION
		Process_Cycle
		from RG_EXECUTIVE_SUMMARY res, cms_casecycle cc
		where
		 res.case_id=#crn#
		and cc.casecycle_id=res.processcycleid
		and upper(res.IS_AUTO_SAVED)=upper('N')
		</select>

	<select id="getProcessCycleListForId" parameterClass="java.util.HashMap"
		resultMap="ProcessCycleVO.processCycleList">

		select 'Interim 1' Process_Cycle , 2 Process_Cycle_Id from cms_clientcase cc
		where cc.CLIENT_INT_DUEDATE1 is not null
		AND
		NOT EXISTS
		(select
		summarry.EXE_SUM_ID from RG_EXECUTIVE_SUMMARY summarry
		where
		summarry.EXE_SUM_ID !=#recordId#
		and summarry.processcycleid = 2 and
		upper(summarry.IS_AUTO_SAVED)=upper('N'))
		and cc.crn = #crn#
		UNION ALL
		select 'Interim 2' Process_Cycle, 3 Process_Cycle_Id from
		cms_clientcase cc
		where cc.CLIENT_INT_DUEDATE2 is not null
		AND
		NOT EXISTS
		(select summarry.EXE_SUM_ID from RG_EXECUTIVE_SUMMARY summarry
		where
		summarry.EXE_SUM_ID != #recordId#
		and summarry.processcycleid = 3 and
		upper(summarry.IS_AUTO_SAVED)=upper('N'))
		and cc.crn = #crn#
		UNION ALL
		select 'Final' Process_Cycle, 1 Process_Cycle_Id from
		cms_clientcase
		cc
		where cc.FINAL_DUE_DATE is not null
		AND
		NOT EXISTS
		(select
		summarry.EXE_SUM_ID from RG_EXECUTIVE_SUMMARY summarry
		where
		summarry.EXE_SUM_ID != #recordId#
		and summarry.processcycleid = 1 and
		upper(summarry.IS_AUTO_SAVED)=upper('N'))
		and cc.crn = #crn#
		order by
		process_cycle_id
		</select>
		
		
	<resultMap id="miniRecord"
		class="com.worldcheck.juno.vo.component.ExecutiveSummaryVO"
		groupBy="id">
		<result property="id" column="EXE_SUM_ID" />
		<result property="updateOn" column="UPDATED_ON" />
	</resultMap>

	<select id="getUpdationTimeById" resultMap="miniRecord">
		SELECT
		rg.EXE_SUM_ID,
		rg.UPDATED_ON
		FROM RG_EXECUTIVE_SUMMARY rg
		WHERE
		rg.EXE_SUM_ID = #id#
	</select>
	
	
	<select id="getArticleText" resultClass="java.lang.String">
		select EXEC_SUMM_NOTES from
		RG_EXECUTIVE_SUMMARY_HST where history_id=#recordId#
	</select>

</sqlMap>
