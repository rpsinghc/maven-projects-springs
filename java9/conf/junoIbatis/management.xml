<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
  PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
        "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ManagementVO">

	<!-- Inserting into Management Component  -->
	<insert id="insert" parameterClass="com.worldcheck.juno.vo.component.ManagementVO">
		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_MANAGEMENT_SUMMARY_SEQ.NEXTVAL from dual
		</selectKey>

		insert into RG_MANAGEMENT_SUMMARY (
		MANAGEMENT_SUMMARY_ID,
		CASE_ID,
		PROCESSCYCLEID,
		TABLE_BOTTOM_NOTES,
		TITLE,
		UPDATED_ON,UPDATED_BY,
		SUBJECT_ID,
		IS_AUTO_SAVED
		)values (
		#id#,
		#crn#,#processCycleId#,#tableBottomNotes#,
		#title#,
		sysdate,#updateBy#,
		#subjectId#,
		#isAutoSave#
		)
	</insert>

	<!--generic query-->
	<insert id="insertAutoSave">
		<selectKey keyProperty="autoSaveId" resultClass="long">
			SELECT
			RG_MANAGEMENT_SUMMARY_SEQ.NEXTVAL from dual
	  </selectKey>
		insert into RG_MANAGEMENT_SUMMARY (
		MANAGEMENT_SUMMARY_ID,
		CASE_ID,
		PROCESSCYCLEID,
		SUBJECT_ID,
		TITLE,
		UPDATED_ON,
		UPDATED_BY,
		TABLE_BOTTOM_NOTES,
		IS_AUTO_SAVED,
		PARENT_RECORD_ID
		)values (
		#autoSaveId#,
		#crn#,
		#processCycleId#,
		#subjectId#,
		#title#,
		sysdate,
		#updateBy#,
		#tableBottomNotes#,
		'Y',
		#id#
		)
	</insert>

	<!--generic query-->
	<update id="update" parameterClass="com.worldcheck.juno.vo.component.ManagementVO">
		update RG_MANAGEMENT_SUMMARY
		set TITLE = #title#,
		TABLE_BOTTOM_NOTES = #tableBottomNotes#,
		PROCESSCYCLEID=#processCycleId# ,
		UPDATED_ON=sysdate,
		UPDATED_BY=#updateBy#,
		IS_AUTO_SAVED = 'N',
		PARENT_RECORD_ID = null
		where MANAGEMENT_SUMMARY_ID = #id#
	</update>

	<!--generic query-->
	<update id="updateAutoSave" parameterClass="com.worldcheck.juno.vo.component.ManagementVO">
		update
		RG_MANAGEMENT_SUMMARY set
		TITLE=#title#,
		TABLE_BOTTOM_NOTES=#tableBottomNotes#,
		PROCESSCYCLEID=#processCycleId#,

		UPDATED_ON=sysdate,
		UPDATED_BY=#updateBy#,
		IS_AUTO_SAVED = 'Y',
		PARENT_RECORD_ID = #id#
		where
		MANAGEMENT_SUMMARY_ID = #autoSaveId#
	</update>

	<!--generic query-->
	<delete id="delete">
		delete FROM RG_MANAGEMENT_SUMMARY WHERE
		MANAGEMENT_SUMMARY_ID = #id#
	</delete>

	<!--generic query-->
	<delete id="deleteId" parameterClass="java.util.List">
		delete FROM RG_MANAGEMENT_SUMMARY WHERE
		MANAGEMENT_SUMMARY_ID in
		<iterate open="(" close=")" conjunction=",">
			#ids[]#
		</iterate>
	</delete>

	<!--generic query-->
	<delete id="deleteNewAutoSave">
		delete FROM RG_MANAGEMENT_SUMMARY WHERE
		CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</delete>

	<!--generic query-->
	<delete id="deleteAutoSave">
		delete FROM RG_MANAGEMENT_SUMMARY WHERE
		CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID = #parentId#
	</delete>

	<resultMap id="matrixCells" class="com.worldcheck.juno.vo.component.MatrixCellVO"
		groupBy="id">
		<result property="id" column="MANAGEMENT_DTL_ID" />
		<result property="rowNo" column="ROW_NO" />
		<result property="columnNo" column="COLUMN_NO" />
		<result property="fieldValue" column="FIELD_VALUE" />
		<result property="parentId" column="MANAGEMENT_SUMMARY_ID" />
	</resultMap>

	<resultMap id="resultVO" class="com.worldcheck.juno.vo.component.ManagementVO"
		groupBy="id">
		<result property="id" column="MANAGEMENT_SUMMARY_ID" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="SUBJECT_NAME" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="crn" column="CASE_ID" />
		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="isAutoSave" column="IS_AUTO_SAVED" />
		<result property="title" column="TITLE" />
		<result property="tableBottomNotes" column="TABLE_BOTTOM_NOTES" />
		<result property="tableCells" resultMap="ManagementVO.matrixCells"
			notNullColumn="MANAGEMENT_DTL_ID" />
		
	</resultMap>

	<!--generic query-->
	<select id="getById" resultMap="resultVO">
		SELECT rg.MANAGEMENT_SUMMARY_ID,
		rg.CASE_ID,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.SUBJECT_ID,
		cs.SUBJECT_NAME,
		rg.TABLE_BOTTOM_NOTES,
		rg.TITLE,
		rg.UPDATED_ON,rg.UPDATED_BY,
		rg.IS_AUTO_SAVED,
		pd.MANAGEMENT_DTL_ID,
		pd.ROW_NO,
		pd.COLUMN_NO,
		pd.FIELD_VALUE,
		pd.MANAGEMENT_SUMMARY_ID
		FROM
		RG_MANAGEMENT_SUMMARY rg
		LEFT
		OUTER JOIN
		RG_MANAGEMENT_DETAILS pd ON
		pd.MANAGEMENT_SUMMARY_ID =
		rg.MANAGEMENT_SUMMARY_ID
		JOIN CMS_CASECYCLE
		cc ON cc.CASECYCLE_ID =
		rg.PROCESSCYCLEID
		JOIN RG_SUBJECT cs ON
		cs.SUBJECT_ID = rg.SUBJECT_ID
		WHERE
		rg.MANAGEMENT_SUMMARY_ID =#id#
		ORDER
		BY pd.ROW_NO ASC, pd.COLUMN_NO
		ASC

	</select>

	<resultMap id="managementList" class="com.worldcheck.juno.vo.component.ManagementVO"
		groupBy="id">
		<result property="id" column="MANAGEMENT_SUMMARY_ID" />
		<result property="crn" column="CASE_ID" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="subjectId" column="SUBJECT_ID" />
		<result property="subjectName" column="SUBJECT_NAME" />
		<result property="displayDate" column="displayDate" />
		<result property="updateBy" column="UPDATED_BY" />
		
	</resultMap>

	<!--generic query-->
	<select id="listByCRN" resultMap="managementList"
		parameterClass="java.util.HashMap">
		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (
		SELECT
		rg.MANAGEMENT_SUMMARY_ID,
		rg.CASE_ID,
		rg.PROCESSCYCLEID,
		cc.DESCRIPTION,
		rg.SUBJECT_ID,
		cs.REPORT_SUBJECT_NAME SUBJECT_NAME,
		to_char(rg.UPDATED_ON,
		'DD-Mon-YY
		HH24:MI:SS') as displayDate,
		NVL(rg.UPDATED_BY,'System') UPDATED_BY
		FROM
		RG_MANAGEMENT_SUMMARY
		rg
		,CMS_CASECYCLE cc, RG_SUBJECT cs
		WHERE
		CASE_ID=#crn# and
		rg.PROCESSCYCLEID = cc.CASECYCLE_ID and rg.SUBJECT_ID
		= cs.SUBJECT_ID
		and cs.ENTITY_TYPE_ID=#componentLevel#
		AND
		upper(rg.IS_AUTO_SAVED)=upper('N')

		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>

		order by cs.is_primary_sub desc,cs.REPORT_ORDER
		asc,upper(cs.REPORT_SUBJECT_NAME) asc,cc.processcycle_order desc
		
		) a WHERE ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#
	</select>
	<!-- Get search counts for Summary data -->
	<select id="getSearchCount" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">

		SELECT count(*)
		FROM RG_MANAGEMENT_SUMMARY rg
		,CMS_CASECYCLE cc,
		RG_SUBJECT cs
		WHERE
		CASE_ID=#crn# and
		rg.PROCESSCYCLEID =
		cc.CASECYCLE_ID and
		rg.SUBJECT_ID
		= cs.SUBJECT_ID
		and
		cs.ENTITY_TYPE_ID=#componentLevel#
		AND
		upper(rg.IS_AUTO_SAVED)=upper('N')

		<isNotNull property="subjectId">
			<isNotEqual prepend="AND" property="subjectId"
				compareValue="0">
				rg.SUBJECT_ID=#subjectId# 
			</isNotEqual>
		</isNotNull>

		<isNotNull property="processCycleId">
			<isNotEqual prepend="AND" property="processCycleId"
				compareValue="0">
				rg.PROCESSCYCLEID=#processCycleId# 
			</isNotEqual>
		</isNotNull>

	</select>
	<!-- Procedure for Default Entries into Management Component -->
	<select id="getHistoryCountForCRN" resultClass="java.lang.Long"
		parameterClass="java.lang.String">
		
		select count(*) from (
		select case_id from RG_MANAGEMENT_SUMMARY where
		case_id=#crn#
		union
		select case_id from RG_MANAGEMENT_SUMMARY_HST where
		case_id=#crn#
		)
  
  	</select>
	<!-- Update Summary table by entry of Default records.-->
	<update id="insertDefaultEntries" parameterClass="java.util.HashMap">

		declare
		recordId number(10);
		hstId number(10);
		detailId number(10);
		detailHistId number(10);

		subList varray_varchar;
		subId number;
		crn
		VARCHAR2(200):=#crn#;
		processCycle
		number:=#processCycleId#;
		
		userName
		VARCHAR2(200):=#userName#;
		fieldArray
		varray_varchar;
		fieldVal
		varchar2(200);

		begin
		subList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].subjectId#
				 </iterate>
		;
		fieldArray :=varray_varchar(<![CDATA['<p>Name</p>']]>,<![CDATA['<p>Position</p>']]>,<![CDATA['<p>Personal Details</p>']]>);
		for elem in 1
		.. subList.count

		loop
		subId:=subList(elem);
		select
		RG_MANAGEMENT_SUMMARY_SEQ.nextval into
		recordId from dual;
		<!--
			select RG_MANAGEMENT_SUMMARY_HST_SEQ.nextval into hstId from dual;
		-->

		INSERT INTO
		RG_MANAGEMENT_SUMMARY
		(MANAGEMENT_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,IS_AUTO_SAVED,TITLE,TABLE_BOTTOM_NOTES)
		values(recordId,
		subId , processCycle, crn
		,sysdate,userName
		,'N','Management (as
		on /
		latest available information / since DD Month YYYY with tenure of
		XX
		years)',(select DEFAULT_TEXT from rg_component_default_text where component_id=21));
		for rown in 1..3 Loop

		if rown = 1 then

		DBMS_OUTPUT.PUT_LINE('row is 1');

		for
		coln in 1..3 Loop
		select
		RG_MANAGEMENT_DETAILS_SEQ.nextval into
		detailId from dual;
		insert into
		RG_MANAGEMENT_DETAILS
		(MANAGEMENT_DTL_ID,MANAGEMENT_SUMMARY_ID,ROW_NO,COLUMN_NO,FIELD_VALUE)
		values(detailId,recordId,1,coln-1,fieldArray(coln));
		END LOOP;

		else
		for
		coln in 1..3 Loop
		DBMS_OUTPUT.PUT_LINE('row is
		:'||rown);
		select
		RG_MANAGEMENT_DETAILS_SEQ.nextval into
		detailId from
		dual;

		insert into
		RG_MANAGEMENT_DETAILS
		(MANAGEMENT_DTL_ID,MANAGEMENT_SUMMARY_ID,ROW_NO,COLUMN_NO)
		values(detailId,recordId,rown,coln-1);

		END LOOP;

		end if;
		END
		LOOP;
		END
		LOOP;
		END;

	</update>

	<!--generic query-->
	<select id="findById" resultClass="int">
		select
		count(rg.MANAGEMENT_SUMMARY_ID)
		FROM RG_MANAGEMENT_SUMMARY rg
		WHERE
		rg.MANAGEMENT_SUMMARY_ID = #id#
	</select>

	<!--generic query-->
	<select id="findAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.MANAGEMENT_SUMMARY_ID
		FROM RG_MANAGEMENT_SUMMARY
		rg
		WHERE
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		rg.PARENT_RECORD_ID =
		#parentId#
	</select>

	<!--generic query-->
	<select id="findNewAutoSave" parameterClass="java.util.HashMap"
		resultClass="java.lang.Long">
		SELECT rg.MANAGEMENT_SUMMARY_ID
		FROM RG_MANAGEMENT_SUMMARY
		rg
		WHERE CASE_ID=#crn# AND
		upper(rg.IS_AUTO_SAVED)=upper('Y') AND
		PARENT_RECORD_ID IS NULL
	</select>



	<!--generic query-->
	<select id="getProcessCycleList" parameterClass="java.util.HashMap"
		resultMap="ProcessCycleVO.processCycleList">
		select rem.processcycleid Process_Cycle_Id,cc.DESCRIPTION
		Process_Cycle
		from RG_MANAGEMENT_SUMMARY rem, cms_casecycle cc
		where
		rem.subject_id=#subId# and rem.case_id=#crn#
		and cc.casecycle_id=
		rem.processcycleid
		and upper(rem.IS_AUTO_SAVED)=upper('N')
		and
		rem.MANAGEMENT_SUMMARY_ID != #recordId#
		
	</select>
	<select id="getProcessList" resultClass="java.lang.Integer"
		parameterClass="java.util.HashMap">
		SELECT PROCESSCYCLEID FROM RG_MANAGEMENT_SUMMARY
		WHERE
		SUBJECT_ID=#subjectId#
		AND CASE_ID=#crn#
		AND
		upper(IS_AUTO_SAVED)=upper('N')
		</select>
	<!--generic query-->
	<select id="getSubProcCycleList" resultMap="ReportSubjectVO.subProcCycleList">
		select rem.subject_id
		subject_id,
		rem.processcycleid
		Process_Cycle_Id,cs.subject_name
		subject_name,
		ccl.DESCRIPTION
		Process_Cycle
		from RG_MANAGEMENT_SUMMARY
		rem,
		RG_SUBJECT cs
		,CMS_CASECYCLE ccl
		where cs.CRN = rem.case_id
		and
		ccl.CASECYCLE_ID=
		rem.processcycleid
		and cs.subject_id =rem.subject_id
		and rem.case_id =
		#crn#
		order by cs.subject_id, rem.processcycleid

	</select>

	<!-- Management History  -->
	<!--Inserting History  -->
	<insert id="insertHistory" parameterClass="com.worldcheck.juno.vo.component.ManagementVO">
		<selectKey keyProperty="historyId" resultClass="long">
			SELECT
			RG_MANAGEMENT_SUMMARY_HST_SEQ.nextval from dual
	 	</selectKey>
		insert into
		RG_MANAGEMENT_SUMMARY_HST
		(HISTORY_ID,MANAGEMENT_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,TITLE,TABLE_BOTTOM_NOTES)
		( select
		#historyId#,MANAGEMENT_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,TITLE,TABLE_BOTTOM_NOTES from
		RG_MANAGEMENT_SUMMARY where MANAGEMENT_SUMMARY_ID =#id#
		)

	</insert>

	<insert id="insertMatrixHistory" parameterClass="map">
		insert into
		RG_MANAGEMENT_DETAILS_HST
		(HISTORY_ID,MANAGEMENT_DTL_ID,MANAGEMENT_SUMMARY_ID,SUMMARY_HISTORY_ID,ROW_NO,COLUMN_NO,FIELD_VALUE)
		(select RG_MANAGEMENT_DETAILS_HST_SEQ.nextval,
		MANAGEMENT_DTL_ID,#mgmtId#,#historyId#,ROW_NO,
		COLUMN_NO,FIELD_VALUE
		from RG_MANAGEMENT_DETAILS where MANAGEMENT_SUMMARY_ID =#mgmtId#)
	</insert>
	<resultMap id="matrixHistoryCells" class="com.worldcheck.juno.vo.component.MatrixCellVO"
		groupBy="id">
		<result property="id" column="HISTORY_ID" />
		<result property="rowNo" column="ROW_NO" />
		<result property="columnNo" column="COLUMN_NO" />
		<result property="fieldValue" column="FIELD_VALUE" />
		<result property="parentId" column="MANAGEMENT_SUMMARY_ID" />
	</resultMap>
	<select id="getTableValues" resultMap="matrixHistoryCells">

		select
		HISTORY_ID,ROW_NO,COLUMN_NO,FIELD_VALUE,MANAGEMENT_SUMMARY_ID
		from
		RG_MANAGEMENT_DETAILS_HST where SUMMARY_HISTORY_ID=#recordId#
		ORDER BY
		ROW_NO ASC, COLUMN_NO ASC
	</select>

	<select id="getHistoryCount" resultClass="java.lang.Integer">
		SELECT count(*)
		FROM
		RG_MANAGEMENT_SUMMARY_HST
		rg where
		rg.MANAGEMENT_SUMMARY_ID=#recordId#
	</select>

	<resultMap id="resultHistory" class="com.worldcheck.juno.vo.component.ManagementVO">
		<result property="id" column="HISTORY_ID" />
		<result property="updateOn" column="UPDATED_ON" />
		<result property="updateBy" column="UPDATED_BY" />
		<result property="processCycleId" column="PROCESSCYCLEID" />
		<result property="processCycleName" column="DESCRIPTION" />
		<result property="tableBottomNotes" column="TABLE_BOTTOM_NOTES" />

	</resultMap>

	<select id="getHistory" resultMap="resultHistory"
		parameterClass="java.util.HashMap">

		SELECT * FROM (SELECT a.*, ROWNUM rn FROM (SELECT
		rg.HISTORY_ID,
		rg.UPDATED_ON, rg.UPDATED_BY,
		 rg.PROCESSCYCLEID
		,
		cc.DESCRIPTION,
		rg.TABLE_BOTTOM_NOTES

		FROM RG_MANAGEMENT_SUMMARY_HST
		rg,CMS_CASECYCLE cc

		WHERE rg.PROCESSCYCLEID =
		cc.CASECYCLE_ID
		and
		rg.MANAGEMENT_SUMMARY_ID=#recordId#
		order by
		rg.UPDATED_ON desc
		) a WHERE
		ROWNUM <![CDATA[ <= ]]>
		#limit#) WHERE rn <![CDATA[ >= ]]>
		#start#

	</select>
	<!-- Matrix Operations -->
	<update id="insertCell" parameterClass="java.util.HashMap">
		<!-- insert into
		RG_MANAGEMENT_DETAILS (
		MANAGEMENT_DTL_ID,
		ROW_NO,
		COLUMN_NO,
		FIELD_VALUE,
		MANAGEMENT_SUMMARY_ID
		)values (
		RG_MANAGEMENT_DETAILS_SEQ.NEXTVAL,
		#rowNo#,
		#columnNo#,
		#fieldValue#,
		#parentId#
		)-->
		
		declare

		recordId number;
		rowNoList varray_varchar;
		columnNoList
		varray_varchar;
		fieldValueList varray_varchar;
		detailIdList
		varray_varchar;


		rowNoId number(10);
		columnNoId number(10);
		fieldValue VARCHAR2(4000);
		parentId
		number:=#parentId#;
		detailId number(10);


		begin
		rowNoList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].rowNo#
				 </iterate>
		;
		columnNoList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].columnNo#
				 </iterate>
		;
		fieldValueList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].fieldValue#
				 </iterate>
		;

		detailIdList:= varray_varchar
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[].id#
				 </iterate>
		;



		for elem in 1 .. rowNoList.count
		loop
		rowNoId:=rowNoList(elem);
		columnNoId:=columnNoList(elem);
		fieldValue:=fieldValueList(elem);
		detailId := detailIdList(elem);

		IF detailId = 0 THEN

		select RG_MANAGEMENT_DETAILS_SEQ.NEXTVAL
		into recordId from dual;

		insert into
		RG_MANAGEMENT_DETAILS (
		MANAGEMENT_DTL_ID,
		ROW_NO,
		COLUMN_NO,
		FIELD_VALUE,
		MANAGEMENT_SUMMARY_ID
		)

		values(recordId, rowNoId ,
		columnNoId , fieldValue, parentId);


		ELSE

		update
		RG_MANAGEMENT_DETAILS set
		ROW_NO=rowNoId,
		COLUMN_NO=columnNoId,
		FIELD_VALUE=fieldValue
		where
		MANAGEMENT_DTL_ID = detailId;
		END IF;

		end loop;

		commit;

		END;
	</update>

	<update id="updateCell" parameterClass="com.worldcheck.juno.vo.component.MatrixCellVO">
		update
		RG_MANAGEMENT_DETAILS set
		ROW_NO=#rowNo#,
		COLUMN_NO=#columnNo#,
		FIELD_VALUE=#fieldValue#
		where
		MANAGEMENT_DTL_ID = #id#
	</update>

	<delete id="deleteCellsForParent">
		delete FROM RG_MANAGEMENT_DETAILS WHERE
		MANAGEMENT_SUMMARY_ID = #id#
	</delete>

	<delete id="deleteCells">
		delete FROM RG_MANAGEMENT_DETAILS WHERE
		MANAGEMENT_DTL_ID IN
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
	    </iterate>
	</delete>
	<!--generic query-->
	<delete id="deleteIds">
		delete FROM RG_MANAGEMENT_SUMMARY WHERE
		MANAGEMENT_SUMMARY_ID IN
		<iterate property="ids" open="(" close=")" conjunction=",">
			#ids[]#
	    </iterate>
	</delete>

	<select id="checkIfExist" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		select count(*) from RG_MANAGEMENT_SUMMARY where
		PROCESSCYCLEID=#processCycleId# and SUBJECT_ID = #subjectId# and
		case_id=#crn# and upper(IS_AUTO_SAVED)=upper('N')
	</select>

	<!-- makeCopyManagement  Of Summary -->

	<insert id="makeCopy" parameterClass="java.util.HashMap">

		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_MANAGEMENT_SUMMARY_SEQ.nextval from dual
	  </selectKey>

		insert into RG_MANAGEMENT_SUMMARY (
		MANAGEMENT_SUMMARY_ID,
		CASE_ID,
		PROCESSCYCLEID,
		TABLE_BOTTOM_NOTES,
		TITLE,
		UPDATED_ON,UPDATED_BY,
		SUBJECT_ID,
		IS_AUTO_SAVED
		)
		select #id#,
		CASE_ID,
		#processCycleId#,
		TABLE_BOTTOM_NOTES,
		TITLE,
		sysdate,#userName#,
		SUBJECT_ID,
		IS_AUTO_SAVED
		from
		RG_MANAGEMENT_SUMMARY
		where
		MANAGEMENT_SUMMARY_ID =#recordId#
	</insert>
	<!-- makeCopyManagement  Of Details -->
	<insert id="makeCopyDetails" parameterClass="java.util.HashMap">
		insert into
		RG_MANAGEMENT_DETAILS (
		MANAGEMENT_DTL_ID,
		ROW_NO,
		COLUMN_NO,
		FIELD_VALUE,
		MANAGEMENT_SUMMARY_ID
		)
		SELECT
		RG_MANAGEMENT_DETAILS_SEQ.NEXTVAL,
		ROW_NO,
		COLUMN_NO,
		FIELD_VALUE,#genSumryId#
		from RG_MANAGEMENT_DETAILS
		Where
		MANAGEMENT_SUMMARY_ID=#recordId#
	</insert>

	<!-- history of makeCopyManagement  Summary -->
	<insert id="makeCopyHst" parameterClass="java.util.HashMap">
		<selectKey keyProperty="id" resultClass="long">
			SELECT
			RG_MANAGEMENT_SUMMARY_HST_SEQ.nextval from dual
	  </selectKey>
		insert into
		RG_MANAGEMENT_SUMMARY_HST
		(HISTORY_ID,MANAGEMENT_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,TITLE,TABLE_BOTTOM_NOTES)
		select
		#id#,#genSumryId#, SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		sysdate,UPDATED_BY,TITLE,TABLE_BOTTOM_NOTES from
		RG_MANAGEMENT_SUMMARY
		where MANAGEMENT_SUMMARY_ID=#genSumryId#
	</insert>
	<!-- history of makeCopy Management  details -->
	<insert id="makeCopyDetailsHistory" parameterClass="java.util.HashMap">
		insert into
		RG_MANAGEMENT_DETAILS_HST
		(HISTORY_ID,MANAGEMENT_DTL_ID,MANAGEMENT_SUMMARY_ID,SUMMARY_HISTORY_ID,ROW_NO,COLUMN_NO,FIELD_VALUE)
		select
		RG_MANAGEMENT_DETAILS_HST_SEQ.nextval,MANAGEMENT_DTL_ID,MANAGEMENT_SUMMARY_ID,#genHistoryId#,ROW_NO,COLUMN_NO,FIELD_VALUE
		from RG_MANAGEMENT_DETAILS where MANAGEMENT_SUMMARY_ID=#genSumryId#
	</insert>

	<select id="isMarkDone" resultClass="java.lang.String">

		select COMPONENT_STATUS from
		RG_CASERPT_TEMPLATE_COMPONENT
		where COMPONENT_ID =#componentId# and
		CASE_ID =#crn# 
	</select>
	<update id="callMarkDone" parameterClass="java.util.HashMap">

		update
		RG_CASERPT_TEMPLATE_COMPONENT set COMPONENT_STATUS='D'
		where
		COMPONENT_ID =#componentId# and CASE_ID =#crn#  
	</update>

	<insert id="insertHistoryBeforeDeletion" parameterClass="map">
		insert into
		RG_MANAGEMENT_SUMMARY_HST(HISTORY_ID,MANAGEMENT_SUMMARY_ID,SUBJECT_ID,PROCESSCYCLEID,CASE_ID,
		UPDATED_ON,UPDATED_BY,TITLE,TABLE_BOTTOM_NOTES)
		SELECT
		RG_MANAGEMENT_SUMMARY_HST_SEQ.nextval,inner_view.*
		FROM
		<iterate property="recList" conjunction="UNION ALL" open="("
			close=")">
			(SELECT #recList[]# MANAGEMENT_SUMMARY_ID ,SUBJECT_ID,
			PROCESSCYCLEID ,
			CASE_ID ,sysdate,#userName# UPDATED_BY ,TITLE
			,TABLE_BOTTOM_NOTES
			from RG_MANAGEMENT_SUMMARY
			where
			MANAGEMENT_SUMMARY_ID=#recList[]#)			
		</iterate>
		inner_view

	</insert>
	<resultMap id="miniManagementRecord" class="com.worldcheck.juno.vo.component.ManagementVO"
		groupBy="id">
		<result property="id" column="MANAGEMENT_SUMMARY_ID" />
		<result property="updateOn" column="UPDATED_ON" />
	</resultMap>
	<!--generic query-->
	<select id="getUpdationTimeById" resultMap="miniManagementRecord">
		SELECT
		rg.MANAGEMENT_SUMMARY_ID,
		rg.UPDATED_ON
		FROM RG_MANAGEMENT_SUMMARY rg
		WHERE
		rg.MANAGEMENT_SUMMARY_ID = #id#
	</select>
</sqlMap>