<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL MAP 2.0//EN" 
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="Risk_Master"> 

<!--Map added by Juheen.For Search Page of Risk CR -->
<resultMap id="riskGrid" class="com.worldcheck.atlas.vo.masters.RisksMasterVO">
		<result property="riskCode" column="riskCode"/>
		<result property="riskLabel" column="riskLabel"/>
		<result property="riskCategoryLabel" column="riskCategoryLabel"/>	
		<result property="riskType" column="riskType"/>	
		<result property="countryBreakdown" column="countryBreakdown"/>
		<result property="updatedOn" column="updatedOn"/>
	<!-- Added By Saurabh Mittal 21-Jul-2015 to fetch all risk related information need to be sent to ISI on risk active/deactive from search screen -->
		<result property="riskActive" column="riskActive"/>
		<result property="riskCategory" column="risk_category_id"/>
		<result property="remarks" column="remarks"/>
		<result property="displayOnProfileForm" column="display_on_profile"/>
   </resultMap>

<!--Map added by Juheen.For Search Page of Risk CR -->
    <resultMap id="riskHistoryGrid" class="com.worldcheck.atlas.vo.masters.RisksMasterVO">
		<result property="action" column="action"/>
		<result property="oldRiskLabel" column="oldRiskLabel"/>	
		<result property="newRiskLabel" column="newRiskLabel"/>	
		<result property="oldRiskStatus" column="oldRiskStatus"/>
		<result property="newRiskStatus" column="newRiskStatus"/>
		<result property="countryBreakdown" column="countryBreakdown"/>
		<result property="oldDisplayOnProfile" column="oldDisplayOnProfile"/>
		<result property="newDisplayOnProfile" column="newDisplayOnProfile"/>
		<result property="oldRemark" column="oldRemark"/>
		<result property="newRemark" column="newRemark"/>
		<result property="updatedBy" column="updatedBy"/>
		<result property="updatedOn" column="updatedOn"/>
   </resultMap>

    <resultMap id="resultGrid"   class="com.worldcheck.atlas.vo.masters.RisksMasterVO">
		<result property="riskCode" column="riskCode"/>
		<result property="risks" column="risks"/>					
   </resultMap>

   <!--Query added by Juheen.For Search Page of Risk CR to get associated subreport type -->
    <select id="getAssociatedSubReports" resultClass="string" parameterClass="com.worldcheck.atlas.vo.masters.RisksMasterVO"> 
		 select wm_concat(sub_report.subreport_type_master_id) from cms_subreport_type_master sub_report, cms_report_type_master report_type
		 where report_type.report_type_master_id = sub_report.report_type_id
		 <isNotNull property="reportTypeList" prepend="AND">
		   <isNotEmpty property="reportTypeList">
		   report_type.report_type_master_id in 
			 <iterate property="reportTypeList" open="(" close=")" conjunction=",">
				#reportTypeList[]#
			 </iterate>
		   </isNotEmpty>
	     </isNotNull>	
      </select>   


   <resultMap id="resultGridList"   class="com.worldcheck.atlas.vo.masters.RisksMapVO">
		<!--<result property="riskCode" column="RISK_CODE"/>-->
		<result property="riskMappingName" column="MAPPING_NAME"/>
		<result property="mappingId" column="MAPPING_ID"/>
		<result property="mappingStatus" column="MAPPING_STATUS"/>
		<result property="riskGroup" column="RISK_GROUP"/>
		<result property="subjectType" column="SUBJECT_TYPE"/>
		<result property="visibleToClient" column="VISIBLE_TO_CLIENT"/>
		<result property="clientCodes" column="CLIENT_CODES" jdbcType="CLOB"/>
		<result property="reportTypes" column="REPORT_TYPES"/>
		<result property="subReportTypes" column="SUB_REPORT_TYPES"/>
		<result property="subjectCountry" column="SUBJECT_COUNTRY"/>
		<result property="researchElements" column="RESEARCH_ELEMENTS"/>
		<result property="updatedBy" column="UPDATEDBY"/>
		<result property="updatedOn" column="UPDATEDON"/>
			
   </resultMap>
   
   <resultMap id="resultHistoryGridList"   class="com.worldcheck.atlas.vo.masters.RisksHistoryVO">

		<result property="MAPPING_HIST_ID" column="MAPPING_HIST_ID"/>
		<result property="MAPPING_ID" column="MAPPING_ID"/>
		<result property="ACTION" column="ACTION"/>
		<result property="OLD_CLIENTCODE" column="OLD_CLIENTCODE"/>
		<result property="OLD_REPORTTYPE" column="OLD_REPORTTYPE"/>
		<result property="OLD_SUBREPORTTYPE" column="OLD_SUBREPORTTYPE"/>
		<result property="OLD_SUBJECTCOUNTRIES" column="OLD_SUBJECTCOUNTRIES"/>
		<result property="OLD_RE" column="OLD_RE"/>
		<result property="NEW_CLIENTCODE" column="NEW_CLIENTCODE"/>
		<result property="NEW_REPORTTYPE" column="NEW_REPORTTYPE"/>
		<result property="NEW_SUBREPORTTYPE" column="NEW_SUBREPORTTYPE"/>
		<result property="NEW_SUBJECTCOUNTRIES" column="NEW_SUBJECTCOUNTRIES"/>
		<result property="NEW_RE" column="NEW_RE"/>
		<result property="OLD_SUBJECT_TYPE" column="OLD_SUBJECT_TYPE"/>
		<result property="OLD_RISK_GROUP" column="OLD_RISK_GROUP"/>
		<result property="OLD_VISIBLE_TO_CLIENT" column="OLD_VISIBLE_TO_CLIENT"/>
		<result property="OLD_MAPPING_NAME" column="OLD_MAPPING_NAME"/>
		<result property="NEW_SUBJECT_TYPE" column="NEW_SUBJECT_TYPE"/>
		<result property="NEW_RISK_GROUP" column="NEW_RISK_GROUP"/>
		<result property="NEW_VISIBLE_TO_CLIENT" column="NEW_VISIBLE_TO_CLIENT"/>
		<result property="NEW_MAPPING_NAME" column="NEW_MAPPING_NAME"/>
		<result property="UPDATEDBY" column="UPDATEDBY"/>
		<result property="UPDATEDON" column="UPDATEDON"/>
		
			
   </resultMap>
   
   
    <resultMap id="categoryVO"   class="com.worldcheck.atlas.vo.masters.RiskCategoryMasterVO">
		<result property="riskCategoryId" column="RISK_CATEGORY_ID"/>
		<result property="category" column="RISK_CATEGORY_NAME"/>
		<result property="notes" column="NOTES"/>		
   </resultMap>
   
    <resultMap id="attributesVO"   class="com.worldcheck.atlas.vo.masters.RiskAttributesMasterVO">
		
		<result property="attribute_name" column="ATTRIBUTE_NAME"/>
		<result property="value" column="VALUE"/>
		<result property="notes" column="NOTES"/>		
   </resultMap>
   
	
 <!--Query added by Juheen.For Search Page of Risk CR -->
      <select id="getRiskGridList" resultMap="riskGrid" parameterClass="com.worldcheck.atlas.vo.masters.RisksMasterVO"> 
    SELECT * FROM(SELECT d.*,ROWNUM rn FROM
	(SELECT DISTINCT c.* 
	  FROM(SELECT * FROM
	       (select risk_master.risk_code riskCode, 
			risk_master.risk_label riskLabel,
			risk_category.risk_category_name riskCategoryLabel,
			risk_master.risk_type riskType,
			risk_master.has_cntry_brkdown countryBreakdown,
			risk_master.updatedon updatedOn,
			risk_master.risk_is_active riskActive,
			<!-- Changes Made by saurabh Mittal to send the complete data to ISIS in case of Risk Activate/Deactivate 20-07-2015 -->
			risk_master.risk_category_id,
			risk_master.remarks,
			risk_master.display_on_profile
			FROM cms_risk_master_tbl risk_master,
				cms_risk_category_master risk_category,
				cms_risk_mapping risk_map
			WHERE risk_master.risk_code = risk_map.risk_code
			AND risk_category.risk_category_id = risk_master.risk_category_id
	 <isNotNull  property="riskActive">
	    <isNotEmpty prepend="AND" property="riskActive">
            risk_master.risk_is_active=#riskActive#
	     </isNotEmpty>
	 </isNotNull>	
	 <isNotNull  property="riskLabel">
	    <isNotEmpty prepend="AND" property="riskLabel">
             upper(risk_master.risk_label) like '%' || upper(#riskLabel#) || '%'
	     </isNotEmpty>
	 </isNotNull>
    <isNotNull  property="riskType">
	    <isNotEmpty prepend="AND" property="riskType">
             risk_master.risk_type = #riskType#
	     </isNotEmpty>
	 </isNotNull>	
	  <isNotNull property="riskGroup">
	      <isNotEmpty prepend="AND" property="riskGroup">
             <isEqual property="riskGroup" compareValue="1">
			    risk_map.risk_group = #riskGroup#
			  </isEqual>
			  <isEqual property="riskGroup" compareValue="2">
			      risk_map.risk_group = #riskGroup# 
			  </isEqual>
	      </isNotEmpty>
	   </isNotNull>
     <isNotNull property="subjectType">
	    <isNotEmpty prepend="AND" property="subjectType">
        risk_map.subject_type=#subjectType#
	    </isNotEmpty>
	</isNotNull>		 
    <isNotNull  property="visibleToClient">
	    <isNotEmpty prepend="AND" property="visibleToClient">
        risk_map.visible_to_client=#visibleToClient#
	    </isNotEmpty>
	 </isNotNull>	 
      <isNotNull prepend="AND" property="riskCategoryList">
		<isNotEmpty  property="riskCategoryList">
			risk_master.risk_category_id in  
			<iterate property="riskCategoryList" open="(" close=")" conjunction=",">
			    #riskCategoryList[]#
			</iterate> 
		</isNotEmpty> 
	  </isNotNull> 
	  AND risk_map.mapping_id in  ( SELECT crm.mapping_id
      FROM cms_risk_mapping crm
		INNER JOIN
		(SELECT mapping_id,client_code FROM cms_risk_mapping_clients
		) cmc
		   ON crm.mapping_id = cmc.mapping_id
		INNER JOIN
		(SELECT mapping_id,report_type FROM cms_risk_mapping_reports
		) cmr
		   ON crm.mapping_id = cmr.mapping_id
		INNER JOIN
		(SELECT mapping_id,sub_report_type FROM cms_risk_mapping_subreports
		) cmsr
		   ON crm.mapping_id = cmsr.mapping_id
		INNER JOIN
		(SELECT mapping_id,subject_country FROM cms_risk_mapping_country
		) cmcnt
		   ON crm.mapping_id = cmcnt.mapping_id
		INNER JOIN
		(SELECT mapping_id,research_element FROM cms_risk_mapping_re
		)cmre
		   ON crm.mapping_id  = cmre.mapping_id
	<dynamic prepend="WHERE ">
	   
	  <isNotNull prepend="AND" property="clientCodeList">
		 <isNotEmpty  property="clientCodeList">
			cmc.client_code in  
			<iterate property="clientCodeList" open="(" close=")" conjunction=",">
			    #clientCodeList[]#
			</iterate> 
		</isNotEmpty> 
	  </isNotNull>
      <isNotNull prepend="AND" property="reportTypeList">
		 <isNotEmpty  property="reportTypeList">
			cmr.report_type in  
			<iterate property="reportTypeList" open="(" close=")" conjunction=",">
			    #reportTypeList[]#
			</iterate> 
		</isNotEmpty> 
	  </isNotNull> 	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		 <isNotEmpty  property="subReportTypeList">
			cmsr.sub_report_type in  
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
			    #subReportTypeList[]#
			</iterate> 
		</isNotEmpty> 
	  </isNotNull> 	 
      <isNotNull prepend="AND" property="subjectCountryList">
		 <isNotEmpty  property="subjectCountryList">
			cmcnt.subject_country in  
			<iterate property="subjectCountryList" open="(" close=")" conjunction=",">
			    #subjectCountryList[]#
			</iterate> 
		</isNotEmpty> 
	  </isNotNull>
      <isNotNull prepend="AND" property="researchElementList">
		 <isNotEmpty  property="researchElementList">
			cmre.research_element in  
			<iterate property="researchElementList" open="(" close=")" conjunction=",">
			    #researchElementList[]#
			</iterate> 
		</isNotEmpty> 
	  </isNotNull> 
 </dynamic> 
    )
	<isNotNull  property="fromDate" prepend="AND">
		<isNotEmpty property="fromDate">
					trunc(risk_master.CREATEDON)  <![CDATA[ >= ]]> to_date(#fromDate#,'DD-Mon-YY')
		 </isNotEmpty>
	 </isNotNull>
	 <isNotNull property="toDate" prepend="AND">
		 <isNotEmpty property="toDate">
				trunc(risk_master.CREATEDON)  <![CDATA[ <= ]]>  to_date(#toDate#,'DD-Mon-YY')
	</isNotEmpty>
	</isNotNull>
	) a ) c
	ORDER By 
	<isEqual property="sortColumnName" compareValue="updatedOn">
		updatedon
	</isEqual>
	<isNotEqual property="sortColumnName" compareValue="updatedOn">
		 $sortColumnName$	
	</isNotEqual>
	 $sortType$
	 )d WHERE ROWNUM <![CDATA[ <= ]]> #limit#) WHERE rn <![CDATA[ >= ]]> #start#
   </select>
   
 <!--Query added by Juheen.For Search Page of Risk CR -->  
<select id="getRiskGridListCount" resultClass="int" parameterClass="com.worldcheck.atlas.vo.masters.RisksMasterVO"> 
    SELECT count(*) FROM
	 (SELECT DISTINCT c.* 
	  FROM(SELECT * FROM
	       (select risk_master.risk_code riskCode, 
			risk_master.risk_label riskLabel,
			risk_category.risk_category_name riskCategoryLabel,
			risk_master.risk_type riskType,
			risk_master.has_cntry_brkdown countryBreakdown,
			risk_master.updatedon updatedOn,
			risk_master.risk_is_active riskActive
			FROM cms_risk_master_tbl risk_master,
				cms_risk_category_master risk_category,
				cms_risk_mapping risk_map
			WHERE   risk_master.risk_code= risk_map.risk_code
			AND risk_category.risk_category_id = risk_master.risk_category_id
	  <isNotNull  property="riskActive">
	    <isNotEmpty prepend="AND" property="riskActive">
            risk_master.risk_is_active=#riskActive#
	     </isNotEmpty>
	 </isNotNull>	
	 <isNotNull  property="riskLabel">
	    <isNotEmpty prepend="AND" property="riskLabel">
             upper(risk_master.risk_label) like '%' || upper(#riskLabel#) || '%'
	     </isNotEmpty>
	 </isNotNull>
    <isNotNull  property="riskType">
	    <isNotEmpty prepend="AND" property="riskType">
             risk_master.risk_type = #riskType#
	     </isNotEmpty>
	 </isNotNull>
      <isNotNull property="riskGroup">
	      <isNotEmpty prepend="AND" property="riskGroup">
             <isEqual property="riskGroup" compareValue="1">
			    risk_map.risk_group = #riskGroup#
			  </isEqual>
			  <isEqual property="riskGroup" compareValue="2">
			    risk_map.risk_group = #riskGroup#
			  </isEqual>
	      </isNotEmpty>
	   </isNotNull>
     <isNotNull property="subjectType">
	    <isNotEmpty prepend="AND" property="subjectType">
        risk_map.subject_type=#subjectType#
	    </isNotEmpty>
	</isNotNull>		 
    <isNotNull  property="visibleToClient">
	    <isNotEmpty prepend="AND" property="visibleToClient">
        risk_map.visible_to_client=#visibleToClient#
	    </isNotEmpty>
	 </isNotNull>	 	 
      <isNotNull prepend="AND" property="riskCategoryList">
		<isNotEmpty  property="riskCategoryList">
			risk_master.risk_category_id in  
			<iterate property="riskCategoryList" open="(" close=")" conjunction=",">
			    #riskCategoryList[]#
			</iterate> 
		</isNotEmpty> 
	  </isNotNull> 
	  AND risk_map.mapping_id in  ( SELECT crm.mapping_id
      FROM cms_risk_mapping crm
		INNER JOIN
		(SELECT mapping_id,client_code FROM cms_risk_mapping_clients
		) cmc
		   ON crm.mapping_id = cmc.mapping_id
		INNER JOIN
		(SELECT mapping_id,report_type FROM cms_risk_mapping_reports
		) cmr
		   ON crm.mapping_id = cmr.mapping_id
		INNER JOIN
		(SELECT mapping_id,sub_report_type FROM cms_risk_mapping_subreports
		) cmsr
		   ON crm.mapping_id = cmsr.mapping_id
		INNER JOIN
		(SELECT mapping_id,subject_country FROM cms_risk_mapping_country
		) cmcnt
		   ON crm.mapping_id = cmcnt.mapping_id
		INNER JOIN
		(SELECT mapping_id,research_element FROM cms_risk_mapping_re
		)cmre
		   ON crm.mapping_id  = cmre.mapping_id
	<dynamic prepend="WHERE ">
	   
	  <isNotNull prepend="AND" property="clientCodeList">
		 <isNotEmpty  property="clientCodeList">
			cmc.client_code in  
			<iterate property="clientCodeList" open="(" close=")" conjunction=",">
			    #clientCodeList[]#
			</iterate> 
		</isNotEmpty> 
	  </isNotNull>
      <isNotNull prepend="AND" property="reportTypeList">
		 <isNotEmpty  property="reportTypeList">
			cmr.report_type in  
			<iterate property="reportTypeList" open="(" close=")" conjunction=",">
			    #reportTypeList[]#
			</iterate> 
		</isNotEmpty> 
	  </isNotNull> 	  
	  <isNotNull prepend="AND" property="subReportTypeList">
		 <isNotEmpty  property="subReportTypeList">
			cmsr.sub_report_type in  
			<iterate property="subReportTypeList" open="(" close=")" conjunction=",">
			    #subReportTypeList[]#
			</iterate> 
		</isNotEmpty> 
	  </isNotNull> 	 
      <isNotNull prepend="AND" property="subjectCountryList">
		 <isNotEmpty  property="subjectCountryList">
			cmcnt.subject_country in  
			<iterate property="subjectCountryList" open="(" close=")" conjunction=",">
			    #subjectCountryList[]#
			</iterate> 
		</isNotEmpty> 
	  </isNotNull>
      <isNotNull prepend="AND" property="researchElementList">
		 <isNotEmpty  property="researchElementList">
			cmre.research_element in  
			<iterate property="researchElementList" open="(" close=")" conjunction=",">
			    #researchElementList[]#
			</iterate> 
		</isNotEmpty> 
	  </isNotNull> 
 </dynamic> 	  
    )
	 <isNotNull  property="fromDate" prepend="AND">
		<isNotEmpty property="fromDate">
					trunc(risk_master.CREATEDON)  <![CDATA[ >= ]]> to_date(#fromDate#,'DD-Mon-YY')
		 </isNotEmpty>
	 </isNotNull>
	 <isNotNull property="toDate" prepend="AND">
		 <isNotEmpty property="toDate">
				trunc(risk_master.CREATEDON)  <![CDATA[ <= ]]>  to_date(#toDate#,'DD-Mon-YY')
		</isNotEmpty>
	     </isNotNull>	
	) a ) c
	ORDER By 
	<isEqual property="sortColumnName" compareValue="updatedOn">
		updatedon
	</isEqual>
	<isNotEqual property="sortColumnName" compareValue="updatedOn">
		 $sortColumnName$	
	</isNotEqual>
	 $sortType$
	 )
   </select>    
   
   
  <!-- <select id="getAllRisks" resultMap="resultGridList" parameterClass = "java.lang.String"> 
	SELECT * FROM CMS_RISK_MAPPING 
	WHERE 
	CMS_RISK_MAPPING.RISK_CODE=#riskCode#
	ORDER BY CMS_RISK_MAPPING.UPDATEDON	
    </select>-->
	
	<select id="getAllMappings" resultMap="resultHistoryGridList" parameterClass = "com.worldcheck.atlas.vo.masters.RisksHistoryVO"> 
	<!--SELECT * FROM CMS_RISK_MAPPING_HISTORY 
	WHERE 
	CMS_RISK_MAPPING_HISTORY.MAPPING_ID=#MAPPING_ID#
	ORDER BY CMS_RISK_MAPPING_HISTORY.UPDATEDON DESC-->
	SELECT * FROM (select a.*,ROWNUM rn FROM(SELECT * FROM CMS_RISK_MAPPING_HISTORY
	WHERE 
	CMS_RISK_MAPPING_HISTORY.MAPPING_ID=#MAPPING_ID#
	ORDER BY
	<isEqual property="sortColumnName" compareValue="UPDATEDON">
		CMS_RISK_MAPPING_HISTORY.UPDATEDON
	</isEqual>
	<isNotEqual property="sortColumnName" compareValue="UPDATEDON">
		 $sortColumnName$	
	</isNotEqual>
	 $sortType$ )a
	WHERE ROWNUM <![CDATA[ <= ]]> #limit#) WHERE rn <![CDATA[ >= ]]> #start#	
    </select>
   
   
   
   
  <update id="deActivate" parameterClass="java.util.Map"> 
		UPDATE
			  CMS_RISK_MASTER_TBL
		SET
			  CMS_RISK_MASTER_TBL.RISK_IS_ACTIVE = 
			  <isEqual property="riskStatus" compareValue="0">
				  	1
			  </isEqual>
			  <isEqual property="riskStatus" compareValue="1">
				    0
			  </isEqual>,
			  CMS_RISK_MASTER_TBL.UPDATEDBY=#updatedBy#,
			  CMS_RISK_MASTER_TBL.UPDATEDON=sysdate
		WHERE
			  CMS_RISK_MASTER_TBL.RISK_CODE IN 			
		<iterate property="riskCodeList" open="(" close=")" conjunction=",">
			#riskCodeList[]#
	    </iterate>
	</update>	
	
	 <update id="changeMappingStatus" parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO"> 
		UPDATE
			  CMS_RISK_MAPPING
		SET
			  CMS_RISK_MAPPING.MAPPING_STATUS = 
			  <isEqual property="mappingStatus" compareValue="0">
				  	1
			  </isEqual>
			  <isEqual property="mappingStatus" compareValue="1">
				    0
			  </isEqual>,
			  CMS_RISK_MAPPING.UPDATEDBY=#updatedBy#,
			  CMS_RISK_MAPPING.UPDATEDON=sysdate
		WHERE
			  CMS_RISK_MAPPING.MAPPING_ID =#mappingId#	
	</update>	
	
	<select id="getMappingStatus" resultClass="java.lang.Integer" parameterClass="java.lang.Integer"> 
    SELECT 
	    CMS_RISK_MAPPING.MAPPING_STATUS
    FROM 
    	CMS_RISK_MAPPING
	WHERE		
		CMS_RISK_MAPPING.MAPPING_ID=#mappingId#
		
   </select>	
	
	
	<select id="getRiskInfo" resultClass="com.worldcheck.atlas.vo.masters.RisksMasterVO" parameterClass="java.lang.String"> 
    SELECT 
	    CMS_RISK_MASTER_TBL.RISK_CODE riskCode,
	    CMS_RISK_MASTER_TBL.RISK_LABEL riskLabel,
	    CMS_RISK_MASTER_TBL.RISK_IS_ACTIVE risksStatus,
		CMS_RISK_MASTER_TBL.RISK_CATEGORY_ID riskCategory,
		CMS_RISK_MASTER_TBL.RISK_TYPE riskType,
		CMS_RISK_MASTER_TBL.HAS_CNTRY_BRKDOWN hasCountryBreakdown,
		CMS_RISK_MASTER_TBL.DISPLAY_ON_PROFILE displayOnProfileForm,
		CMS_RISK_MASTER_TBL.REMARKS remarks
	
    FROM 
    	CMS_RISK_MASTER_TBL
	WHERE		
		CMS_RISK_MASTER_TBL.RISK_CODE=#riskCode#
		
   </select> 

	<update id="updateRisk" parameterClass="com.worldcheck.atlas.vo.masters.RisksMasterVO">     
		UPDATE
			  CMS_RISK_MASTER_TBL
		SET
			  CMS_RISK_MASTER_TBL.RISK_LABEL = #riskLabel#,
			  CMS_RISK_MASTER_TBL.DISPLAY_ON_PROFILE=to_number(#displayOnProfileForm#),
			  CMS_RISK_MASTER_TBL.REMARKS=#remarks#,
			  CMS_RISK_MASTER_TBL.RISK_IS_ACTIVE=to_number(#riskIsActive#),
			  CMS_RISK_MASTER_TBL.UPDATEDBY=#updatedBy#,
			  CMS_RISK_MASTER_TBL.UPDATEDON=sysdate
			  
		WHERE
			  CMS_RISK_MASTER_TBL.RISK_CODE=#riskCode#
	</update>
	
	<update id="updateMapping" parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO">     
		UPDATE
			CMS_RISK_MAPPING
		SET
			CMS_RISK_MAPPING.MAPPING_NAME=#riskMappingName#,
			CMS_RISK_MAPPING.RISK_GROUP=#riskGroup#,
			CMS_RISK_MAPPING.SUBJECT_TYPE=#subjectType#,
			CMS_RISK_MAPPING.VISIBLE_TO_CLIENT=#visibleToClient#,
			CMS_RISK_MAPPING.MAPPING_STATUS=#mappingStatus#,
			CMS_RISK_MAPPING.UPDATEDBY=#updatedBy#,
			CMS_RISK_MAPPING.UPDATEDON=sysdate
			  
		WHERE
			 	CMS_RISK_MAPPING.MAPPING_ID=#mappingId#
	</update>
	
		<insert id="updateMappingHistory" parameterClass="com.worldcheck.atlas.vo.masters.RisksHistoryVO">     
			
			<selectKey resultClass="int" type="pre" keyProperty="MAPPING_HIST_ID">
					SELECT CMS_RISK_MAPPING_HISTORY_SEQ.nextval AS VALUE FROM DUAL
			</selectKey>
			
		INSERT INTO 
			CMS_RISK_MAPPING_HISTORY
			
			
			(	CMS_RISK_MAPPING_HISTORY.MAPPING_HIST_ID,
				CMS_RISK_MAPPING_HISTORY.MAPPING_ID,
				CMS_RISK_MAPPING_HISTORY.ACTION,
				CMS_RISK_MAPPING_HISTORY.OLD_CLIENTCODE,
				CMS_RISK_MAPPING_HISTORY.OLD_REPORTTYPE ,
				CMS_RISK_MAPPING_HISTORY.OLD_SUBREPORTTYPE ,
				CMS_RISK_MAPPING_HISTORY.OLD_SUBJECTCOUNTRIES,
				CMS_RISK_MAPPING_HISTORY.OLD_RE,
				CMS_RISK_MAPPING_HISTORY.NEW_CLIENTCODE ,
				CMS_RISK_MAPPING_HISTORY.NEW_REPORTTYPE,
				CMS_RISK_MAPPING_HISTORY.NEW_SUBREPORTTYPE,
				CMS_RISK_MAPPING_HISTORY.NEW_SUBJECTCOUNTRIES ,
				CMS_RISK_MAPPING_HISTORY.NEW_RE,
				CMS_RISK_MAPPING_HISTORY.OLD_SUBJECT_TYPE,
				CMS_RISK_MAPPING_HISTORY.OLD_RISK_GROUP,
				CMS_RISK_MAPPING_HISTORY.OLD_VISIBLE_TO_CLIENT ,
				CMS_RISK_MAPPING_HISTORY.OLD_MAPPING_NAME ,
				CMS_RISK_MAPPING_HISTORY.NEW_SUBJECT_TYPE,
				CMS_RISK_MAPPING_HISTORY.NEW_RISK_GROUP,
				CMS_RISK_MAPPING_HISTORY.NEW_VISIBLE_TO_CLIENT,
				CMS_RISK_MAPPING_HISTORY.NEW_MAPPING_NAME,
				CMS_RISK_MAPPING_HISTORY.UPDATEDBY ,
				CMS_RISK_MAPPING_HISTORY.UPDATEDON 
			
			
			)
	VALUES
	(
				#MAPPING_HIST_ID#,
				#MAPPING_ID#,
				#ACTION#,
				#OLD_CLIENTCODE#,
				#OLD_REPORTTYPE#,
				#OLD_SUBREPORTTYPE#,
				#OLD_SUBJECTCOUNTRIES#,
				#OLD_RE#,
				#NEW_CLIENTCODE#,
				#NEW_REPORTTYPE#,
				#NEW_SUBREPORTTYPE#,
				#NEW_SUBJECTCOUNTRIES#,
				#NEW_RE#,
				to_number(#OLD_SUBJECT_TYPE#),
				to_number(#OLD_RISK_GROUP#),
				to_number(#OLD_VISIBLE_TO_CLIENT#),
				#OLD_MAPPING_NAME#,
				to_number(#NEW_SUBJECT_TYPE#),
				to_number(#NEW_RISK_GROUP#),
				to_number(#NEW_VISIBLE_TO_CLIENT#),
				#NEW_MAPPING_NAME#,
				#UPDATEDBY#,
				sysdate
				)
			  
		
	</insert>
	
	
	<insert id="addRisk" parameterClass="com.worldcheck.atlas.vo.masters.RisksMasterVO"> 	
		
	<!--	<selectKey resultClass="int" type="pre" keyProperty="riskId">
   				SELECT CMS_RISK_MASTER_TBL_SEQ.nextval AS VALUE FROM DUAL
  		</selectKey>-->
		
		INSERT INTO 
				CMS_RISK_MASTER_TBL
				(
					CMS_RISK_MASTER_TBL.RISK_CODE,
	   				CMS_RISK_MASTER_TBL.RISK_LABEL,
					CMS_RISK_MASTER_TBL.RISK_IS_ACTIVE,
					CMS_RISK_MASTER_TBL.RISK_CATEGORY_ID,
					CMS_RISK_MASTER_TBL.RISK_TYPE,
					CMS_RISK_MASTER_TBL.HAS_CNTRY_BRKDOWN,
					CMS_RISK_MASTER_TBL.DISPLAY_ON_PROFILE,
					CMS_RISK_MASTER_TBL.REMARKS,
					CMS_RISK_MASTER_TBL.CREATEDON,
					CMS_RISK_MASTER_TBL.UPDATEDBY,
					CMS_RISK_MASTER_TBL.UPDATEDON
				)
		VALUES
				(	
					#riskCode#,
					#riskLabel#,
					to_number(#riskIsActive#),
					to_number(#riskCategory#),
					to_number(#riskType#),
					to_number(#hasCountryBreakdown#),
					to_number(#displayOnProfileForm#),
					#remarks#,
					sysdate,
					#updatedBy#,
					sysdate				
				)
	 </insert>
	 
	 
	 <insert id="RISK_UPDATE_HISTORY" parameterClass="com.worldcheck.atlas.vo.masters.RisksMasterVO"> 	
		
		<selectKey resultClass="int" type="pre" keyProperty="historyId">
   				SELECT CMS_RISK_HISTORY_SEQ.nextval AS VALUE FROM DUAL
  		</selectKey>
		
		INSERT INTO 
				CMS_RISK_HISTORY
				(
							CMS_RISK_HISTORY.RISK_HISTORY_ID,
							CMS_RISK_HISTORY.RISK_CODE,
							CMS_RISK_HISTORY.ACTION,
							CMS_RISK_HISTORY.OLD_RISK_LABEL,
							CMS_RISK_HISTORY.NEW_RISK_LABEL,
							CMS_RISK_HISTORY.OLD_RISK_IS_ACTIVE,
							CMS_RISK_HISTORY.NEW_RISK_IS_ACTIVE,
							CMS_RISK_HISTORY.HAS_CNTRY_BRKDOWN,
							CMS_RISK_HISTORY.OLD_DISPLAY_ON_PROFILE,
							CMS_RISK_HISTORY.NEW_DISPLAY_ON_PROFILE,
							CMS_RISK_HISTORY.OLD_REMARK,
							CMS_RISK_HISTORY.NEW_REMARK,
							CMS_RISK_HISTORY.UPDATEDBY,
							CMS_RISK_HISTORY.UPDATEDON
				)
		VALUES
				(	#historyId#,
					#riskCode#,
					'Modified',
					#oldRiskLabel#,
					#riskLabel#,
					to_number(#oldRiskIsActive#),
					<isEqual property="oldRiskIsActive" compareValue="">
					to_number(#oldRiskIsActive#)
					</isEqual>
					<isNotEqual property="oldRiskIsActive" compareValue="">
					to_number(#riskIsActive#)
					</isNotEqual>,
					to_number(#hasCountryBreakdown#),
					to_number(#oldDisplayOnProfileForm#),
					<isEqual property="oldDisplayOnProfileForm" compareValue="">
					to_number(#oldDisplayOnProfileForm#)
					</isEqual>
					<isNotEqual property="oldDisplayOnProfileForm" compareValue="">
					to_number(#displayOnProfileForm#)
					</isNotEqual>,
					#oldRemarks#,
					#remarks#,
					#updatedBy#,
					sysdate				
				)
	 </insert>
	 
	 
	 
	 
	 
	 <insert id="addMapping" parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO"> 	
		
		<!--<selectKey resultClass="int" type="pre" keyProperty="mappingId">
   				SELECT CMS_RISK_MAPPING_SEQ.nextval AS VALUE FROM DUAL
  		</selectKey>-->
		INSERT INTO 
				CMS_RISK_MAPPING
				(	CMS_RISK_MAPPING.MAPPING_ID,
					CMS_RISK_MAPPING.RISK_CODE,
	   				CMS_RISK_MAPPING.MAPPING_NAME,
					CMS_RISK_MAPPING.MAPPING_STATUS,
					CMS_RISK_MAPPING.RISK_GROUP,
					CMS_RISK_MAPPING.SUBJECT_TYPE,
					CMS_RISK_MAPPING.VISIBLE_TO_CLIENT,
					CMS_RISK_MAPPING.CREATEDON,
					CMS_RISK_MAPPING.UPDATEDBY,
					CMS_RISK_MAPPING.UPDATEDON
					
				)
		VALUES
				(	#mappingId#,
					#riskCode#,
					#riskMappingName#,
					to_number(#mappingStatus#),
					to_number(#riskGroup#),
					to_number(#subjectType#),
					to_number(#visibleToClient#),
					sysdate,
					#updatedBy#,
					sysdate		
								
				)
	 </insert>
	  <insert id="addClient" parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO"> 	
		
		<selectKey resultClass="int" type="pre" keyProperty="id">
   				SELECT CMS_RISK_MAPPING_CLIENTS_SEQ.nextval AS VALUE FROM DUAL
  		</selectKey>
		INSERT INTO 
				CMS_RISK_MAPPING_CLIENTS
				(	CMS_RISK_MAPPING_CLIENTS.ID,
					CMS_RISK_MAPPING_CLIENTS.MAPPING_ID,
	   				CMS_RISK_MAPPING_CLIENTS.CLIENT_CODE
					
				)
		VALUES
				(	#id#,
					#mappingId#,
					#clientCodes#
								
				)
	 </insert>
	 
	  <insert id="addReport" parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO"> 	
		
		<selectKey resultClass="int" type="pre" keyProperty="id">
   				SELECT CMS_RISK_MAPPING_REPORTS_SEQ .nextval AS VALUE FROM DUAL
  		</selectKey>
		INSERT INTO 
				CMS_RISK_MAPPING_REPORTS
				(	CMS_RISK_MAPPING_REPORTS.ID,
					CMS_RISK_MAPPING_REPORTS.MAPPING_ID,
	   				CMS_RISK_MAPPING_REPORTS.REPORT_TYPE
					
				)
		VALUES
				(	#id#,
					#mappingId#,
					#reportTypes#
								
				)
	 </insert>
	 
	  <insert id="addSubReport" parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO"> 	
		
		<selectKey resultClass="int" type="pre" keyProperty="id">
   				SELECT CMS_RISK_MAPPING_SUBRPRTS_SEQ .nextval AS VALUE FROM DUAL
  		</selectKey>
		INSERT INTO 
				CMS_RISK_MAPPING_SUBREPORTS
				(	CMS_RISK_MAPPING_SUBREPORTS.ID,
					CMS_RISK_MAPPING_SUBREPORTS.MAPPING_ID,
	   				CMS_RISK_MAPPING_SUBREPORTS.SUB_REPORT_TYPE
				)
		VALUES
				(	#id#,
					#mappingId#,
					#subReportTypes#
								
				)
	 </insert>
	 
	 <insert id="addRE" parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO"> 	
		
		<selectKey resultClass="int" type="pre" keyProperty="id">
   				SELECT CMS_RISK_MAPPING_RE_SEQ .nextval AS VALUE FROM DUAL
  		</selectKey>
		INSERT INTO 
				CMS_RISK_MAPPING_RE
				(	CMS_RISK_MAPPING_RE.ID,
					CMS_RISK_MAPPING_RE.MAPPING_ID,
	   				CMS_RISK_MAPPING_RE.RESEARCH_ELEMENT
					
				)
		VALUES
				(	#id#,
					#mappingId#,
					#researchElements#
								
				)
	 </insert>
	 
	 <insert id="addCountry" parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO"> 	
		
		<selectKey resultClass="int" type="pre" keyProperty="id">
   				SELECT CMS_RISK_MAPPING_COUNTRY_SEQ .nextval AS VALUE FROM DUAL
  		</selectKey>
		INSERT INTO 
				CMS_RISK_MAPPING_COUNTRY
				(	CMS_RISK_MAPPING_COUNTRY.ID,
					CMS_RISK_MAPPING_COUNTRY.MAPPING_ID,
	   				CMS_RISK_MAPPING_COUNTRY.SUBJECT_COUNTRY
					
				)
		VALUES
				(	#id#,
					#mappingId#,
					#subjectCountry#
								
				)
	 </insert>
	 
	 
	 	 <insert id="addMappingHistory" parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO"> 	
		
		<selectKey resultClass="int" type="pre" keyProperty="historyMappingId">
   				SELECT CMS_RISK_MAPPING_HISTORY_SEQ.nextval AS VALUE FROM DUAL
  		</selectKey>
		INSERT INTO 
				CMS_RISK_MAPPING_HISTORY
					(	CMS_RISK_MAPPING_HISTORY.MAPPING_HIST_ID,
						CMS_RISK_MAPPING_HISTORY.MAPPING_ID,
						CMS_RISK_MAPPING_HISTORY.ACTION,
						CMS_RISK_MAPPING_HISTORY.OLD_CLIENTCODE,
						CMS_RISK_MAPPING_HISTORY.OLD_REPORTTYPE,
						CMS_RISK_MAPPING_HISTORY.OLD_SUBREPORTTYPE,
						CMS_RISK_MAPPING_HISTORY.OLD_SUBJECTCOUNTRIES,
						CMS_RISK_MAPPING_HISTORY.OLD_RE,
						CMS_RISK_MAPPING_HISTORY.OLD_SUBJECT_TYPE,
						CMS_RISK_MAPPING_HISTORY.OLD_RISK_GROUP,
						CMS_RISK_MAPPING_HISTORY.OLD_VISIBLE_TO_CLIENT,
						CMS_RISK_MAPPING_HISTORY.OLD_MAPPING_NAME,
						CMS_RISK_MAPPING_HISTORY.UPDATEDBY,
						CMS_RISK_MAPPING_HISTORY.UPDATEDON
					
				)
		VALUES
				(	
					#historyMappingId#,
					#mappingId#,
					'Added',
					#clientCodes#,
					#reportTypes#,
					#subReportTypes#,
					#subjectCountry#,
					#researchElements#,
					to_number(#subjectType#),
					to_number(#riskGroup#),
					to_number(#visibleToClient#),
					#riskMappingName#,
					#updatedBy#,
					sysdate		
													
				)
	 </insert>
	 
	
	 
	<!-- <insert id="add_Mapping" parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO"> 	
		
		<selectKey resultClass="int" type="pre" keyProperty="mappingId">
   				SELECT CMS_RISK_MAPPING_SEQ.nextval AS VALUE FROM DUAL
  		</selectKey>
		INSERT INTO 
				CMS_RISK_MAPPING
				(	CMS_RISK_MAPPING.MAPPING_ID,
					CMS_RISK_MAPPING.RISK_CODE,
	   				CMS_RISK_MAPPING.MAPPING_NAME,
					CMS_RISK_MAPPING.MAPPING_STATUS,
					CMS_RISK_MAPPING.RISK_GROUP,
					CMS_RISK_MAPPING.SUBJECT_TYPE,
					CMS_RISK_MAPPING.VISIBLE_TO_CLIENT,
					CMS_RISK_MAPPING.CREATEDON,
					CMS_RISK_MAPPING.UPDATEDBY,
					CMS_RISK_MAPPING.UPDATEDON
					
				)
		VALUES
				(	#mappingId#,
					#riskCode#,
					#riskMappingName#,
					to_number(#mappingStatus#),
					to_number(#riskGroup#),
					to_number(#subjectType#),
					to_number(#visibleToClient#),
					sysdate,
					#updatedBy#,
					sysdate		
								
				)
	 </insert>-->
	 
	  <insert id="addRiskHistory" parameterClass="com.worldcheck.atlas.vo.masters.RisksMasterVO"> 	
		
		<selectKey resultClass="int" type="pre" keyProperty="historyId">
   				SELECT CMS_RISK_HISTORY_SEQ.nextval AS VALUE FROM DUAL
  		</selectKey>
		INSERT INTO 
				CMS_RISK_HISTORY
				(	
							CMS_RISK_HISTORY.RISK_HISTORY_ID,
							CMS_RISK_HISTORY.RISK_CODE,
							CMS_RISK_HISTORY.ACTION,
							CMS_RISK_HISTORY.OLD_RISK_LABEL,
							CMS_RISK_HISTORY.NEW_RISK_LABEL,
							CMS_RISK_HISTORY.OLD_RISK_IS_ACTIVE,
							CMS_RISK_HISTORY.NEW_RISK_IS_ACTIVE,
							CMS_RISK_HISTORY.HAS_CNTRY_BRKDOWN,
							CMS_RISK_HISTORY.OLD_DISPLAY_ON_PROFILE,
							CMS_RISK_HISTORY.NEW_DISPLAY_ON_PROFILE,
							CMS_RISK_HISTORY.OLD_REMARK,
							CMS_RISK_HISTORY.NEW_REMARK,
							CMS_RISK_HISTORY.UPDATEDBY,
							CMS_RISK_HISTORY.UPDATEDON
				
				)
			
		VALUES
				(	#historyId#,
					#riskCode#,
					'Added',
					'',
					#riskLabel#,
					'',
					to_number(#riskIsActive#),
					to_number(#hasCountryBreakdown#),
					'',
					to_number(#displayOnProfileForm#),
					'',
					#remarks#,
					#updatedBy#,
					sysdate				
								
				)
	 </insert>

	 
	 
	 
	  <select id="searchExistRisk"  resultClass="java.lang.Integer" parameterClass="com.worldcheck.atlas.vo.masters.RisksMasterVO">
	   SELECT  
	   			COUNT(CMS_RISK_MASTER_TBL.RISK_LABEL) 
	   FROM 
	   			CMS_RISK_MASTER_TBL 
	   WHERE  
	   			UPPER(CMS_RISK_MASTER_TBL.RISK_LABEL) LIKE  UPPER(TRIM(#riskLabel#))   AND  CMS_RISK_MASTER_TBL.RISK_CATEGORY_ID = to_number(#riskCategory#)
     </select>
     
     
     
     
     <select id="checkAssociatedMaster"  resultClass="com.worldcheck.atlas.vo.masters.RisksMasterVO" parameterClass = "java.lang.String">
     SELECT * FROM
     (SELECT COUNT(CC.CRN) totalCRN FROM CMS_CLIENTCASE CC,CMS_SUBJECT cs ,CMS_SUBJECT_RISK csr WHERE CC.CRN = cs.CRN AND CC.CASE_STATUS_ID IN (1, 2, 3) AND 
		cs.SUBJECT_ID = csr.SUBJECT_ID AND
		csr.RISK_CODE=#riskCode#),
     (SELECT COUNT(SUBJECT_RISK_ID)subjectCount FROM CMS_SUBJECT_RISK WHERE RISK_CODE=#riskCode#) 
     
     </select>
     
	 <!-- Added by Juheen.For Search Page of Risk CR to get Risk History -->
<select id="getCaseHistoryOfRisk" resultMap="riskHistoryGrid" parameterClass = "com.worldcheck.atlas.vo.masters.RisksMasterVO">
		 select risk_history.action action,
				risk_history.has_cntry_brkdown countryBreakdown,
				risk_history.old_risk_label oldRiskLabel, 
				risk_history.new_risk_label newRiskLabel,
				risk_history.old_risk_is_active oldRiskStatus, 
				risk_history.new_risk_is_active newRiskStatus, 
				risk_history.old_display_on_profile oldDisplayOnProfile,
				risk_history.new_display_on_profile newDisplayOnProfile,
				risk_history.old_remark oldRemark,
				risk_history.new_remark newRemark,
				risk_history.updatedby updatedBy,
				risk_history.updatedon updatedOn
		from cms_risk_history risk_history, 
			 cms_risk_master_tbl risk_master
		where risk_history.risk_code=#riskCode#
		and risk_history.risk_code=risk_master.risk_code
		ORDER By 
		<isEqual property="sortColumnName" compareValue="updatedOn">
			risk_history.updatedon
		</isEqual>
		<isNotEqual property="sortColumnName" compareValue="updatedOn">
			 $sortColumnName$	
		</isNotEqual>
		 $sortType$
     </select>
	 
	 <!-- Added by Juheen.For Serach Page of Risk CR to get riskHistory count -->
	 <select id="getCaseHistoryOfRiskCount"  resultClass="int" parameterClass = "com.worldcheck.atlas.vo.masters.RisksMasterVO">
		select count(*)
		from cms_risk_history risk_history, 
			cms_risk_master_tbl risk_master
		where risk_history.risk_code = #riskCode#
		  and risk_history.risk_code = risk_master.risk_code
     </select>
     
	 	 
	 <!-- Added by Juheen.For Search Page of Risk CR to insert riskHistory for activation/deactivation -->
      <insert id="insert_risk_history" parameterClass="com.worldcheck.atlas.vo.masters.RisksMasterVO"> 	
		
		<selectKey resultClass="int" type="pre" keyProperty="historyId">
   				SELECT CMS_RISK_HISTORY_SEQ.nextval AS VALUE FROM DUAL
  		</selectKey>
		
		INSERT INTO 
				CMS_RISK_HISTORY
				(
							CMS_RISK_HISTORY.RISK_HISTORY_ID,
							CMS_RISK_HISTORY.RISK_CODE,
							CMS_RISK_HISTORY.ACTION,
							CMS_RISK_HISTORY.OLD_RISK_LABEL,
							CMS_RISK_HISTORY.NEW_RISK_LABEL,
							CMS_RISK_HISTORY.OLD_RISK_IS_ACTIVE,
							CMS_RISK_HISTORY.NEW_RISK_IS_ACTIVE,
							CMS_RISK_HISTORY.HAS_CNTRY_BRKDOWN,
							CMS_RISK_HISTORY.OLD_DISPLAY_ON_PROFILE,
							CMS_RISK_HISTORY.NEW_DISPLAY_ON_PROFILE,
							CMS_RISK_HISTORY.OLD_REMARK,
							CMS_RISK_HISTORY.NEW_REMARK,
							CMS_RISK_HISTORY.UPDATEDBY,
							CMS_RISK_HISTORY.UPDATEDON
				)
		VALUES
				(	#historyId#,
					#riskCode#,
					#action#,
					#oldRiskLabel#,
					#newRiskLabel#,
					#oldRiskStatus#,
					#newRiskStatus#,
					#countryBreakdown#,
					#oldDisplayOnProfile#,
					#newDisplayOnProfile#,
					#oldRemark#,
					#newRemark#,
					#updatedBy#,
					sysdate				
				)
	 </insert>
      <delete id="deleteRisk"  parameterClass = "java.lang.String">
     	delete from CMS_RISK_MASTER where RISK_CODE = #riskCode#
     </delete> 
	 
	  <select id="getRiskCategory"   resultMap="categoryVO" >
	  
	   SELECT CMS_RISK_CATEGORY_MASTER.RISK_CATEGORY_ID,
			  CMS_RISK_CATEGORY_MASTER.RISK_CATEGORY_NAME,
			  CMS_RISK_CATEGORY_MASTER.NOTES FROM CMS_RISK_CATEGORY_MASTER 
	   			
     </select>
	 <select id="getRiskAttributes"  resultMap="attributesVO" parameterClass="com.worldcheck.atlas.vo.masters.RisksMasterVO">

	 SELECT RCM.attribute_name, wm_concat(temp.value) as value , wm_concat(temp.notes) as notes from 
	(SELECT  cms_risk_attribute_value_map.VALUE,cms_risk_attribute_value_map.NOTES , cms_risk_category_attr_map.attribute_id
    FROM cms_risk_category_attr_map LEFT outer join cms_risk_attribute_value_map 
    ON cms_risk_category_attr_map.attribute_id= cms_risk_attribute_value_map.ATTRIBUTE_ID WHERE
     cms_risk_category_attr_map.risk_category_id = to_number(#riskCategory#))
	temp, cms_risk_category_attr_master RCM
	where temp.attribute_id= RCM.attribute_id
	GROUP BY RCM.attribute_name
	
	</select>
	
	<!--  <select id="getMapping"   resultMap="resultGridList" parameterClass="java.lang.Integer">
	
	   SELECT 		CMS_RISK_MAPPING.MAPPING_ID,
					CMS_RISK_MAPPING.RISK_CODE,
	   				CMS_RISK_MAPPING.MAPPING_NAME,
					CMS_RISK_MAPPING.MAPPING_STATUS,
					CMS_RISK_MAPPING.RISK_GROUP,
					CMS_RISK_MAPPING.SUBJECT_TYPE,
					CMS_RISK_MAPPING.VISIBLE_TO_CLIENT,
					CMS_RISK_MAPPING.CLIENT_CODES,
					CMS_RISK_MAPPING.REPORT_TYPES,
					CMS_RISK_MAPPING.SUB_REPORT_TYPES,
					CMS_RISK_MAPPING.SUBJECT_COUNTRIES,
					CMS_RISK_MAPPING.RESEARCH_ELEMENTS,
					CMS_RISK_MAPPING.UPDATEDBY,
					CMS_RISK_MAPPING.UPDATEDON FROM CMS_RISK_MAPPING
					
	  WHERE 
			CMS_RISK_MAPPING.MAPPING_ID = #mappingId# 
	   			
     </select>-->
<select id="getMapping"   resultMap="resultGridList" parameterClass="java.lang.Integer">	 
	 SELECT 	cms.MAPPING_ID,
        cms.RISK_CODE,
        cms.MAPPING_NAME,
        cms.MAPPING_STATUS,
        cms.RISK_GROUP,
        cms.SUBJECT_TYPE,
        cms.VISIBLE_TO_CLIENT,
        client.CLIENT_CODES,
        report.REPORT_TYPES,
        subReport.SUB_REPORT_TYPES,
        subCountry.SUBJECT_COUNTRY,
        re.RESEARCH_ELEMENTS,
        cms.UPDATEDBY,
        cms.UPDATEDON                   
FROM 
    (SELECT wm_concat(client_code) CLIENT_CODES
    FROM cms_risk_mapping_clients cmsc
    WHERE cmsc.mapping_Id = #mappingId#
    )
    client,
  
     (SELECT wm_concat(report_type) REPORT_TYPES
    FROM cms_risk_mapping_reports cmsr
    WHERE cmsr.mapping_Id = #mappingId#
    )
    report,
    
     (SELECT wm_concat(research_element) RESEARCH_ELEMENTS
    FROM cms_risk_mapping_re cmsre
    WHERE cmsre.mapping_Id = #mappingId#
    )
    re,
    
     (SELECT wm_concat(sub_report_type) SUB_REPORT_TYPES
    FROM cms_risk_mapping_subReports cmssr
    WHERE cmssr.mapping_Id = #mappingId#
    )
    subReport,
    
     (SELECT wm_concat(subject_Country) SUBJECT_COUNTRY
    FROM cms_risk_mapping_country cmssc
    WHERE cmssc.mapping_Id = #mappingId#
    )
    subCountry,

CMS_RISK_MAPPING cms

WHERE 
cms.MAPPING_ID = #mapping_Id#

 </select>

	
		
	<insert id="CHANGE_HISTORY_STATUS" parameterClass="java.util.Map">     
			
			<selectKey resultClass="int" type="pre" keyProperty="MAPPING_HIST_ID">
					SELECT CMS_RISK_MAPPING_HISTORY_SEQ.nextval AS VALUE FROM DUAL
			</selectKey>
			
		INSERT INTO 
			CMS_RISK_MAPPING_HISTORY
			
			
			(	CMS_RISK_MAPPING_HISTORY.MAPPING_HIST_ID,
				CMS_RISK_MAPPING_HISTORY.MAPPING_ID,
				CMS_RISK_MAPPING_HISTORY.ACTION,
				CMS_RISK_MAPPING_HISTORY.UPDATEDBY,
				CMS_RISK_MAPPING_HISTORY.UPDATEDON 
			
			
			)
	VALUES
	(
				#MAPPING_HIST_ID#,
				#MAPPING_ID#,
				<isEqual property="status" compareValue="0">
				  	'Activated'
				</isEqual>
				<isEqual property="status" compareValue="1">
				   'Deactivated'
			  </isEqual>,
				#updatedBy#,
				sysdate
				)
			  
		
	</insert>
	
	<select id="getMappingHistoryCount" resultClass="int" parameterClass="java.lang.Integer"> 
    SELECT count(*)
    FROM 
    	CMS_RISK_MAPPING_HISTORY WHERE CMS_RISK_MAPPING_HISTORY.MAPPING_ID = to_number(#mappingId#)
   </select> 
   
   <select id="GET_RISKID" resultClass="int" > 
    SELECT CMS_RISK_MASTER_TBL_SEQ.nextval AS VALUE FROM DUAL
   </select> 
   
    <select id="GET_MAPPING_ID" resultClass="int" > 
    SELECT CMS_RISK_MAPPING_SEQ.nextval AS VALUE FROM DUAL
   </select> 
   
   <delete id="deleteClient"  parameterClass = "java.lang.Integer">
     	delete from CMS_RISK_MAPPING_CLIENTS where MAPPING_ID = #deleteMappigId#
   </delete> 
   
   <delete id="deleteReport"  parameterClass = "java.lang.Integer">
     	delete from CMS_RISK_MAPPING_REPORTS where MAPPING_ID = #deleteMappigId#
   </delete> 
   
   <delete id="deleteSubReport"  parameterClass = "java.lang.Integer">
     	delete from CMS_RISK_MAPPING_SUBREPORTS where MAPPING_ID = #deleteMappigId#
   </delete> 
   
   <delete id="deleteRE"  parameterClass = "java.lang.Integer">
     	delete from CMS_RISK_MAPPING_RE where MAPPING_ID = #deleteMappigId#
   </delete> 
   
   <delete id="deleteCountry"  parameterClass = "java.lang.Integer">
     	delete from CMS_RISK_MAPPING_COUNTRY where MAPPING_ID = #deleteMappigId#
   </delete> 
   

	
	<!--<select id="getAllRisks" resultMap="resultGridList" parameterClass = "com.worldcheck.atlas.vo.masters.RisksMasterVO"> 
	SELECT 
		cms.MAPPING_ID,
		cms.MAPPING_NAME,
		cms.MAPPING_STATUS,
		cms.RISK_GROUP,
		cms.SUBJECT_TYPE,
		cms.VISIBLE_TO_CLIENT,
		client.CLIENT_CODES,
		re.RESEARCH_ELEMENTS,
		report.REPORT_TYPES,
		subreport.SUB_REPORT_TYPES,
		cms.UPDATEDBY,
        cms.UPDATEDON,
		subCountry.SUBJECT_COUNTRY

	FROM
	
	  (SELECT dd.mapping_id,
     LISTAGG(dfd.client_code ,',') WITHIN GROUP (ORDER BY dfd.client_code) AS CLIENT_CODES
	   FROM cms_risk_mapping dd
	   INNER JOIN
		(SELECT client_code,
		   mapping_id
		 FROM cms_risk_mapping_clients)
	  dfd ON dfd.mapping_id = dd.mapping_id
	   WHERE dd.risk_code = #riskCode#
	   GROUP BY dd.mapping_id)
	client,
		(SELECT dd.mapping_id,
		 LISTAGG(research_element ,',') WITHIN GROUP (ORDER BY research_element) AS RESEARCH_ELEMENTS 
	   FROM cms_risk_mapping dd
	   INNER JOIN
		(SELECT research_element,
		   mapping_id
		 FROM cms_risk_mapping_re)
	  dfds ON dfds.mapping_id = dd.mapping_id
	   WHERE dd.risk_code = #riskCode#
	   GROUP BY dd.mapping_id)
	re,
		(SELECT dd.mapping_id,
    LISTAGG(report_type ,',') WITHIN GROUP (ORDER BY report_type) AS REPORT_TYPES
	   FROM cms_risk_mapping dd
	   INNER JOIN
		(SELECT report_type,
		   mapping_id
		 FROM cms_risk_mapping_reports)
	  dfds ON dfds.mapping_id = dd.mapping_id
	   WHERE dd.risk_code = #riskCode#
	   GROUP BY dd.mapping_id)
	report,
		(SELECT dd.mapping_id,
     LISTAGG(sub_report_type ,',') WITHIN GROUP (ORDER BY sub_report_type) AS SUB_REPORT_TYPES
	   FROM cms_risk_mapping dd
	   INNER JOIN
		(SELECT sub_report_type,
		   mapping_id
		 FROM cms_risk_mapping_subreports)
	  dfds ON dfds.mapping_id = dd.mapping_id
	   WHERE dd.risk_code = #riskCode#
	   GROUP BY dd.mapping_id)
	subreport,
	
		(SELECT dd.mapping_id,
     LISTAGG(subject_country ,',') WITHIN GROUP (ORDER BY subject_country) AS SUBJECT_COUNTRY
	   FROM cms_risk_mapping dd
	   INNER JOIN
		(SELECT subject_country,
		   mapping_id
		 FROM cms_risk_mapping_country)
	  dfds ON dfds.mapping_id = dd.mapping_id
	   WHERE dd.risk_code = #riskCode#
	   GROUP BY dd.mapping_id)
	subCountry,
   CMS_RISK_MAPPING cms
  WHERE cms.mapping_Id =  re.mapping_id and   
  re.mapping_id = client.mapping_id and 
	client.mapping_id = report.mapping_id and 
	report.mapping_id = subReport.mapping_id and 
	subReport.mapping_id = subCountry.mapping_id

	 order by UPDATEDON DESC
	</select>-->
	
	<select id="getAllRisks" resultMap="resultGridList" parameterClass = "com.worldcheck.atlas.vo.masters.RisksMasterVO"> 
	SELECT 
		cms.MAPPING_ID,
		cms.MAPPING_NAME,
		cms.MAPPING_STATUS,
		cms.RISK_GROUP,
		cms.SUBJECT_TYPE,
		cms.VISIBLE_TO_CLIENT,
		client.CLIENT_CODES,
		re.RESEARCH_ELEMENTS,
		report.REPORT_TYPES,
		subreport.SUB_REPORT_TYPES,
		cms.UPDATEDBY,
        cms.UPDATEDON,
		subCountry.SUBJECT_COUNTRY

	FROM
	
	  (SELECT dd.mapping_id,
     concatclobagg(dfd.client_code) AS CLIENT_CODES
	   FROM cms_risk_mapping dd
	   INNER JOIN
		(SELECT client_code,
		   mapping_id
		 FROM cms_risk_mapping_clients)
	  dfd ON dfd.mapping_id = dd.mapping_id
	   WHERE dd.risk_code = #riskCode#
	   GROUP BY dd.mapping_id)
	client,
		(SELECT dd.mapping_id,
		 concatclobagg(research_element) AS RESEARCH_ELEMENTS 
	   FROM cms_risk_mapping dd
	   INNER JOIN
		(SELECT research_element,
		   mapping_id
		 FROM cms_risk_mapping_re)
	  dfds ON dfds.mapping_id = dd.mapping_id
	   WHERE dd.risk_code = #riskCode#
	   GROUP BY dd.mapping_id)
	re,
		(SELECT dd.mapping_id,
    concatclobagg(report_type) AS REPORT_TYPES
	   FROM cms_risk_mapping dd
	   INNER JOIN
		(SELECT report_type,
		   mapping_id
		 FROM cms_risk_mapping_reports)
	  dfds ON dfds.mapping_id = dd.mapping_id
	   WHERE dd.risk_code = #riskCode#
	   GROUP BY dd.mapping_id)
	report,
		(SELECT dd.mapping_id,
     concatclobagg(sub_report_type) AS SUB_REPORT_TYPES
	   FROM cms_risk_mapping dd
	   INNER JOIN
		(SELECT sub_report_type,
		   mapping_id
		 FROM cms_risk_mapping_subreports)
	  dfds ON dfds.mapping_id = dd.mapping_id
	   WHERE dd.risk_code = #riskCode#
	   GROUP BY dd.mapping_id)
	subreport,
	
		(SELECT dd.mapping_id,
     concatclobagg(subject_country) AS SUBJECT_COUNTRY
	   FROM cms_risk_mapping dd
	   INNER JOIN
		(SELECT subject_country,
		   mapping_id
		 FROM cms_risk_mapping_country)
	  dfds ON dfds.mapping_id = dd.mapping_id
	   WHERE dd.risk_code = #riskCode#
	   GROUP BY dd.mapping_id)
	subCountry,
   CMS_RISK_MAPPING cms
  WHERE cms.mapping_Id =  re.mapping_id and   
  re.mapping_id = client.mapping_id and 
	client.mapping_id = report.mapping_id and 
	report.mapping_id = subReport.mapping_id and 
	subReport.mapping_id = subCountry.mapping_id

	 order by UPDATEDON DESC
	</select>

	
	 
    <!-- Added by Anurag for Risk profile  -->
    <update id="updateRiskProfileData" parameterClass="com.worldcheck.atlas.vo.masters.RiskProfileVO"> 
		UPDATE CMS_RISK_PROFILE	
		SET  CMS_RISK_PROFILE.ATTRIBUTE_VALUE = #newattrValue# ,
		CMS_RISK_PROFILE.UPDATEDBY = #updatedBy#, CMS_RISK_PROFILE.UPDATEDON = sysdate
		WHERE CMS_RISK_PROFILE.RISK_CODE = #riskCode# 
		AND CMS_RISK_PROFILE.ATTRIBUTE_ID = #attributeId#
		AND CMS_RISK_PROFILE.CRN = #CRN#
		AND CMS_RISK_PROFILE.RISK_CATEGORY_ID = #riskCategoryId#
		<isGreaterThan prepend="AND" property = "subjectId" compareValue="0">
			CMS_RISK_PROFILE.SUBJECT_ID = #subjectId#
		</isGreaterThan>
		 
	</update>

	<insert id="insertRiskProfileDataWithSubject" parameterClass="com.worldcheck.atlas.vo.masters.RiskProfileVO"> 	
	
	<selectKey resultClass="int" type="pre" keyProperty="riskProfileId">
			SELECT CMS_RISK_PROFILE_SEQ.nextval AS VALUE FROM DUAL
	</selectKey>
	
	    INSERT INTO 
			CMS_RISK_PROFILE
			(
				CMS_RISK_PROFILE.RISK_PROFILE_ID,
				CMS_RISK_PROFILE.RISK_CATEGORY_ID,
				CMS_RISK_PROFILE.RISK_CODE,
				CMS_RISK_PROFILE.CRN,
				CMS_RISK_PROFILE.ATTRIBUTE_ID,
				CMS_RISK_PROFILE.ATTRIBUTE_VALUE,
				CMS_RISK_PROFILE.SUBJECT_ID,
				CMS_RISK_PROFILE.RISK_TYPE,
				CMS_RISK_PROFILE.IS_RISK_APPLIED,
				CMS_RISK_PROFILE.IS_RISK_MANDATORY,
				CMS_RISK_PROFILE.UPDATEDBY,
				CMS_RISK_PROFILE.UPDATEDON
			
			)
	    VALUES
			(	
				#riskProfileId#,
				#riskCategoryId#,
				#riskCode#,
				#CRN#,
				#attributeId#,
				#newattrValue#,
				#subjectId#,
				#riskType#,
				1,
				0,
				#updatedBy#,
				sysdate
			)
    </insert>

	<insert id="insertRiskProfileDataWithoutSubject" parameterClass="com.worldcheck.atlas.vo.masters.RiskProfileVO"> 	
	
	<selectKey resultClass="int" type="pre" keyProperty="riskProfileId">
			SELECT CMS_RISK_PROFILE_SEQ.nextval AS VALUE FROM DUAL
	</selectKey>
	
	    INSERT INTO 
			CMS_RISK_PROFILE
			(
				CMS_RISK_PROFILE.RISK_PROFILE_ID,
				CMS_RISK_PROFILE.RISK_CATEGORY_ID,
				CMS_RISK_PROFILE.RISK_CODE,
				CMS_RISK_PROFILE.CRN,
				CMS_RISK_PROFILE.ATTRIBUTE_ID,
				CMS_RISK_PROFILE.ATTRIBUTE_VALUE,
				CMS_RISK_PROFILE.RISK_TYPE,
				CMS_RISK_PROFILE.IS_RISK_APPLIED,
				CMS_RISK_PROFILE.IS_RISK_MANDATORY,
				CMS_RISK_PROFILE.UPDATEDBY,
				CMS_RISK_PROFILE.UPDATEDON
			
			)
	    VALUES
			(	
				#riskProfileId#,
				#riskCategoryId#,
				#riskCode#,
				#CRN#,
				#attributeId#,
				#newattrValue#,
				#riskType#,
				1,
				0,
				#updatedBy#,
				sysdate
			)
    </insert>

	<update id="updateRiskProfileDataWithHBD" parameterClass="com.worldcheck.atlas.vo.masters.RiskProfileVO"> 


		UPDATE CMS_RISK_PROFILE_HAS_CNTRY_BD 
		SET  CMS_RISK_PROFILE_HAS_CNTRY_BD.ATTRIBUTE_VALUE = #newattrValue# ,
		CMS_RISK_PROFILE_HAS_CNTRY_BD.UPDATEDBY = #updatedBy#,
		CMS_RISK_PROFILE_HAS_CNTRY_BD.UPDATEDON = sysdate
		WHERE CMS_RISK_PROFILE_HAS_CNTRY_BD.RISK_PROFILE_ID = #riskProfileId# 
		AND CMS_RISK_PROFILE_HAS_CNTRY_BD.ATTRIBUTE_ID = #attributeId# 
		AND CMS_RISK_PROFILE_HAS_CNTRY_BD.COUNTRY_MASTER_ID=#countryId#
		
						

	</update>	

	<update id="updateSubjectDataWithIndusCode" parameterClass="com.worldcheck.atlas.vo.masters.RiskProfileVO"> 

		UPDATE CMS_SUBJECT
		SET							
					CMS_SUBJECT.INDUSTRY_CODE = #industryCode# ,
					CMS_SUBJECT.UPDATED_BY = #updatedBy# ,
					CMS_SUBJECT.UPDATED_ON = SYSDATE 
					
			  WHERE
					CMS_SUBJECT.SUBJECT_ID = #subjectId#
						

	</update>	

	

	<resultMap id="riskHistoryResultMap" class="com.worldcheck.atlas.vo.audit.RiskHistory">
		<result property="CRN" column="CRN"/>
		<result property="riskCategoryId" column="risk_category_id"/>
		<result property="riskCode" column="risk_code"/>
		<result property="country" column="Country"/>
		<result property="task" column="TASK"/>
		<result property="action" column="ACTION"/>
		<result property="updatedBy" column="UPDATEDBY"/>
		<result property="updatedOn" column="updatedOn"/>
		<result property="old_value" column="OLD_VALUE"/>
		<result property="new_value" column="NEW_VALUE"/>
	</resultMap>


	<select id="getRiskHistoryByRiskCode"  resultMap="riskHistoryResultMap" parameterClass="java.util.HashMap">

     SELECT * FROM (SELECT  a.*, ROWNUM rn FROM (   
	select crp.CRN,crp.risk_category_id,crp.risk_code,crp.TASK, crp.ACTION,
		cm.Country, 
		crp.OLD_VALUE, crp.NEW_VALUE, crp.UPDATEDBY, TO_CHAR(crp.UPDATEDON , 'DD-MM-YY HH24:MI:SS') AS updatedOn 
		from cms_risk_profile_history crp left join 
		cms_Country_Master cm on crp.COUNTRY_MASTER_ID = cm.COUNTRY_MASTER_ID 
					where crp.CRN = #CRN#
					AND crp.RISK_CODE = #riskCode#
		<isGreaterThan prepend="AND" property = "subID" compareValue="0">
			SUBJECT_ID = #subID#
		</isGreaterThan>

		<isEqual property="sort" compareValue="updatedOn">
				  order by crp.UPDATEDON $dir$ ,crp.HISTORY_ID
		</isEqual>  			
		<isNotEqual property="sort" compareValue="updatedOn">
		  	ORDER By upper($sort$) $dir$,crp.HISTORY_ID
	    </isNotEqual> 
		
		
	 ) a WHERE ROWNUM &lt;= #limit#) WHERE rn  >= #start#
     
     </select>

	 <select id="getProfileIdByRiskCode" resultClass="java.lang.Long" parameterClass="com.worldcheck.atlas.vo.masters.RiskProfileVO">
			select CMS_RISK_PROFILE.RISK_PROFILE_ID from CMS_RISK_PROFILE
			WHERE CMS_RISK_PROFILE.RISK_CODE = #riskCode#
			AND CMS_RISK_PROFILE.RISK_CATEGORY_ID = #riskCategoryId#
			AND CMS_RISK_PROFILE.CRN = #CRN#
			<isGreaterThan prepend="AND" property = "subjectId" compareValue="0">
				CMS_RISK_PROFILE.SUBJECT_ID = #subjectId#
			</isGreaterThan>
	 </select>

	 <select id="getRiskCountByRiskCode"  resultClass="java.lang.Integer" parameterClass="java.util.HashMap">

     select count(*) from cms_risk_profile_history
	 where crn = #crn#
	 AND risk_code = #riskCode#
	<isGreaterThan prepend="AND" property = "subID" compareValue="0">
			SUBJECT_ID = #subID#
	</isGreaterThan>
     
     </select>

	<insert id="insertRiskHistoryByRiskCode" parameterClass="com.worldcheck.atlas.vo.audit.RiskHistory"> 	
	
	<selectKey resultClass="int" type="pre" keyProperty="riskHistoryId">
			SELECT CMS_RISK_PROFILE_HISTORY_SEQ.nextval AS VALUE FROM DUAL
	</selectKey>
	
	INSERT INTO 
			CMS_RISK_PROFILE_HISTORY
			(
				CMS_RISK_PROFILE_HISTORY.HISTORY_ID,
				CMS_RISK_PROFILE_HISTORY.CRN,
				CMS_RISK_PROFILE_HISTORY.RISK_CATEGORY_ID,
				CMS_RISK_PROFILE_HISTORY.RISK_CODE,
				CMS_RISK_PROFILE_HISTORY.COUNTRY_MASTER_ID,
				CMS_RISK_PROFILE_HISTORY.ACTION,
				CMS_RISK_PROFILE_HISTORY.TASK,
				CMS_RISK_PROFILE_HISTORY.SUBJECT_ID,
				CMS_RISK_PROFILE_HISTORY.OLD_VALUE,
				CMS_RISK_PROFILE_HISTORY.NEW_VALUE,
				CMS_RISK_PROFILE_HISTORY.UPDATEDBY,
				CMS_RISK_PROFILE_HISTORY.UPDATEDON


			)
	VALUES
			(	
				#riskHistoryId#,
				#CRN#,
				#riskCategoryId#,
				#riskCode#,
				#countryMasterId#,
				#action#,
				#task#,
				#subjectId#,
				#oldInfo#,
				#newInfo#,
				#updatedBy#,
				sysdate				
			)
 </insert>

    <update id="updateAggregationDataWithRisk" parameterClass="com.worldcheck.atlas.vo.masters.RiskAggregationVO"> 

		UPDATE CMS_RISK_AGGREGATION
		SET							
					CMS_RISK_AGGREGATION.AGGREGATE_VALUE = #aggrValue#,
					CMS_RISK_AGGREGATION.UPDATEDBY = #updatedBy#,
					CMS_RISK_AGGREGATION.UPDATEDON = sysdate
					
			  WHERE
					CMS_RISK_AGGREGATION.CRN = #crn#
					AND CMS_RISK_AGGREGATION.RISK_CATEGORY_ID = #catId#
					AND CMS_RISK_AGGREGATION.SUBJECT_ID = #subId#
					AND CMS_RISK_AGGREGATION.RISK_TYPE = #riskType#
						

	</update>	
	 <update id="updateTotalAggregationDataWithRisk" parameterClass="com.worldcheck.atlas.vo.masters.TotalRiskAggregationVO"> 

		UPDATE CMS_RISK_TOTAL_AGGREGATION
		SET							
					CMS_RISK_TOTAL_AGGREGATION.OVERALL_CASE_LEVEL_AGGRN = #totalCaseLevelAggrValue#,
					CMS_RISK_TOTAL_AGGREGATION.OVERALL_SUBJECT_LEVEL_AGGRN = #totalSubLevelAggrValue#,
					CMS_RISK_TOTAL_AGGREGATION.OVERALL_CRN_LEVEL_AGGRN = #totalCRNLevelAggrValue#,
					CMS_RISK_TOTAL_AGGREGATION.UPDATEDBY = #updatedBy#,
					CMS_RISK_TOTAL_AGGREGATION.UPDATEDON = sysdate
					
			  WHERE
					CMS_RISK_TOTAL_AGGREGATION.CRN = #crn#
					
	</update>
	

 <insert id="insertAggregationDataWithRisk" parameterClass="com.worldcheck.atlas.vo.masters.RiskAggregationVO"> 	
	
	<selectKey resultClass="int" type="pre" keyProperty="riskAggrId">
			SELECT CMS_RISK_AGGREGATION_SEQ.nextval AS VALUE FROM DUAL
	</selectKey>
	
	INSERT INTO 
			CMS_RISK_AGGREGATION
			(
				CMS_RISK_AGGREGATION.RISK_AGGREGATION_ID,
				CMS_RISK_AGGREGATION.CRN,
				CMS_RISK_AGGREGATION.RISK_CATEGORY_ID,
				CMS_RISK_AGGREGATION.SUBJECT_ID,
				CMS_RISK_AGGREGATION.RISK_TYPE,
				CMS_RISK_AGGREGATION.AGGREGATE_VALUE,
				CMS_RISK_AGGREGATION.UPDATEDBY,
				CMS_RISK_AGGREGATION.UPDATEDON
			
			)
	VALUES
			(	
				#riskAggrId#,
				#crn#,
				#catId#,
				#subId#,
				#riskType#,
				#aggrValue#,
				#updatedBy#,
				sysdate
			)
 </insert>
 <select id="getTotalAggrIdByCRN" resultClass="java.lang.Integer" parameterClass="com.worldcheck.atlas.vo.masters.RiskProfileVO">
			select TOTAL_AGGREGATION_ID from CMS_RISK_TOTAL_AGGREGATION
			WHERE CRN = #CRN#
 </select>
 <update id="updateEachSubjectAggregationData" parameterClass="com.worldcheck.atlas.vo.SubjectLevelAggregation"> 

		UPDATE CMS_RISK_EACH_SUBJECT_AGGRN
		SET							
					CMS_RISK_EACH_SUBJECT_AGGRN.EACH_SUBJECT_LEVEL_AGGRN = #eachSubLvlAggr#,
					CMS_RISK_EACH_SUBJECT_AGGRN.UPDATEDBY = #updatedBy#,
					CMS_RISK_EACH_SUBJECT_AGGRN.UPDATEDON = sysdate
					
			  WHERE
					CMS_RISK_EACH_SUBJECT_AGGRN.CRN = #crn#
					AND CMS_RISK_EACH_SUBJECT_AGGRN.SUBJECT_ID = #subjectId#
					AND CMS_RISK_EACH_SUBJECT_AGGRN.TOTAL_AGGREGATION_ID = #totalAggregationId#
					
	</update>

 

<!-- Ended by Anurag for Risk [profile CR-->
	 
 <select id="getLHSClientList" resultClass="com.worldcheck.atlas.vo.masters.ClientMasterVO" 
 parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO"> 
		SELECT
		CLIENT_CODE clientCode,CLIENT_NAME clientName,CLIENT_CODE||'-'||CLIENT_NAME codeName FROM
		CMS_CLIENT_MASTER WHERE STATUS = 1 
		 <isNotNull property="elementsData">
		  <isNotEmpty prepend="AND" property="elementsData">
				($elementsData$)
			</isNotEmpty>
		 </isNotNull>
		order by UPPER(CLIENT_CODE)
  </select>  

  <select id="getRHSClientList" resultClass="com.worldcheck.atlas.vo.masters.ClientMasterVO" 
  parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO"> 
		SELECT
		CLIENT_CODE clientCode,CLIENT_NAME clientName,CLIENT_CODE||'-'||CLIENT_NAME codeName FROM
		CMS_CLIENT_MASTER WHERE STATUS = 1
		 <isNotNull property="elementsData">
		  <isNotEmpty prepend="AND" property="elementsData">
				($elementsData$)
			</isNotEmpty>
		 </isNotNull>
		order by UPPER(CLIENT_CODE)
  </select>  
  
   <select id="getLHSCountryList" resultClass="com.worldcheck.atlas.vo.masters.CountryMasterVO" 
 parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO"> 
		SELECT CODE countryCode,COUNTRY country,COUNTRY_MASTER_ID countryMasterId,IS_ENG_COUNTRY englishCountry
		FROM CMS_COUNTRY_MASTER WHERE STATUS = 1
		 <isNotNull property="listOfElements">
		 <isNotEmpty property="listOfElements">
				and COUNTRY_MASTER_ID not in
			 <iterate property="listOfElements" open="(" close=")" conjunction=",">
				to_number(#listOfElements[]#)
			 </iterate>
		 </isNotEmpty>
		 </isNotNull>
		order by UPPER(COUNTRY)
  </select>  

  <select id="getRHSCountryList" resultClass="com.worldcheck.atlas.vo.masters.CountryMasterVO" 
  parameterClass="com.worldcheck.atlas.vo.masters.RisksMapVO"> 
		SELECT CODE countryCode,COUNTRY country,COUNTRY_MASTER_ID countryMasterId,IS_ENG_COUNTRY englishCountry
		FROM CMS_COUNTRY_MASTER WHERE STATUS = 1
		 <isNotNull property="listOfElements">
		 <isNotEmpty property="listOfElements">
				and COUNTRY_MASTER_ID in
			 <iterate property="listOfElements" open="(" close=")" conjunction=",">
				to_number(#listOfElements[]#)
			 </iterate>
		 </isNotEmpty>
		 </isNotNull>
		order by UPPER(COUNTRY)
  </select>  

</sqlMap>
