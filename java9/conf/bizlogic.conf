#BizLogic specific parameters

# <param name="bizlogic.version">
#    <alias>BizLogic Server version</alias>
#    <visible>false</visible>
#    <description>BizLogic Server version.</description>
#    <legalvalues>ANY</legalvalues>
#    <group>DEBUGINFO</group>
# </param>

#bizlogic.version=

# <param name="bizlogic.server.id">
#    <alias>ID of BizLogic Server</alias>
#    <visible>false</visible>
#    <description>The unique bizlogic server instance id. If a value is not specified, the default value taken is host name. In cluster environments, if a value is specified for this parameter, it should be unique for each node in cluster.</description>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.server.id=

#Debug control flags for BizLogic

# <param name="bizlogic.debug.api">
#    <alias>BizLogic Server Debug Flag for API</alias>
#    <description>If set to true, prints the Bizlogic server api call information.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.api=false

# <param name="bizlogic.debug.util">
#    <alias>BizLogic Server Debug Flag for Utilities</alias>
#    <description>If set to true, prints the Bizlogic server utilities information.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.util=false

# <param name="bizlogic.debug.session">
#    <alias>BizLogic Server Debug Flag for Session Beans</alias>
#    <description>If set to true, prints the debug information for the BizLogic Server Session Beans.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.session=false

# <param name="bizlogic.debug.entity">
#    <alias>BizLogic Server Debug Flag for Entity Beans</alias>
#    <description>If set to true, prints the debug information for the BizLogic Server Entity beans.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.entity=false

# <param name="bizlogic.debug.engine">
#    <alias>BizLogic Server Debug Flag for Server Engine</alias>
#    <description>If set to true, prints debug information for the BizLogic Server Engine.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.engine=false

# <param name="bizlogic.debug.user">
#    <alias>BizLogic Server Debug Flag for User Session</alias>
#    <description>If set to true, prints the debug information for the BizLogic User Session.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.user=false

# <param name="bizlogic.debug.dao">
#    <alias>BizLogic Server Debug Flag for Data Access Objects(DAO)</alias>
#    <description>If set to true, prints the debug information for the BizLogic Server Data Access Objects.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.dao=false

# <param name="bizlogic.debug.ep">
#    <alias>BizLogic Server Debug Flag for External Performers</alias>
#    <description>If set to true, prints the debug information for adapter invocation.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.ep=false

# <param name="bizlogic.debug.clustering">
#    <alias>BizLogic Server Debug Flag for Cluster</alias>
#    <description>If set to true, print the debug information for the clustered environments.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.clustering=false

# <param name="bizlogic.debug.timeraction">
#    <alias>BizLogic Server Debug Flag for Timer Action</alias>
#    <description>If set to true, prints the debug information for overdue actions and other Timer Action services.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.timeraction=false

# <param name="bizlogic.debug.messaging">
#    <alias>BizLogic Server Debug Flag for BizLogic Messaging</alias>
#    <description>If set to true, prints the debug information for BizLogic Server Messaging.</description>
#    <visible>false</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
# </param>

bizlogic.debug.messaging=false

# <param name="bizlogic.debug.create">
#    <alias>BizLogic Server Debug Flag for ProcessTemplate creation</alias>
#    <description>If set to true, prints the debug information of Process Template creation and initialization.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.create=false

# <param name="bizlogic.debug.jscript">
#    <alias>BizLogic Server Debug Flag for printing the jst.writeLog in scripts</alias>
#    <description>If set to true, prints the statements mentioned within jst.writeLog in scripts.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.jscript=false

# <param name="bizlogic.debug.flow">
#    <alias>BizLogic Server Debug Flag for printing the process debug informations</alias>
#    <description>If set to true, prints the trace informations during process debug.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.flow=false

# <param name="bizlogic.debug.bizobject">
#    <alias>Business object debug flag</alias>
#    <description>If set to true, prints the debug information for all DML statements of business objects</description>
#    <visible>false</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.bizobject=false

# <param name="bizlogic.debug.cwi">
#    <alias>BizLogic collaborative workitem debug flag</alias>
#    <description>If set to true, prints the debug information for the collaborative workitem</description>
#    <visible>false</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.cwi=false

# <param name="bizlogic.debug.document">
#    <alias>BizLogic Server Debug Flag DMS</alias>
#    <description>If set to true, prints the DMS debug information.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.document=false

# <param name="bizlogic.debug.alerts">
#    <alias>BizLogic Server Debug Flag for Alerts</alias>
#    <description>If set to true, prints the Alerts debug information.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.alerts=false

# <param name="bizlogic.debug.precondition">
#    <alias>BizLogic Server Debug Flag for Pre-Condition/Wait for Condition</alias>
#    <description>If set to true, prints debug information related to Pre-Condition/Wait for Condition evaluation and results.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.precondition=false

# <param name="bizlogic.debug.subprocess">
#    <alias>BizLogic Server Debug Flag for Sub-Process.</alias>
#    <description>If set to true, prints debug information related to Sub-Process creation.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.subprocess=false

# <param name="bizlogic.debug.startup">
#    <alias>BizLogic Server Debug Flag for TimerAction/Overdue</alias>
#    <description>If set to true, prints debug information related to TimerAction/Overdue evaluation and results.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.startup=false

# <param name="bizlogic.debug.monitoring">
#    <alias>BizLogic Server Debug Flag for Monitoring process</alias>
#    <description>If set to true, prints the debug information for monitoring process related activities.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.monitoring=false

# <param name="bizlogic.debug.scheduler">
#    <alias>BizLogic Server Debug Flag for Scheduler</alias>
#    <description>If set to true, prints the debug information for scheduler related activities.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.debug.scheduler=false


# <param name="bizlogic.classloader.debug">
#    <alias>BizLogic Server Debug Flag for FileClassLoader</alias>
#    <description>If set to true, prints the debug information of FileClassLoader used for adapter loading.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>

bizlogic.classloader.debug=false

# <param name="bizlogic.classloader.application">
#    <alias>BizLogic Server Application class loader</alias>
#    <description>If set to true, loads all adapters of an application by same instance of FileClassLoader, otherwise by different instances</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
# </param>

bizlogic.classloader.application=true

# <param name="bizlogic.classloader.dynamic">
#    <alias>BizLogic Server dynamic class loader</alias>
#    <description>If set to true, loads the adapters dynamically on modification, otherwise not</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
# </param>
bizlogic.classloader.dynamic=true

# <param name="bizlogic.printEvent">
#    <alias>BizLogic Server Event Trace</alias>
#    <description>If true, prints information for each bizlogic event that is generated.</description>
#    <visible>false</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
# </param>

bizlogic.printEvent=false

# <param name="bizlogic.printStack">
#    <alias>BizLogicServer Trace</alias>
#    <description>If true, prints the stack trace when error occurs in BizLogic Server.</description>
#    <visible>false</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
# </param>

bizlogic.printStack=true


# <param name="bizlogic.cluster.session.timeout.byidletime">
#    <alias>Session Timeout by idle time or start time under clustering</alias>
#    <description>If true, the user session timeout will be calculated based on the session idle time. Otherwise, the user session will be timed out based on the session start time. Note: This property is only valid under clustering mode. When modified, Portal Server needs to be restarted</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>CLUSTERINFO</group>
# </param>
bizlogic.cluster.session.timeout.byidletime=false

# <param name="bizlogic.session.timeout">
#    <alias>Timeout for User Session</alias>
#    <description>The time in minutes after which the session expires if not used (for this period). In cluster, either idle or start time will be used based on property "Session Timeout by idle time". The value should be Greater than 1. Note: When modified, Portal Server needs to be restarted</description>
#    <visible>true</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>true</autoreload>
#    <group>SESSIONINFO</group>
# </param>

bizlogic.session.timeout=360

# <param name="bizlogic.session.maximum">
#    <alias>Maximum Allowable Connections to the server</alias>
#    <description>The maximum number of connections that are allowed on the server at any instant of time. A value of -1 can be used for unlimited connections.The value should be -1 or 5 and above</description>
#    <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
# </param>

bizlogic.session.maximum=-1

# <param name="bizlogic.session.cache.queues">
#    <alias>Queue names to be stored in UserProfile object of Session or not</alias>
#    <description>If both this parameter and the parameter sbm.queues in sbm.conf is true, then during session creation, the list of queues to which the user belongs to is cached. By default the caching is enabled.</description>
#    <visible>false</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>false</autoreload>
# </param>

bizlogic.session.cache.queues=true

# <param name="bizlogic.timer.schedule">
#    <alias>Timer schedule</alias>
#    <description>The time (in minutes) to schedule execution of overdue and other timer actions.Acceptable range is 1-30</description>
#    <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
#    <group>TIMERINFO</group>
# </param>

bizlogic.timer.schedule=3

# <param name="bizlogic.timer.schedule.session">
#    <alias>Timer schedule for session validation</alias>
#    <description>The time (in minutes) after which session validation timer tasks are scheduled. Default value is 15 minutes, the valid value range is 1-30 minutes. Notice: changing the value may affect the performance of BizLogic server.Acceptable range is 1-30</description>
#    <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
# </param>

bizlogic.timer.schedule.session=15

# <param name="bizlogic.timer.schedule.resumeworkstep">
#    <alias>Timer schedule for resume workstep</alias>
#    <description>The time (in minutes) after which workstep resuming timer tasks are scheduled. Default value is 1 minutes, the valid value range is 1-30 minutes. Notice: changing the value may affect the performance of BizLogic server.Acceptable range is 1-30</description>
#    <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
# </param>

bizlogic.timer.schedule.resumeworkstep=1

# <param name="bizlogic.timer.schedule.checkdue">
#    <alias>Timer schedule for workstep overdue check</alias>
#    <description>The time (in seconds) after which duedate checking timer tasks are scheduled. Max value range is 1800 seconds. Notice: changing the value may affect the performance of BizLogic server.Acceptable range is 1-1800</description>
#    <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
# </param>

bizlogic.timer.schedule.checkdue=30

# <param name="bizlogic.timer.onerror.skipactions">
#    <alias>Skip overdueActions on error</alias>
#    <description>If set to true, on error, skips all overdue actions including the erroneous one for that workstep instance. Overdue actions of other workstep instances are not affected. This property is true by default.</description>
#    <visible>false</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>false</autoreload>
# </param>

bizlogic.timer.onerror.skipactions=true

# <param name="bizlogic.ep.retries">
#    <alias>Number of retries for External Performer</alias>
#    <description>The number of retries before giving up EP execution in case of error. The default value is 2. WARNING: If this value is increased to a large number then it will affect the performance by generating a large number of events and messages. The value should be Greater than 0. </description>
#    <visible>false</visible>
#    <autoreload>false</autoreload>
#    <legalvalues>ANY</legalvalues>
# </param>

bizlogic.ep.retries=2

# <param name="bizlogic.ep.retry.interval">
#    <alias>Retry interval for External Performer</alias>
#    <description>The retry interval in seconds for External Performer execution in case of any errors. The default value is 15 seconds and the maximum value is 600 seconds. WARNING: If this value is increased to a large number then it will block more resources, increase concurrency, thereby deteriorating the performance. Acceptable range is 1-600 </description>
#    <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
# </param>

bizlogic.ep.retry.interval=15


# <param name="bizlogic.notifybyemail.fortask">
#    <alias>Sending Email notifications for task assignment or available task</alias>
#    <description>If true, enables email notifications for when a task gets assigned to a user or gets available to a user.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>EMAILINFO</group>
# </param>

bizlogic.notifybyemail.fortask=false

# <param name="bizlogic.email.reader.start">
#    <alias>Start Email Reader</alias>
#    <description> If true, starts the Email Reader at BizLogic startup. If enabled, workitem tasks can be completed by emails.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>false</autoreload>
#    <group>EMAILINFO</group>
# </param>

bizlogic.email.reader.start=false

# <param name="bizlogic.notifybyemail.onerror">
#    <alias>Sending Email notifications for exceptional conditions</alias>
#    <description>If true, enables email notifications for exceptional conditions. For example an exception occuring on workstep execution.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>EMAILINFO</group>
# </param>

bizlogic.notifybyemail.onerror=true

# <param name="bizlogic.notifybyemail.completewi">
#    <alias>Sending Email notifications when workitem is completed</alias>
#    <description>if true, email notifications are sent to performers who complete the workitem. This property is false by default.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>EMAILINFO</group>
# </param>

bizlogic.notifybyemail.completewi=false

# <param name="bizlogic.notifybyemail.available.performers">
#    <alias>Sending Email notifications to other performers in a group when one of the group performer assigns task to himself/herself.</alias>
#    <description>if true ,email notifications are sent to other group performers when one of the group performer assigns task to himself/herself. This property is false by default.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>EMAILINFO</group>
# </param>

bizlogic.notifybyemail.available.performers=false

# <param name="bizlogic.max.instruction.size">
#    <alias>Maximum size for instruction</alias>
#    <description>The maximum allowed size of the instruction String. The default value is 300. Please make sure the size is equal to or smaller than the length of instruction column in bizlogic_workstepinstance database table.</description>
#    <visible>false</visible>
#    <autoreload>false</autoreload>
#    <legalvalues>ANY</legalvalues>
# </param>

bizlogic.max.instruction.size=300

# <param name="bizlogic.max.milestone.size">
#    <alias>Maximum size for milestone</alias>
#    <description>The maximum allowed size of the milestone String. The default value is 255.Acceptable range is 100-255</description>
#    <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
# </param>

# This property is no longer used, hence it is deprecated.
bizlogic.max.milestone.size=255

# <param name="bizlogic.max.performer.size">
#    <alias>Maximum size for performer</alias>
#    <description>The maximum allowed size of the performer String. The default value is 255. This value is for workstep performer, which could be a single performer or a list of performers. Maximum size for individual performer is 64.Acceptable range is 64-255</description>
#    <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
# </param>

bizlogic.max.performer.size=255

# <param name="bizlogic.max.cwi.instruction.size">
#    <alias>Maximum size for instruction for collaborative workitem</alias>
#    <description>The maximum allowed size of the instruction String for collaborative workitem. The default value is 700. The size of instruction cannot be decreased below 100. Please make sure the size is equal to or smaller than the length of instruction column in bizlogic_cworkitem database table.</description>
#    <visible>false</visible>
#    <autoreload>false</autoreload>
#    <legalvalues>ANY</legalvalues>
# </param>

bizlogic.max.cwi.instruction.size=700

# <param name="bizlogic.max.response.size">
#    <alias>Maximum size for response</alias>
#    <description>The maximum allowed size of the response String. The default value is 1024. The size of response cannot be decreased below 100. Please make sure the size is equal to or smaller than the length of response column in bizlogic_workitem and bizlogic_cworkitem database table.</description>
#    <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
# </param>

bizlogic.max.response.size=1024

# <param name="bizlogic.max.notes.size">
#    <alias>Maximum size for notes</alias>
#    <description>The maximum allowed size of the notes String. The default value is 1024. The size of notes cannot be decreased below 1024. The size of notes cannot be increased above 32768. Please make sure the size is equal to or smaller than the length of notes column in bizlogic_process_notes database table.</description>
#    <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
# </param>

bizlogic.max.notes.size=1024


# <param name="bizlogic.group.members.validate">
#    <alias>Validate the Group members</alias>
#    <description>If set to true the members of the Group will be validated as valid users at the time of workitem creation. By default its value is false and hence the group members are assumed to be valid.</description>
#    <visible>false</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
# </param>

# This property is no longer used, hence it is deprecated.
bizlogic.group.members.validate=false

# <param name="bizlogic.performer.removeinvalid">
#    <alias>Remove invalid performers</alias>
#    <description>If set to true the invalid members will be removed from the final list while expanding the performers for creating workitems, otherwise not.By default its value is false.</description>
#    <visible>false</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
# </param>

bizlogic.performer.removeinvalid=false

# <param name="bizlogic.start.mconsole">
#    <alias>Start Running Dashboard</alias>
#    <description>If true, collection of DashBoard information is started at BizLogic startup.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>false</autoreload>
#    <group>STARTINFO</group>
# </param>

bizlogic.start.mconsole=true


# <param name="bizlogic.messaging.handler.location">
#    <alias>Message Handler location</alias>
#    <description>The location where handlers are kept. When no location specified, $SBM_HOME/ebmsapps directory will be assumed as the default location.</description>
#       <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
# </param>

bizlogic.messaging.handler.location=

# <param name="bizlogic.track.workitem.performer">
#    <alias>BizLogic Server tracking workitem performer flag</alias>
#    <description>To enable/disable workitem performer tracking. If set to true, all the workitem performers of the activated process instance will be remembered by BizLogic Server. Note: Turning on/off the flag only affects the process instance activated after it. Note: Disabling this property will affect getCompletedWorkitemPerformer API.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>false</autoreload>
#    <group>TRACKINFO</group>
# </param>
bizlogic.track.workitem.performer=true

# <param name="bizlogic.externalservice.suspend">
#    <alias>suspend on external service retstart</alias>
#    <description>To suspend the client connections on restart of external services or not</description>
#    <visible>false</visible>
#    <autoreload>false</autoreload>
#    <legalvalues>true|false</legalvalues>
# </param>
bizlogic.externalservice.suspend=true

# <param name="bizlogic.msg.retry.interval">
#    <alias>BizLogic External Performer activation retry interval</alias>
#    <description>The interval (in milliseconds) to wait when retrying for External Performer workstep activation.The value should not be greater than 2000</description>
#    <visible>false</visible>
#    <autoreload>true</autoreload>
#    <legalvalues>ANY</legalvalues>
# </param>
bizlogic.msg.retry.interval=600

# <param name="bizlogic.dl.sleepfirst">
#    <alias>Sleep first before External Performer execution</alias>
#    <description>To specify whether external performer sleeps for some time before commencing execution.</description>
#    <visible>false</visible>
#    <autoreload>false</autoreload>
#    <legalvalues>true|false</legalvalues>
# </param>
bizlogic.dl.sleepfirst=false

# <param name="bizlogic.dl.sleepfirst.interval">
#    <alias>Sleep first interval for External Performer</alias>
#    <description>The interval (in milliseconds), for External Performer to sleep first before execution</description>
#    <visible>false</visible>
#    <autoreload>false</autoreload>
#    <legalvalues>ANY</legalvalues>
# </param>
bizlogic.dl.sleepfirst.interval=30

# <param name="bizlogic.dl.ws.createallinstances">
#    <alias>Create all workstep instances during process instance activation.</alias>
#    <description>If true, all the workstep instances are created when a process instance is activated. Note: Changing the value may affect the performance of BizLogic server</description>
#    <visible>false</visible>
#    <autoreload>false</autoreload>
#    <legalvalues>true|false</legalvalues>
# </param>
bizlogic.dl.ws.createallinstances=false

# <param name="bizlogic.dl.transaction.rerun.count">
#    <alias>Transaction rerun count</alias>
#    <description>The maximum allowed transaction reruns. The default value is 2.Acceptable value is any positive value</description>
#    <visible>false</visible>
#    <autoreload>false</autoreload>
#    <legalvalues>ANY</legalvalues>
# </param>
bizlogic.dl.transaction.rerun.count=2

# <param name="bizlogic.jms.publishmsg.newtransaction">
#    <alias>Publish msg in new transaction</alias>
#    <description>If true, the adapter invocation JMS message will be sent in a new transaction. Else, the parent transaction will be used.</description>
#    <visible>false</visible>
#    <autoreload>false</autoreload>
#    <legalvalues>true|false</legalvalues>
# </param>
bizlogic.jms.publishmsg.newtransaction=false

# <param name="bizlogic.callback">
#    <alias>Bizlogic Callback notification</alias>
#    <description>BizLogic state changes will be be notified by invoking registered callback adapters.</description>
#    <visible>true</visible>
#    <autoreload>false</autoreload>
#    <legalvalues>true|false</legalvalues>
#    <group>CALLBACKINFO</group>
# </param>
bizlogic.callback=false

# <param name="bizlogic.entitybean.cache">
#    <alias>Bizlogic Entity Bean Caching</alias>
#    <description>Determines if BizLogic Entity beans will be cached after creation</description>
#    <visible>false</visible>
#    <autoreload>false</autoreload>
#    <legalvalues>true|false</legalvalues>
# </param>
bizlogic.entitybean.cache=false

# <param name="bizlogic.clustering">
#    <alias>Clustering Support Enabled</alias>
#    <description>This flag should be true if this server instance is participating in cluster. Warning: Changing this flag in single server installation, will cause erroneous results</description>
#    <visible>false</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>false</autoreload>
# </param>

bizlogic.clustering=false

# <param name="bizlogic.jms.cluster">
#    <alias>JMS Cluster Support Enabled</alias>
#    <description>This flag should be true if this server instance is participating in jms cluster. Warning: Changing this flag in single server installation, will cause erroneous results. Currently this flag is required only in the case of weblogic jms cluster.</description>
#    <visible>false</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>false</autoreload>
# </param>

bizlogic.jms.cluster=false

# <param name="bizlogic.calendar">
#    <alias>BizLogic Calendar</alias>
#    <description>If set to true, uses calendar to compute duedate.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>CALENDARINFO</group>
# </param>

bizlogic.calendar=true

# <param name="bizlogic.taskevent.bizduration">
#    <alias>Pass Business Duration for task events</alias>
#    <description>If set to true, uses calendar to compute business duration and passes it in event context for workitem and collaborative workitem events. If false, then normal duration is passed.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>CALENDARINFO</group>
# </param>

bizlogic.taskevent.bizduration=false

# <param name="bizlogic.ws.max.activationcount">
#    <alias>Maximum activation count for a Workstep</alias>
#    <description>This parameter gives the maximum count that a workstep can be executed in a loop. If it exceeds this count then the workstep will be suspended.</description>
#    <visible>false</visible>
#    <autoreload>true</autoreload>
#    <legalvalues>ANY</legalvalues>
# </param>

bizlogic.ws.max.activationcount=500

# <param name="bizlogic.ws.activationevent.outputslots">
#    <alias>Include output dataslot values with Workstep activation event</alias>
#    <description>If set to true, the output dataslots for a workstep will be included with Workstep activation event.</description>
#    <visible>false</visible>
#    <autoreload>true</autoreload>
#    <legalvalues>true|false</legalvalues>
# </param>

bizlogic.ws.activationevent.outputslots=true

# <param name="bizlogic.alert.cache">
#    <alias>Enable Alert cache for BizLogic</alias>
#    <description>This parameter tells if cache is enabled in Alerts library for BizLogic related alerts.</description>
#    <visible>false</visible>
#    <autoreload>true</autoreload>
#    <legalvalues>true|false</legalvalues>
# </param>

bizlogic.alert.cache=true

# <param name="bizlogic.alert.cache.size">
#    <alias>Alert cache size per Process Template</alias>
#    <description>This parameter provides size of Alerts cache per Process Template.</description>
#    <visible>false</visible>
#    <autoreload>true</autoreload>
#    <legalvalues>ANY</legalvalues>
# </param>

bizlogic.alert.cache.size=50

# <param name="bizlogic.autostart">
#    <alias>BizLogic Autostart</alias>
#    <description>If true, starts the Bizlogic server automatically on EJB server startup</description>
#    <visible>false</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>false</autoreload>
# </param>
bizlogic.autostart=true

# <param name="bizlogic.audit.max.events">
#    <alias>Specifies the maximum number of events that need to be shown on audit history page </alias>
#    <visible>false</visible>
#    <description>This parameter is used to control the number of events that need to be considered to be shown on audit history page. A value negative value or 0 will read all events which can have an performance impact</description>
#    <legalvalues>Any</legalvalues>
# </param>
bizlogic.audit.max.events=400

# <param name="publisher.debug.engine">
#    <alias>Debug Flag.</alias>
#    <description>If true, prints the debug information.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>DEBUGINFO</group>
# </param>
publisher.debug.engine=false

# <param name="publisher.printEvent">
#    <alias>Event Trace</alias>
#    <description>If true, prints event information in the log file.</description>
#    <visible>true</visible>
#    <legalvalues>true|false</legalvalues>
#    <autoreload>true</autoreload>
#    <group>EVTINFO</group>
# </param>
publisher.printEvent=false

# <param name="publisher.event.batch.size">
#    <alias>Batch size to process SBM events</alias>
#    <description>The maximum number of events retrieved by EventPublisher each time. Acceptable range is 30-300 </description>
#    <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
# </param>
publisher.event.batch.size=200

# <param name="publisher.event.transaction.size">
#    <alias>Transaction size to process events</alias>
#    <description>Number of events in each transaction.Acceptable range is 1-50 </description>
#    <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
# </param>
publisher.event.transaction.size=10

# <param name="publisher.sleep.time">
#    <alias>Timer interval for Event Publisher</alias>
#    <description>The number of milliseconds Event Publisher sleeps when there is no events to process. Acceptable range is 5000-60000 milliseconds </description>
#    <visible>false</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>false</autoreload>
# </param>
publisher.sleep.time=10000

# <param name="publisher.senders.list">
#    <alias>Comma separated list of senders</alias>
#    <description>Comma separated fully qualified class names of senders. For example: com.savvion.sbm.eventpublisher.sender.JMSSender, com.savvion.sbm.eventpublisher.sender.SimpleSender, common.externalperformers.SimpleEPSender </description>
#    <visible>true</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>true</autoreload>
#    <group>SNDINFO</group>
# </param>
publisher.senders.list=com.savvion.sbm.eventpublisher.sender.JMSSender

# <param name="publisher.default.filter.class">
#    <alias>Default filter class name</alias>
#    <description>Fully qualified class name for Default Filter Class.</description>
#    <visible>true</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>true</autoreload>
#    <group>FLTRINFO</group>
# </param>
publisher.default.filter.class=com.savvion.sbm.eventpublisher.filter.ANDFilter

# <param name="publisher.customclass.location">
#    <alias>Event Publisher Sender Location</alias>
#    <description>The location where user defined Sender or Filter Classes are kept. When no values are specified, $SBM_HOME/ebmsapps directory will be assumed as the default location.</description>
#    <visible>true</visible>
#    <legalvalues>ANY</legalvalues>
#    <autoreload>true</autoreload>
#    <group>CSTINFO</group>
# </param>
publisher.customclass.location=
