# Monitoring Event Processing job to process the external events. This job will be executed every 15 seconds.
# Default expression value = 0/15 * * * * ?
# Default batch size = 30. Minimum allowed = 1 and Maximum allowed = 900
smp.trigger.event.expression=0/15 * * * * ?
smp.job.event.batch=30

# Monitoring Wait WorkStep Processing job to process the Monitoring Wait WorkSteps. This job will be executed every 1 minute.
# Default expression value = 0 0/1 * * * ?
# Default batch size = 500. Minimum allowed = 1 and Maximum allowed = 900
smp.trigger.waitws.expression=0 0/1 * * * ?
smp.job.waitws.batch=500

# Monitoring Event History Processing job to move processed external events to history. This job will be executed every 2 minutes.
# Default expression value = 0 0/2 * * * ?
# Default batch size = 500. Minimum allowed = 1 and Maximum allowed = 900
smp.trigger.history.expression=0 0/2 * * * ?
smp.job.history.batch=500

# The max retry count for processing an event. If an event processing fails, before considering it as invalid, its 
# processing will be retried following number of times.
# Default = 10.
smp.event.max.retrycount=10

# The time interval (in seconds) after which an event will be retried if it failed in the previous try.
# Default = 180
smp.event.retryinterval=180

# The max retry count for processing an event. If an event could not be processed due to invalid process state on server, 
# before considering it as invalid, its processing will be retried following number of times.
# Default = -1 (Retry indefinitely)
smp.event.invalidstate.max.retrycount=-1

# The time interval (in seconds) after which an event will be retried if it failed due to invalid state of the Process 
# on server in the previous try.
# Default = 3600
smp.event.invalidstate.retryinterval=3600

# The boolean indicating whether to check BizStore for event External Instance Id.
smp.event.bizstore.uniqueid.check=true

# The Boolean indicating whether to sort the events using 'order by' during selection.
smp.eventselection.sortedorder=true

# Property indicating if external events should be purged.
smp.purge.event=false

# External events created before the mentioned days will be removed.
smp.purgeevent.created.before=90d

# Purge events cron job expression. Default expression value = 0 0 22 * * ?
smp.trigger.purgeevent.expression=0 0 22 * * ?

# <param name="smp.email.preferred.template.type">
#    <alias>email Template Type</alias>
#    <description>email template type for invalid event notification</description>
#    <defaultvalue>htl</defaultvalue>
#    <legalvalues>etl|htl</legalvalues>
# </param>

smp.email.preferred.template.type=htl

# <param name="smp.invalidevent.notify">
#    <alias>email Notify</alias>
#    <description>email notification control for invalid event </description>
#    <defaultvalue>false</defaultvalue>
#    <legalvalues>false|true</legalvalues>
# </param>

smp.invalidevent.notify=false

# <param name="smp.invalidevent.notify.email">
#    <alias>email ids </alias>
#    <description>if email notification is enabled, On invalid external event, notification 
#        will be sent to specified emailids with this property
#    </description>
#    <legalvalues>valid email ids </legalvalues>
#    <info>Use comma delimeter to specify multiple emailids</info>
# </param>

smp.invalidevent.notify.email=